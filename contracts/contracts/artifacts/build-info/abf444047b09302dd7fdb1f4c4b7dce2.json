{
	"id": "abf444047b09302dd7fdb1f4c4b7dce2",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.28",
	"solcLongVersion": "0.8.28+commit.7893614a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/CardInventory.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\n\r\nimport \"./Card.sol\";\r\n\r\ncontract CardInventory {\r\n    Card public cardNFT;\r\n    address public gameMaster;\r\n\r\n    constructor(address _cardNFT) {\r\n        cardNFT = Card(_cardNFT);\r\n        gameMaster = msg.sender;\r\n    }\r\n\r\n    modifier onlyGameMaster() {\r\n        require(msg.sender == gameMaster, \"Not authorized\");\r\n        _;\r\n    }\r\n\r\n    function giveCard(address to, uint cardType) external onlyGameMaster returns (uint) {\r\n        return cardNFT.mintCard(to, cardType);\r\n    }\r\n\r\n    function getUserCards(address user) external view returns (uint[] memory) {\r\n        return cardNFT.tokensOfOwner(user);\r\n    }\r\n\r\n    function getCardType(uint tokenId) external view returns (uint) {\r\n        return cardNFT.cardTypes(tokenId);\r\n    }\r\n\r\n    function getCardOwner(uint tokenId) external view returns (address) {\r\n        return cardNFT.ownerOf(tokenId);\r\n    }\r\n}\r\n"
			},
			"contracts/Card.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\n\r\ncontract Card {\r\n    string public name = \"CardGameCard\";\r\n    string public symbol = \"CGC\";\r\n\r\n    uint public nextTokenId;\r\n    mapping(uint => address) public ownerOf;\r\n    mapping(address => uint) public balanceOf;\r\n    mapping(uint => uint) public cardTypes;\r\n    mapping(uint => address) public tokenApprovals;\r\n\r\n    event Transfer(address indexed from, address indexed to, uint indexed tokenId);\r\n    event Approval(address indexed owner, address indexed approved, uint indexed tokenId);\r\n\r\n    address public gameMaster;\r\n\r\n    constructor(address _gameMaster) {\r\n        gameMaster = _gameMaster;\r\n    }\r\n\r\n    modifier onlyGame() {\r\n        require(msg.sender == gameMaster, \"Not authorized\");\r\n        _;\r\n    }\r\n\r\n    function mintCard(address to, uint cardType) external onlyGame returns (uint) {\r\n        uint tokenId = nextTokenId++;\r\n        ownerOf[tokenId] = to;\r\n        balanceOf[to]++;\r\n        cardTypes[tokenId] = cardType;\r\n        emit Transfer(address(0), to, tokenId);\r\n        return tokenId;\r\n    }\r\n\r\n    function approve(address to, uint tokenId) external {\r\n        require(msg.sender == ownerOf[tokenId], \"Not owner\");\r\n        tokenApprovals[tokenId] = to;\r\n        emit Approval(msg.sender, to, tokenId);\r\n    }\r\n\r\n    function getApproved(uint tokenId) public view returns (address) {\r\n        return tokenApprovals[tokenId];\r\n    }\r\n\r\n    function transferFrom(address from, address to, uint tokenId) public {\r\n        require(msg.sender == from || msg.sender == getApproved(tokenId), \"Not allowed\");\r\n        require(ownerOf[tokenId] == from, \"Invalid owner\");\r\n\r\n        ownerOf[tokenId] = to;\r\n        balanceOf[from]--;\r\n        balanceOf[to]++;\r\n        delete tokenApprovals[tokenId];\r\n\r\n        emit Transfer(from, to, tokenId);\r\n    }\r\n\r\n    function tokensOfOwner(address user) external view returns (uint[] memory) {\r\n        uint balance = balanceOf[user];\r\n        uint[] memory tokens = new uint[](balance);\r\n        uint count = 0;\r\n\r\n        for (uint i = 0; i < nextTokenId; i++) {\r\n            if (ownerOf[i] == user) {\r\n                tokens[count++] = i;\r\n                if (count == balance) break;\r\n            }\r\n        }\r\n\r\n        return tokens;\r\n    }\r\n}\r\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.deployedBytecode",
						"evm.methodIdentifiers"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"contracts/Card.sol": {
				"Card": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_gameMaster",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "cardTypes",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "gameMaster",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "cardType",
									"type": "uint256"
								}
							],
							"name": "mintCard",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "nextTokenId",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "tokenApprovals",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "tokensOfOwner",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"metadata": {
						"optimizer_settings": {
							"is_debug_logging_enabled": false,
							"is_fallback_to_size_enabled": false,
							"is_verify_each_enabled": false,
							"level_back_end": "Aggressive",
							"level_middle_end": "Aggressive",
							"level_middle_end_size": "Zero"
						},
						"revive_pallet_version": null,
						"revive_version": "0.1.0-dev.12+commit.66f9a4d.llvm-18.1.8",
						"solc_metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_gameMaster\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"cardTypes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"gameMaster\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"cardType\",\"type\":\"uint256\"}],\"name\":\"mintCard\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nextTokenId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tokenApprovals\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"tokensOfOwner\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Card.sol\":\"Card\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIfxa[r]EscLMVcul [j]Trpeulxa[r]cLgvifMCTUca[r]LSsTFOtfDnca[r]IulcscCTUtgvifMx[scCTUt] TOntnfDIulgvifMjmul[jul] VcTOcul jmul:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Card.sol\":{\"keccak256\":\"0x818b1d9c58ea846c38ccd812e4a54cbbb9a8732ed7a684e1c817ef5dc12ee5a6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ccfc03703e8707e3009aa619cacc1df4ec33dbfb4d6dfe5bf9043f585cee664c\",\"dweb:/ipfs/QmWoNvzz9mWbC2LGwSadR5faw1eGnfuSUDNUfeFCUZfxQ8\"]}},\"version\":1}",
						"solc_version": "0.8.28+commit.7893614a.Emscripten.clang"
					},
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					},
					"storageLayout": {
						"storage": [
							{
								"astId": 4,
								"contract": "contracts/Card.sol:Card",
								"label": "name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 7,
								"contract": "contracts/Card.sol:Card",
								"label": "symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 9,
								"contract": "contracts/Card.sol:Card",
								"label": "nextTokenId",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 13,
								"contract": "contracts/Card.sol:Card",
								"label": "ownerOf",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 17,
								"contract": "contracts/Card.sol:Card",
								"label": "balanceOf",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 21,
								"contract": "contracts/Card.sol:Card",
								"label": "cardTypes",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_uint256,t_uint256)"
							},
							{
								"astId": 25,
								"contract": "contracts/Card.sol:Card",
								"label": "tokenApprovals",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 43,
								"contract": "contracts/Card.sol:Card",
								"label": "gameMaster",
								"offset": 0,
								"slot": "7",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_uint256,t_uint256)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"evm": {
						"assembly": "// RO data = 0/0 bytes\n// RW data = 104/65664 bytes\n// Stack size = 16384 bytes\n\n// Instructions = 10668\n// Code size = 34542 bytes\n\n      : @0 (gas: 2)\n     0: i32 a2 = a0 >> 0x10\n     3: jump @6 if a2 != 0\n      : @1 (gas: 2)\n     6: a2 = 0x10001\n    11: jump @6 if a1 >=u a2\n      : @2 (gas: 4)\n    14: a1 = a1 + a0\n    17: i32 a1 = a1 + 0x1f\n    20: a1 = a1 & 0xffffffffffffffe0\n    23: jump @7 if a1 >=u 65537\n      : @3 (gas: 2)\n    29: a3 = i32 [0x20068]\n    34: jump @5 if a3 >=u a1\n      : @4 (gas: 4)\n    37: u32 [0x20068] = a1\n    42: a1 = 0x20080\n    47: a0 = a0 + a1\n    50: ret\n      : @5 (gas: 3)\n    52: a1 = 0x20080\n    57: a0 = a0 + a1\n    60: ret\n      : @6 (gas: 1)\n    62: trap\n      : @7 (gas: 1)\n    63: trap\n      : @8 (gas: 1)\n    64: jump @22 if a0 == a1\n      : @9 (gas: 9)\n    67: a3 = a1 << 0x20\n    70: a3 = a3 >> 0x20\n    73: a4 = a0 << 0x20\n    76: a4 = a4 >> 0x20\n    79: a4 = a4 + a2\n    82: a3 = a3 - a4\n    85: a4 = a2 << 0x1\n    88: a4 = -a4\n    90: jump @15 if a4 >=u a3\n      : @10 (gas: 1)\n    93: jump @19 if a0 >=u a1\n      : @11 (gas: 1)\n    96: jump @22 if a2 == 0\n      : @12 (gas: 3)\n    99: a2 = a2 + a0\n   102: a3 = a0\n   104: fallthrough\n      : @13 (gas: 6)\n   105: a4 = u8 [a1]\n   107: a1 = a1 + 0x1\n   110: a5 = a3 + 0x1\n   113: u8 [a3] = a4\n   115: a3 = a5\n   117: jump @13 if a5 != a2\n      : @14 (gas: 1)\n   120: jump @22\n      : @15 (gas: 1)\n   122: jump @22 if a2 == 0\n      : @16 (gas: 3)\n   125: a2 = a2 + a0\n   128: a3 = a0\n   130: fallthrough\n      : @17 (gas: 6)\n   131: a4 = u8 [a1]\n   133: a1 = a1 + 0x1\n   136: a5 = a3 + 0x1\n   139: u8 [a3] = a4\n   141: a3 = a5\n   143: jump @17 if a5 != a2\n      : @18 (gas: 1)\n   146: jump @22\n      : @19 (gas: 1)\n   148: jump @22 if a2 == 0\n      : @20 (gas: 2)\n   151: i32 a3 = a2 + 0xffffffffffffffff\n   154: fallthrough\n      : @21 (gas: 7)\n   155: a4 = a1 + a3\n   158: a4 = u8 [a4]\n   160: a2 = a2 + 0xffffffffffffffff\n   163: a5 = a0 + a3\n   166: u8 [a5] = a4\n   168: i32 a3 = a3 + 0xffffffffffffffff\n   171: jump @21 if a2 != 0\n      : @22 (gas: 1)\n   174: ret\n      : @23 (gas: 13)\n   176: sp = sp + 0xffffffffffffffd8\n   179: u64 [sp + 0x20] = ra\n   182: u64 [sp + 0x18] = s0\n   185: u64 [sp + 0x10] = s1\n   188: a2 = u64 [a1]\n   190: u64 [sp + 0x8] = a2\n   193: a2 = u64 [a1 + 0x8]\n   196: u64 [sp] = a2\n   198: s0 = u64 [a1 + 0x10]\n   201: s1 = u64 [a1 + 0x18]\n   204: i32 a0 = a0 + 0\n   206: a1 = 0x20\n   209: ra = 2, jump @0\n      : @24 [@dyn 1] (gas: 71)\n   214: a1 = reverse s1\n   216: a2 = reverse s0\n   218: a3 = u64 [sp]\n   220: a3 = reverse a3\n   222: a4 = u64 [sp + 0x8]\n   225: a4 = reverse a4\n   227: u8 [a0 + 0x18] = a4\n   230: u8 [a0 + 0x10] = a3\n   233: u8 [a0 + 0x8] = a2\n   236: u8 [a0] = a1\n   238: a5 = a4 >> 0x38\n   241: u8 [a0 + 0x1f] = a5\n   244: a5 = a4 >> 0x30\n   247: u8 [a0 + 0x1e] = a5\n   250: a5 = a4 >> 0x28\n   253: u8 [a0 + 0x1d] = a5\n   256: a5 = a4 >> 0x20\n   259: u8 [a0 + 0x1c] = a5\n   262: a5 = a4 >> 0x18\n   265: u8 [a0 + 0x1b] = a5\n   268: a5 = a4 >> 0x10\n   271: u8 [a0 + 0x1a] = a5\n   274: a4 = a4 >> 0x8\n   277: u8 [a0 + 0x19] = a4\n   280: a4 = a3 >> 0x38\n   283: u8 [a0 + 0x17] = a4\n   286: a4 = a3 >> 0x30\n   289: u8 [a0 + 0x16] = a4\n   292: a4 = a3 >> 0x28\n   295: u8 [a0 + 0x15] = a4\n   298: a4 = a3 >> 0x20\n   301: u8 [a0 + 0x14] = a4\n   304: a4 = a3 >> 0x18\n   307: u8 [a0 + 0x13] = a4\n   310: a4 = a3 >> 0x10\n   313: u8 [a0 + 0x12] = a4\n   316: a3 = a3 >> 0x8\n   319: u8 [a0 + 0x11] = a3\n   322: a3 = a2 >> 0x38\n   325: u8 [a0 + 0xf] = a3\n   328: a3 = a2 >> 0x30\n   331: u8 [a0 + 0xe] = a3\n   334: a3 = a2 >> 0x28\n   337: u8 [a0 + 0xd] = a3\n   340: a3 = a2 >> 0x20\n   343: u8 [a0 + 0xc] = a3\n   346: a3 = a2 >> 0x18\n   349: u8 [a0 + 0xb] = a3\n   352: a3 = a2 >> 0x10\n   355: u8 [a0 + 0xa] = a3\n   358: a2 = a2 >> 0x8\n   361: u8 [a0 + 0x9] = a2\n   364: a2 = a1 >> 0x38\n   367: u8 [a0 + 0x7] = a2\n   370: a2 = a1 >> 0x30\n   373: u8 [a0 + 0x6] = a2\n   376: a2 = a1 >> 0x28\n   379: u8 [a0 + 0x5] = a2\n   382: a2 = a1 >> 0x20\n   385: u8 [a0 + 0x4] = a2\n   388: a2 = a1 >> 0x18\n   391: u8 [a0 + 0x3] = a2\n   394: a2 = a1 >> 0x10\n   397: u8 [a0 + 0x2] = a2\n   400: a1 = a1 >> 0x8\n   403: u8 [a0 + 0x1] = a1\n   406: ra = u64 [sp + 0x20]\n   409: s0 = u64 [sp + 0x18]\n   412: s1 = u64 [sp + 0x10]\n   415: sp = sp + 0x28\n   418: ret\n      : @25 (gas: 40)\n   420: sp = sp + 0xffffffffffffffa0\n   423: u64 [sp + 0x58] = ra\n   426: u64 [sp + 0x50] = s0\n   429: u64 [sp + 0x48] = s1\n   432: s0 = sp + 0x60\n   435: sp = sp & 0xffffffffffffffe0\n   438: s1 = a0\n   440: a0 = u64 [a2 + 0x18]\n   443: a3 = u64 [a2 + 0x10]\n   446: a4 = u64 [a2 + 0x8]\n   449: a2 = u64 [a2]\n   451: u64 [sp + 0x18] = a0\n   454: u64 [sp + 0x10] = a3\n   457: u64 [sp + 0x8] = a4\n   460: u64 [sp] = a2\n   462: u64 [sp + 56] = 0\n   465: u64 [sp + 48] = 0\n   468: u64 [sp + 40] = 0\n   471: u64 [sp + 32] = 0\n   474: u32 [sp + 64] = 0x20\n   478: a0 = 0\n   480: i32 a1 = sp + 0\n   482: i32 a3 = sp + 0x20\n   485: i32 a4 = sp + 0x40\n   488: a2 = 0xffffffffffffffff\n   491: ecalli 5 // 'get_storage'\n   493: a0 = u64 [sp + 0x38]\n   496: a1 = u64 [sp + 0x30]\n   499: a2 = u64 [sp + 0x28]\n   502: a3 = u64 [sp + 0x20]\n   505: u64 [s1 + 0x18] = a0\n   508: u64 [s1 + 0x10] = a1\n   511: u64 [s1 + 0x8] = a2\n   514: u64 [s1] = a3\n   516: sp = s0 + 0xffffffffffffffa0\n   519: ra = u64 [sp + 0x58]\n   522: s0 = u64 [sp + 0x50]\n   525: s1 = u64 [sp + 0x48]\n   528: sp = sp + 0x60\n   531: ret\n      : @26 (gas: 32)\n   533: sp = sp + 0xffffffffffffffa0\n   536: u64 [sp + 0x58] = ra\n   539: u64 [sp + 0x50] = s0\n   542: s0 = sp + 0x60\n   545: sp = sp & 0xffffffffffffffe0\n   548: t0 = u64 [a2]\n   550: t1 = u64 [a2 + 0x8]\n   553: t2 = u64 [a2 + 0x10]\n   556: a2 = u64 [a2 + 0x18]\n   559: a3 = u64 [a1 + 0x18]\n   562: a4 = u64 [a1 + 0x10]\n   565: a5 = u64 [a1 + 0x8]\n   568: a1 = u64 [a1]\n   570: u64 [sp + 0x18] = a3\n   573: u64 [sp + 0x10] = a4\n   576: u64 [sp + 0x8] = a5\n   579: u64 [sp] = a1\n   581: u64 [sp + 0x38] = a2\n   584: u64 [sp + 0x30] = t2\n   587: u64 [sp + 0x28] = t1\n   590: u64 [sp + 0x20] = t0\n   593: a0 = 0\n   595: i32 a1 = sp + 0\n   597: i32 a3 = sp + 0x20\n   600: a2 = 0xffffffffffffffff\n   603: a4 = 0x20\n   606: ecalli 9 // 'set_storage'\n   608: sp = s0 + 0xffffffffffffffa0\n   611: ra = u64 [sp + 0x58]\n   614: s0 = u64 [sp + 0x50]\n   617: sp = sp + 0x60\n   620: ret\n      : @27 [@dyn 2] (gas: 58)\n   622: a1 = reverse s1\n   624: u64 [sp + 0x98] = a1\n   628: a1 = u64 [sp]\n   630: a1 = reverse a1\n   632: u64 [sp + 0x90] = a1\n   636: a1 = u64 [sp + 0x8]\n   639: a1 = reverse a1\n   641: u64 [sp + 0x88] = a1\n   645: a1 = u64 [sp + 0x10]\n   648: a1 = reverse a1\n   650: u64 [sp + 0x80] = a1\n   654: a1 = u64 [sp + 0x18]\n   657: a1 = reverse a1\n   659: u64 [sp + 0xb8] = a1\n   663: a1 = u64 [sp + 0x20]\n   666: a1 = reverse a1\n   668: u64 [sp + 0xb0] = a1\n   672: a1 = u64 [sp + 0x28]\n   675: a1 = reverse a1\n   677: u64 [sp + 0xa8] = a1\n   681: a1 = u64 [sp + 0x30]\n   684: a1 = reverse a1\n   686: u64 [sp + 0xa0] = a1\n   690: a1 = u64 [sp + 0x38]\n   693: a1 = reverse a1\n   695: u64 [sp + 0xd8] = a1\n   699: a1 = u64 [sp + 0x40]\n   702: a1 = reverse a1\n   704: u64 [sp + 0xd0] = a1\n   708: a1 = u64 [sp + 0x48]\n   711: a1 = reverse a1\n   713: u64 [sp + 0xc8] = a1\n   717: a1 = u64 [sp + 0x50]\n   720: a1 = reverse a1\n   722: u64 [sp + 0xc0] = a1\n   726: a1 = u64 [sp + 0x60]\n   729: a1 = reverse a1\n   731: u64 [sp + 0xf8] = a1\n   735: a1 = u64 [sp + 0x68]\n   738: a1 = reverse a1\n   740: u64 [sp + 0xf0] = a1\n   744: a1 = u64 [sp + 0x70]\n   747: a1 = reverse a1\n   749: u64 [sp + 0xe8] = a1\n   753: a1 = u64 [sp + 0x78]\n   756: a1 = reverse a1\n   758: u64 [sp + 0xe0] = a1\n   762: i32 a2 = a0 + 0\n   764: i32 a0 = sp + 0x80\n   768: a1 = 0x4\n   771: a3 = u64 [sp + 0x58]\n   774: ecalli 4 // 'deposit_event'\n   776: sp = s0 + 0xfffffffffffffee0\n   780: ra = u64 [sp + 0x118]\n   784: s0 = u64 [sp + 0x110]\n   788: s1 = u64 [sp + 0x108]\n   792: sp = sp + 0x120\n   796: ret\n      : @28 (gas: 6)\n   798: sp = sp + 0xfffffffffffffff0\n   801: u64 [sp + 0x8] = ra\n   804: u64 [sp] = s0\n   806: s0 = a0 & 0x1\n   809: ecalli 2 // 'call_data_size'\n   811: fallthrough\n      : @29 (gas: 2)\n   812: u32 [0x2006c] = a0\n   817: jump @31 if s0 == 0\n      : @30 (gas: 1)\n   820: ra = 6, jump @32\n      : @31 [@dyn 3] (gas: 1)\n   824: ra = 8, jump @77\n      : @32 [@dyn 4] (gas: 14)\n   829: sp = sp + 0xfffffffffffffe00\n   833: u64 [sp + 0x1f8] = ra\n   837: u64 [sp + 0x1f0] = s0\n   841: u64 [sp + 0x1e8] = s1\n   845: s0 = sp + 0x200\n   849: sp = sp & 0xffffffffffffffe0\n   852: s1 = sp\n   854: u64 [s1 + 376] = 0\n   858: u64 [s1 + 368] = 0\n   862: u64 [s1 + 360] = 0\n   866: u64 [s1 + 352] = 0\n   870: i32 a0 = s1 + 0x160\n   874: ecalli 10 // 'value_transferred'\n   876: fallthrough\n      : @33 (gas: 8)\n   877: a0 = u64 [s1 + 0x170]\n   881: a1 = u64 [s1 + 0x178]\n   885: a2 = u64 [s1 + 0x168]\n   889: a3 = u64 [s1 + 0x160]\n   893: a1 = a1 | a2\n   896: a0 = a0 | a3\n   899: a0 = a0 | a1\n   902: jump @63 if a0 != 0\n      : @34 (gas: 15)\n   906: a0 = i32 [0x2006c]\n   911: u64 [s1 + 0xd8] = a0\n   915: a0 = a0 << 0x20\n   918: a0 = a0 >> 0x20\n   921: a0 = a0 + 0x1f\n   924: a0 = a0 & 0xffffffffffffffe0\n   927: a1 = a0 + 0x80\n   931: u64 [s1 + 0xd0] = a1\n   935: a0 = a1 <u a0\n   938: u64 [s1 + 0xc8] = a0\n   942: a0 = 0 if a0 != 0\n   944: u64 [s1 + 0xc0] = a0\n   948: a0 = 0x40\n   951: a1 = 0x20\n   954: ra = 10, jump @0\n      : @35 [@dyn 5] (gas: 48)\n   959: a1 = u64 [s1 + 0xc0]\n   963: a1 = reverse a1\n   965: a2 = u64 [s1 + 0xc8]\n   969: a2 = reverse a2\n   971: a3 = u64 [s1 + 0xd0]\n   975: a3 = reverse a3\n   977: u8 [a0 + 26] = 0\n   980: u8 [a0 + 25] = 0\n   983: u8 [a0 + 22] = 0\n   986: u8 [a0 + 21] = 0\n   989: u8 [a0 + 20] = 0\n   992: u8 [a0 + 19] = 0\n   995: u8 [a0 + 18] = 0\n   998: u8 [a0 + 17] = 0\n  1001: u8 [a0 + 14] = 0\n  1004: u8 [a0 + 13] = 0\n  1007: u8 [a0 + 12] = 0\n  1010: u8 [a0 + 11] = 0\n  1013: u8 [a0 + 10] = 0\n  1016: u8 [a0 + 9] = 0\n  1019: u8 [a0 + 7] = 0\n  1022: u8 [a0 + 6] = 0\n  1025: u8 [a0 + 5] = 0\n  1028: u8 [a0 + 4] = 0\n  1031: u8 [a0 + 3] = 0\n  1034: u8 [a0 + 2] = 0\n  1037: u8 [a0 + 1] = 0\n  1040: u8 [a0 + 0] = 0\n  1042: u8 [a0 + 0x18] = a3\n  1045: a4 = a3 >> 0x38\n  1048: u8 [a0 + 0x1f] = a4\n  1051: a4 = a3 >> 0x30\n  1054: u8 [a0 + 0x1e] = a4\n  1057: a4 = a3 >> 0x28\n  1060: u8 [a0 + 0x1d] = a4\n  1063: a4 = a3 >> 0x20\n  1066: u8 [a0 + 0x1c] = a4\n  1069: a3 = a3 >> 0x18\n  1072: u8 [a0 + 0x1b] = a3\n  1075: u8 [a0 + 0x10] = a2\n  1078: a2 = a2 >> 0x38\n  1081: u8 [a0 + 0x17] = a2\n  1084: u8 [a0 + 0x8] = a1\n  1087: a1 = a1 >> 0x38\n  1090: u8 [a0 + 0xf] = a1\n  1093: a0 = 0x80\n  1097: a1 = u64 [s1 + 0xd8]\n  1101: ra = 12, jump @0\n      : @36 [@dyn 6] (gas: 5)\n  1106: i32 a0 = a0 + 0\n  1108: a1 = u64 [s1 + 0xd8]\n  1112: a2 = 0\n  1114: ecalli 0 // 'call_data_copy'\n  1115: fallthrough\n      : @37 (gas: 2)\n  1116: a0 = u64 [s1 + 0xd8]\n  1120: jump @63 if a0 <u 32\n      : @38 (gas: 3)\n  1125: a0 = 0x80\n  1129: a1 = 0x20\n  1132: ra = 14, jump @0\n      : @39 [@dyn 7] (gas: 55)\n  1137: a1 = u8 [a0 + 0x9]\n  1140: a2 = u8 [a0 + 0x8]\n  1143: a3 = u8 [a0 + 0xa]\n  1146: a4 = u8 [a0 + 0xb]\n  1149: a1 = a1 << 0x8\n  1152: a1 = a1 | a2\n  1155: a3 = a3 << 0x10\n  1158: a4 = a4 << 0x18\n  1161: a3 = a3 | a4\n  1164: a1 = a1 | a3\n  1167: a2 = u8 [a0 + 0xd]\n  1170: a3 = u8 [a0 + 0xc]\n  1173: a4 = u8 [a0 + 0xe]\n  1176: a5 = u8 [a0 + 0xf]\n  1179: a2 = a2 << 0x8\n  1182: a2 = a2 | a3\n  1185: a4 = a4 << 0x10\n  1188: a5 = a5 << 0x18\n  1191: a4 = a4 | a5\n  1194: a2 = a2 | a4\n  1197: a2 = a2 << 0x20\n  1200: t0 = a2 | a1\n  1203: a2 = u8 [a0 + 0x1]\n  1206: a3 = u8 [a0]\n  1208: a4 = u8 [a0 + 0x2]\n  1211: a5 = u8 [a0 + 0x3]\n  1214: a2 = a2 << 0x8\n  1217: a2 = a2 | a3\n  1220: a4 = a4 << 0x10\n  1223: a5 = a5 << 0x18\n  1226: a4 = a4 | a5\n  1229: a2 = a2 | a4\n  1232: a3 = u8 [a0 + 0x5]\n  1235: a4 = u8 [a0 + 0x4]\n  1238: a5 = u8 [a0 + 0x6]\n  1241: a1 = u8 [a0 + 0x7]\n  1244: a3 = a3 << 0x8\n  1247: a3 = a3 | a4\n  1250: a5 = a5 << 0x10\n  1253: a1 = a1 << 0x18\n  1256: a1 = a1 | a5\n  1259: a1 = a1 | a3\n  1262: a1 = a1 << 0x20\n  1265: a1 = a1 | a2\n  1268: a1 = reverse a1\n  1270: a3 = reverse t0\n  1272: a2 = 0x100000000\n  1282: a2 = a2 ^ a3\n  1285: a2 = a2 | a1\n  1288: u64 [s1 + 0x88] = a3\n  1292: a3 = a3 >> 0x20\n  1295: a3 = a3 <u 0x1\n  1298: a3 = 0 if a1 != 0\n  1300: a3 = 0 if a2 == 0\n  1302: jump @63 if a3 == 0\n      : @40 (gas: 48)\n  1306: a1 = u8 [a0 + 0x18]\n  1309: u64 [s1 + 0x80] = a1\n  1313: a1 = u8 [a0 + 0x19]\n  1316: u64 [s1 + 0x68] = a1\n  1319: a1 = u8 [a0 + 0x1a]\n  1322: u64 [s1 + 0x78] = a1\n  1325: a1 = u8 [a0 + 0x1b]\n  1328: u64 [s1 + 0x70] = a1\n  1331: a1 = u8 [a0 + 0x1c]\n  1334: u64 [s1 + 0x40] = a1\n  1337: a1 = u8 [a0 + 0x1d]\n  1340: u64 [s1 + 0x28] = a1\n  1343: a1 = u8 [a0 + 0x1e]\n  1346: u64 [s1 + 0x38] = a1\n  1349: a1 = u8 [a0 + 0x1f]\n  1352: u64 [s1 + 0x30] = a1\n  1355: a1 = u8 [a0 + 0x10]\n  1358: u64 [s1 + 0x60] = a1\n  1361: a1 = u8 [a0 + 0x11]\n  1364: u64 [s1 + 0x48] = a1\n  1367: a1 = u8 [a0 + 0x12]\n  1370: u64 [s1 + 0x58] = a1\n  1373: a1 = u8 [a0 + 0x13]\n  1376: u64 [s1 + 0x50] = a1\n  1379: a1 = u8 [a0 + 0x14]\n  1382: u64 [s1 + 0x20] = a1\n  1385: a1 = u8 [a0 + 0x15]\n  1388: u64 [s1 + 0x8] = a1\n  1391: a1 = u8 [a0 + 0x16]\n  1394: u64 [s1 + 0x18] = a1\n  1397: a0 = u8 [a0 + 0x17]\n  1400: u64 [s1 + 0x10] = a0\n  1403: u32 [s1 + 384] = 0x20\n  1408: u64 [s1 + 440] = 0\n  1412: u64 [s1 + 432] = 0\n  1416: u64 [s1 + 424] = 0\n  1420: u64 [s1 + 416] = 0\n  1424: u64 [s1 + 472] = 0\n  1428: u64 [s1 + 464] = 0\n  1432: u64 [s1 + 456] = 0\n  1436: u64 [s1 + 448] = 0\n  1440: i32 a1 = s1 + 0x1a0\n  1444: i32 a3 = s1 + 0x1c0\n  1448: i32 a4 = s1 + 0x180\n  1452: a2 = 0xffffffffffffffff\n  1455: a0 = 0\n  1457: ecalli 5 // 'get_storage'\n  1459: fallthrough\n      : @41 (gas: 27)\n  1460: a0 = u64 [s1 + 0x1d0]\n  1464: a1 = u64 [s1 + 0x1c8]\n  1468: a2 = u64 [s1 + 0x1c0]\n  1472: a3 = u64 [s1 + 0x1d8]\n  1476: a4 = a0 << 0x3f\n  1479: a5 = a1 >> 0x1\n  1482: t1 = a5 | a4\n  1485: a5 = a3 << 0x3f\n  1488: a0 = a0 >> 0x1\n  1491: a0 = a0 | a5\n  1494: a1 = a1 << 0x3f\n  1497: a5 = a2 >> 0x1\n  1500: a1 = a1 | a5\n  1503: a3 = a3 >> 0x1\n  1506: a2 = a2 & 0x1\n  1509: a5 = -a2\n  1511: t0 = a2 <u 0x1\n  1514: a4 = a1 & 0x7f\n  1517: t2 = a5 & a0\n  1520: t1 = a5 & t1\n  1523: a4 = a1 if a2 != 0\n  1526: a3 = a3 & a5\n  1529: a0 = a4 <u 0x20\n  1532: a0 = 0 if t1 != 0\n  1534: a1 = t2 | a3\n  1537: a0 = 0 if a1 != 0\n  1539: jump @65 if t0 != a0\n      : @42 (gas: 1)\n  1543: jump @50 if a0 != 0\n      : @43 (gas: 6)\n  1547: a1 = 0x20\n  1550: u64 [s1 + 0xc8] = t2\n  1554: u64 [s1 + 0xd0] = a3\n  1558: u64 [s1 + 0xb8] = a4\n  1562: u64 [s1 + 0xc0] = t1\n  1566: ra = 16, jump @0\n      : @44 [@dyn 8] (gas: 35)\n  1571: u8 [a0 + 31] = 0\n  1574: u8 [a0 + 30] = 0\n  1577: u8 [a0 + 29] = 0\n  1580: u8 [a0 + 28] = 0\n  1583: u8 [a0 + 27] = 0\n  1586: u8 [a0 + 26] = 0\n  1589: u8 [a0 + 25] = 0\n  1592: u8 [a0 + 24] = 0\n  1595: u8 [a0 + 23] = 0\n  1598: u8 [a0 + 22] = 0\n  1601: u8 [a0 + 21] = 0\n  1604: u8 [a0 + 20] = 0\n  1607: u8 [a0 + 19] = 0\n  1610: u8 [a0 + 18] = 0\n  1613: u8 [a0 + 17] = 0\n  1616: u8 [a0 + 16] = 0\n  1619: u8 [a0 + 15] = 0\n  1622: u8 [a0 + 14] = 0\n  1625: u8 [a0 + 13] = 0\n  1628: u8 [a0 + 12] = 0\n  1631: u8 [a0 + 11] = 0\n  1634: u8 [a0 + 10] = 0\n  1637: u8 [a0 + 9] = 0\n  1640: u8 [a0 + 8] = 0\n  1643: u8 [a0 + 7] = 0\n  1646: u8 [a0 + 6] = 0\n  1649: u8 [a0 + 5] = 0\n  1652: u8 [a0 + 4] = 0\n  1655: u8 [a0 + 3] = 0\n  1658: u8 [a0 + 2] = 0\n  1661: u8 [a0 + 1] = 0\n  1664: u8 [a0 + 0] = 0\n  1666: a1 = 0x20\n  1669: a0 = 0\n  1671: ra = 18, jump @0\n      : @45 [@dyn 9] (gas: 9)\n  1676: a1 = sp + 0xffffffffffffffe0\n  1679: a1 = a1 & 0xffffffffffffffe0\n  1682: u64 [s1 + 0xd8] = a1\n  1686: sp = a1\n  1688: i32 a0 = a0 + 0\n  1690: i32 a2 = a1 + 0\n  1692: a1 = 0x20\n  1695: ecalli 6 // 'hash_keccak_256'\n  1697: fallthrough\n      : @46 (gas: 60)\n  1698: a1 = u64 [s1 + 0xd8]\n  1702: a0 = u64 [a1 + 0x18]\n  1705: a1 = u64 [a1 + 0x10]\n  1708: t2 = reverse a0\n  1710: t0 = reverse a1\n  1712: a0 = u64 [s1 + 0xb8]\n  1716: a1 = a0 + 0x1f\n  1719: a0 = a1 <u a0\n  1722: a3 = u64 [s1 + 0xc0]\n  1726: a2 = a3 + a0\n  1729: a3 = a2 <u a3\n  1732: a3 = a0 if a0 == 0\n  1735: a5 = u64 [s1 + 0xc8]\n  1739: a0 = a5 + a3\n  1742: a3 = a0 << 0x3b\n  1745: a4 = a2 >> 0x5\n  1748: a3 = a3 | a4\n  1751: a2 = a2 << 0x3b\n  1754: a1 = a1 >> 0x5\n  1757: a1 = a1 | a2\n  1760: ra = t2 + a1\n  1763: a2 = ra <u t2\n  1766: a1 = t0 + a2\n  1769: a1 = a1 + a3\n  1772: a3 = a1 ^ t0\n  1775: t1 = a1 <u t0\n  1778: t1 = a2 if a3 == 0\n  1781: u64 [s1 + 0xb8] = a1\n  1785: a4 = t0 <u a1\n  1788: a2 = t2 <u ra\n  1791: a2 = a4 if a3 != 0\n  1794: a3 = a0 <u a5\n  1797: a4 = u64 [s1 + 0xd0]\n  1801: a4 = a4 + a3\n  1804: a1 = u64 [s1 + 0xd8]\n  1808: a5 = u64 [a1 + 0x8]\n  1811: a1 = u64 [a1]\n  1813: a0 = a0 >> 0x5\n  1816: a3 = a4 << 0x3b\n  1819: a0 = a0 | a3\n  1822: a3 = reverse a1\n  1824: a1 = reverse a5\n  1826: a5 = a3\n  1828: a4 = a4 >> 0x5\n  1831: a0 = a0 + a1\n  1834: a4 = a4 + a3\n  1837: a3 = a0 <u a1\n  1840: a3 = a3 + a4\n  1843: t1 = t1 + a0\n  1846: a0 = t1 <u a0\n  1849: a3 = a3 + a0\n  1852: a0 = a1 <u t1\n  1855: a4 = a5 ^ a3\n  1858: u64 [s1 + 0xb0] = a3\n  1862: a3 = a5 <u a3\n  1865: a3 = a0 if a4 == 0\n  1868: a0 = a1 ^ t1\n  1871: a0 = a0 | a4\n  1874: a2 = a3 if a0 != 0\n  1877: jump @50 if a2 == 0\n      : @47 (gas: 8)\n  1881: a0 = a1\n  1883: i32 a1 = s1 + 0x1a0\n  1887: u64 [s1 + 0x98] = a1\n  1891: i32 a1 = s1 + 0x1c0\n  1895: u64 [s1 + 0x90] = a1\n  1899: u64 [s1 + 0xa8] = ra\n  1903: u64 [s1 + 0xa0] = t1\n  1907: fallthrough\n      : @48 (gas: 19)\n  1908: u64 [s1 + 0xc0] = a0\n  1912: u64 [s1 + 0xc8] = a5\n  1916: u64 [s1 + 0xd0] = t0\n  1920: u64 [s1 + 0xd8] = t2\n  1924: u64 [s1 + 0x1a8] = t0\n  1928: u64 [s1 + 0x1a0] = t2\n  1932: u64 [s1 + 0x1b0] = a0\n  1936: u64 [s1 + 0x1b8] = a5\n  1940: u64 [s1 + 472] = 0\n  1944: u64 [s1 + 464] = 0\n  1948: u64 [s1 + 456] = 0\n  1952: u64 [s1 + 448] = 0\n  1956: a2 = 0xffffffffffffffff\n  1959: a4 = 0x20\n  1962: a0 = 0\n  1964: a1 = u64 [s1 + 0x98]\n  1968: a3 = u64 [s1 + 0x90]\n  1972: ecalli 9 // 'set_storage'\n  1974: fallthrough\n      : @49 (gas: 28)\n  1975: t1 = u64 [s1 + 0xa0]\n  1979: a5 = u64 [s1 + 0xc8]\n  1983: ra = u64 [s1 + 0xa8]\n  1987: t0 = u64 [s1 + 0xd0]\n  1991: t2 = u64 [s1 + 0xd8]\n  1995: t2 = t2 + 0x1\n  1998: a0 = t2 <u 0x1\n  2001: t0 = t0 + a0\n  2004: a0 = t2 | t0\n  2007: a0 = a0 <u 0x1\n  2010: a1 = u64 [s1 + 0xc0]\n  2014: a0 = a0 + a1\n  2017: a1 = a0 <u a1\n  2020: a5 = a5 + a1\n  2023: a1 = t2 <u ra\n  2026: a3 = u64 [s1 + 0xb8]\n  2030: a2 = t0 ^ a3\n  2033: a3 = t0 <u a3\n  2036: a3 = a1 if a2 == 0\n  2039: a1 = a0 <u t1\n  2042: a4 = u64 [s1 + 0xb0]\n  2046: a2 = a5 ^ a4\n  2049: a4 = a5 <u a4\n  2052: a4 = a1 if a2 == 0\n  2055: a1 = a0 ^ t1\n  2058: a1 = a1 | a2\n  2061: a4 = a3 if a1 == 0\n  2064: jump @48 if a4 != 0\n      : @50 (gas: 32)\n  2068: u64 [s1 + 440] = 0\n  2072: u64 [s1 + 432] = 0\n  2076: u64 [s1 + 448] = 0x18\n  2081: a0 = u64 [0x20000]\n  2086: u64 [s1 + 424] = 0\n  2090: u64 [s1 + 416] = 0\n  2094: u64 [s1 + 456] = 0\n  2098: u64 [s1 + 0x1d8] = a0\n  2102: a0 = 0x4361726400000000\n  2112: u64 [s1 + 0x1d0] = a0\n  2116: i32 a1 = s1 + 0x1a0\n  2120: i32 a3 = s1 + 0x1c0\n  2124: a2 = 0xffffffffffffffff\n  2127: a4 = 0x20\n  2130: a0 = 0\n  2132: ecalli 9 // 'set_storage'\n  2134: u64 [s1 + 440] = 0\n  2138: u64 [s1 + 432] = 0\n  2142: u64 [s1 + 424] = 0\n  2146: u64 [s1 + 416] = 0x1\n  2151: u64 [s1 + 472] = 0\n  2155: u64 [s1 + 464] = 0\n  2159: u64 [s1 + 456] = 0\n  2163: u64 [s1 + 448] = 0\n  2167: u32 [s1 + 384] = 0x20\n  2172: i32 a1 = s1 + 0x1a0\n  2176: i32 a3 = s1 + 0x1c0\n  2180: i32 a4 = s1 + 0x180\n  2184: a2 = 0xffffffffffffffff\n  2187: a0 = 0\n  2189: ecalli 5 // 'get_storage'\n  2191: fallthrough\n      : @51 (gas: 29)\n  2192: a0 = u64 [s1 + 0x1d0]\n  2196: a1 = u64 [s1 + 0x1c8]\n  2200: a2 = u64 [s1 + 0x1c0]\n  2204: a3 = u64 [s1 + 0x1d8]\n  2208: a4 = a0 << 0x3f\n  2211: a5 = a1 >> 0x1\n  2214: t1 = a5 | a4\n  2217: a5 = a3 << 0x3f\n  2220: a0 = a0 >> 0x1\n  2223: a0 = a0 | a5\n  2226: a1 = a1 << 0x3f\n  2229: a5 = a2 >> 0x1\n  2232: a1 = a1 | a5\n  2235: a3 = a3 >> 0x1\n  2238: a2 = a2 & 0x1\n  2241: a5 = -a2\n  2243: t0 = a2 <u 0x1\n  2246: a4 = a1 & 0x7f\n  2249: t2 = a5 & a0\n  2252: a0 = a5 & t1\n  2255: a4 = a1 if a2 != 0\n  2258: u64 [s1 + 0xc8] = a4\n  2262: a1 = a4 <u 0x20\n  2265: a5 = a5 & a3\n  2268: a2 = a1\n  2270: a2 = 0 if a0 != 0\n  2272: a4 = t2 | a5\n  2275: a2 = 0 if a4 != 0\n  2277: jump @67 if t0 != a2\n      : @52 (gas: 63)\n  2281: a2 = a1 ^ 0x1\n  2284: a1 = a0 >u 0\n  2286: u64 [s1 + 0xc0] = a0\n  2290: a2 = a1 if a0 != 0\n  2293: u64 [s1 + 0xd8] = t2\n  2297: a3 = t2 >u 0\n  2299: a1 = a5 >u 0\n  2301: u64 [s1 + 0xd0] = a5\n  2305: a1 = a3 if a5 == 0\n  2308: a1 = a2 if a4 == 0\n  2311: a0 = u64 [s1 + 0x28]\n  2314: a0 = a0 << 0x8\n  2317: a2 = u64 [s1 + 0x40]\n  2320: t1 = a0 | a2\n  2323: a2 = u64 [s1 + 0x38]\n  2326: a2 = a2 << 0x10\n  2329: a3 = u64 [s1 + 0x30]\n  2332: a3 = a3 << 0x18\n  2335: a2 = a2 | a3\n  2338: a3 = u64 [s1 + 0x8]\n  2341: a3 = a3 << 0x8\n  2344: a0 = u64 [s1 + 0x20]\n  2347: t0 = a3 | a0\n  2350: a4 = u64 [s1 + 0x18]\n  2353: a4 = a4 << 0x10\n  2356: a5 = u64 [s1 + 0x10]\n  2359: a5 = a5 << 0x18\n  2362: t2 = a5 | a4\n  2365: a5 = u64 [s1 + 0x68]\n  2368: a5 = a5 << 0x8\n  2371: a0 = u64 [s1 + 0x80]\n  2375: ra = a5 | a0\n  2378: a3 = u64 [s1 + 0x78]\n  2381: a3 = a3 << 0x10\n  2384: a0 = u64 [s1 + 0x70]\n  2387: a0 = a0 << 0x18\n  2390: a0 = a0 | a3\n  2393: a2 = a2 | t1\n  2396: a3 = u64 [s1 + 0x48]\n  2399: a3 = a3 << 0x8\n  2402: a4 = u64 [s1 + 0x60]\n  2405: a3 = a3 | a4\n  2408: a4 = u64 [s1 + 0x58]\n  2411: a4 = a4 << 0x10\n  2414: a5 = u64 [s1 + 0x50]\n  2417: a5 = a5 << 0x18\n  2420: a4 = a4 | a5\n  2423: a5 = t2 | t0\n  2426: a0 = a0 | ra\n  2429: a3 = a3 | a4\n  2432: a2 = a2 << 0x20\n  2435: a0 = a0 | a2\n  2438: a5 = a5 << 0x20\n  2441: a3 = a3 | a5\n  2444: a2 = u64 [s1 + 0x88]\n  2448: a2 = a2 << 0x20\n  2451: a3 = reverse a3\n  2453: u64 [s1 + 0x80] = a3\n  2457: a0 = reverse a0\n  2459: u64 [s1 + 0x88] = a0\n  2463: a2 = a2 >> 0x20\n  2466: u64 [s1 + 0x78] = a2\n  2469: jump @60 if a1 == 0\n      : @53 (gas: 3)\n  2473: a1 = 0x20\n  2476: a0 = 0\n  2478: ra = 20, jump @0\n      : @54 [@dyn 10] (gas: 35)\n  2483: u8 [a0 + 31] = 0x1\n  2487: u8 [a0 + 30] = 0\n  2490: u8 [a0 + 29] = 0\n  2493: u8 [a0 + 28] = 0\n  2496: u8 [a0 + 27] = 0\n  2499: u8 [a0 + 26] = 0\n  2502: u8 [a0 + 25] = 0\n  2505: u8 [a0 + 24] = 0\n  2508: u8 [a0 + 23] = 0\n  2511: u8 [a0 + 22] = 0\n  2514: u8 [a0 + 21] = 0\n  2517: u8 [a0 + 20] = 0\n  2520: u8 [a0 + 19] = 0\n  2523: u8 [a0 + 18] = 0\n  2526: u8 [a0 + 17] = 0\n  2529: u8 [a0 + 16] = 0\n  2532: u8 [a0 + 15] = 0\n  2535: u8 [a0 + 14] = 0\n  2538: u8 [a0 + 13] = 0\n  2541: u8 [a0 + 12] = 0\n  2544: u8 [a0 + 11] = 0\n  2547: u8 [a0 + 10] = 0\n  2550: u8 [a0 + 9] = 0\n  2553: u8 [a0 + 8] = 0\n  2556: u8 [a0 + 7] = 0\n  2559: u8 [a0 + 6] = 0\n  2562: u8 [a0 + 5] = 0\n  2565: u8 [a0 + 4] = 0\n  2568: u8 [a0 + 3] = 0\n  2571: u8 [a0 + 2] = 0\n  2574: u8 [a0 + 1] = 0\n  2577: u8 [a0 + 0] = 0\n  2579: a1 = 0x20\n  2582: a0 = 0\n  2584: ra = 22, jump @0\n      : @55 [@dyn 11] (gas: 9)\n  2589: a1 = sp + 0xffffffffffffffe0\n  2592: a1 = a1 & 0xffffffffffffffe0\n  2595: u64 [s1 + 0xb0] = a1\n  2599: sp = a1\n  2601: i32 a0 = a0 + 0\n  2603: i32 a2 = a1 + 0\n  2605: a1 = 0x20\n  2608: ecalli 6 // 'hash_keccak_256'\n  2610: fallthrough\n      : @56 (gas: 60)\n  2611: a1 = u64 [s1 + 0xb0]\n  2615: a0 = u64 [a1 + 0x18]\n  2618: a1 = u64 [a1 + 0x10]\n  2621: t2 = reverse a0\n  2623: t0 = reverse a1\n  2625: a0 = u64 [s1 + 0xc8]\n  2629: a1 = a0 + 0x1f\n  2632: a0 = a1 <u a0\n  2635: a3 = u64 [s1 + 0xc0]\n  2639: a2 = a3 + a0\n  2642: a3 = a2 <u a3\n  2645: a3 = a0 if a0 == 0\n  2648: a5 = u64 [s1 + 0xd8]\n  2652: a0 = a5 + a3\n  2655: a3 = a0 << 0x3b\n  2658: a4 = a2 >> 0x5\n  2661: a3 = a3 | a4\n  2664: a2 = a2 << 0x3b\n  2667: a1 = a1 >> 0x5\n  2670: a1 = a1 | a2\n  2673: ra = t2 + a1\n  2676: a2 = ra <u t2\n  2679: a1 = t0 + a2\n  2682: a1 = a1 + a3\n  2685: a3 = a1 ^ t0\n  2688: t1 = a1 <u t0\n  2691: t1 = a2 if a3 == 0\n  2694: u64 [s1 + 0xb8] = a1\n  2698: a4 = t0 <u a1\n  2701: a2 = t2 <u ra\n  2704: a2 = a4 if a3 != 0\n  2707: a3 = a0 <u a5\n  2710: a4 = u64 [s1 + 0xd0]\n  2714: a4 = a4 + a3\n  2717: a1 = u64 [s1 + 0xb0]\n  2721: a5 = u64 [a1 + 0x8]\n  2724: a1 = u64 [a1]\n  2726: a0 = a0 >> 0x5\n  2729: a3 = a4 << 0x3b\n  2732: a0 = a0 | a3\n  2735: a3 = reverse a1\n  2737: a1 = reverse a5\n  2739: a5 = a3\n  2741: a4 = a4 >> 0x5\n  2744: a0 = a0 + a1\n  2747: a4 = a4 + a3\n  2750: a3 = a0 <u a1\n  2753: a3 = a3 + a4\n  2756: t1 = t1 + a0\n  2759: a0 = t1 <u a0\n  2762: a3 = a3 + a0\n  2765: a0 = a1 <u t1\n  2768: a4 = a5 ^ a3\n  2771: u64 [s1 + 0xb0] = a3\n  2775: a3 = a5 <u a3\n  2778: a3 = a0 if a4 == 0\n  2781: a0 = a1 ^ t1\n  2784: a0 = a0 | a4\n  2787: a2 = a3 if a0 != 0\n  2790: jump @60 if a2 == 0\n      : @57 (gas: 8)\n  2794: a0 = a1\n  2796: i32 a1 = s1 + 0x1a0\n  2800: u64 [s1 + 0x98] = a1\n  2804: i32 a1 = s1 + 0x1c0\n  2808: u64 [s1 + 0x90] = a1\n  2812: u64 [s1 + 0xa8] = ra\n  2816: u64 [s1 + 0xa0] = t1\n  2820: fallthrough\n      : @58 (gas: 19)\n  2821: u64 [s1 + 0xc0] = a0\n  2825: u64 [s1 + 0xc8] = a5\n  2829: u64 [s1 + 0xd0] = t0\n  2833: u64 [s1 + 0xd8] = t2\n  2837: u64 [s1 + 0x1a8] = t0\n  2841: u64 [s1 + 0x1a0] = t2\n  2845: u64 [s1 + 0x1b0] = a0\n  2849: u64 [s1 + 0x1b8] = a5\n  2853: u64 [s1 + 472] = 0\n  2857: u64 [s1 + 464] = 0\n  2861: u64 [s1 + 456] = 0\n  2865: u64 [s1 + 448] = 0\n  2869: a2 = 0xffffffffffffffff\n  2872: a4 = 0x20\n  2875: a0 = 0\n  2877: a1 = u64 [s1 + 0x98]\n  2881: a3 = u64 [s1 + 0x90]\n  2885: ecalli 9 // 'set_storage'\n  2887: fallthrough\n      : @59 (gas: 28)\n  2888: t1 = u64 [s1 + 0xa0]\n  2892: a5 = u64 [s1 + 0xc8]\n  2896: ra = u64 [s1 + 0xa8]\n  2900: t0 = u64 [s1 + 0xd0]\n  2904: t2 = u64 [s1 + 0xd8]\n  2908: t2 = t2 + 0x1\n  2911: a0 = t2 <u 0x1\n  2914: t0 = t0 + a0\n  2917: a0 = t2 | t0\n  2920: a0 = a0 <u 0x1\n  2923: a1 = u64 [s1 + 0xc0]\n  2927: a0 = a0 + a1\n  2930: a1 = a0 <u a1\n  2933: a5 = a5 + a1\n  2936: a1 = t2 <u ra\n  2939: a3 = u64 [s1 + 0xb8]\n  2943: a2 = t0 ^ a3\n  2946: a3 = t0 <u a3\n  2949: a3 = a1 if a2 == 0\n  2952: a1 = a0 <u t1\n  2955: a4 = u64 [s1 + 0xb0]\n  2959: a2 = a5 ^ a4\n  2962: a4 = a5 <u a4\n  2965: a4 = a1 if a2 == 0\n  2968: a1 = a0 ^ t1\n  2971: a1 = a1 | a2\n  2974: a4 = a3 if a1 == 0\n  2977: jump @58 if a4 != 0\n      : @60 (gas: 54)\n  2981: u64 [s1 + 440] = 0\n  2985: u64 [s1 + 432] = 0\n  2989: u64 [s1 + 424] = 0\n  2993: u64 [s1 + 416] = 0x1\n  2998: u64 [s1 + 464] = 0\n  3002: u64 [s1 + 456] = 0\n  3006: u64 [s1 + 448] = 0x6\n  3011: a0 = 0x4347430000000000\n  3021: u64 [s1 + 0x1d8] = a0\n  3025: i32 a1 = s1 + 0x1a0\n  3029: i32 a3 = s1 + 0x1c0\n  3033: a2 = 0xffffffffffffffff\n  3036: a4 = 0x20\n  3039: a0 = 0\n  3041: ecalli 9 // 'set_storage'\n  3043: u64 [s1 + 440] = 0\n  3047: u64 [s1 + 432] = 0\n  3051: u64 [s1 + 424] = 0\n  3055: u64 [s1 + 416] = 0x7\n  3060: u64 [s1 + 472] = 0\n  3064: u64 [s1 + 464] = 0\n  3068: u64 [s1 + 456] = 0\n  3072: u64 [s1 + 448] = 0\n  3076: u32 [s1 + 384] = 0x20\n  3081: i32 a1 = s1 + 0x1a0\n  3085: i32 a3 = s1 + 0x1c0\n  3089: i32 a4 = s1 + 0x180\n  3093: a2 = 0xffffffffffffffff\n  3096: a0 = 0\n  3098: ecalli 5 // 'get_storage'\n  3100: a0 = u32 [s1 + 0x1d4]\n  3104: a0 = a0 << 0x20\n  3107: a1 = u64 [s1 + 0x1d8]\n  3111: a2 = u64 [s1 + 0x78]\n  3114: a0 = a0 | a2\n  3117: u64 [s1 + 440] = 0\n  3121: u64 [s1 + 432] = 0\n  3125: u64 [s1 + 424] = 0\n  3129: u64 [s1 + 416] = 0x7\n  3134: u64 [s1 + 0x1d8] = a1\n  3138: u64 [s1 + 0x1d0] = a0\n  3142: a0 = u64 [s1 + 0x80]\n  3146: u64 [s1 + 0x1c8] = a0\n  3150: a0 = u64 [s1 + 0x88]\n  3154: u64 [s1 + 0x1c0] = a0\n  3158: i32 a1 = s1 + 0x1a0\n  3162: i32 a3 = s1 + 0x1c0\n  3166: a2 = 0xffffffffffffffff\n  3169: a4 = 0x20\n  3172: a0 = 0\n  3174: ecalli 9 // 'set_storage'\n  3176: a0 = 0x40\n  3179: a1 = 0x20\n  3182: ra = 24, jump @0\n      : @61 [@dyn 12] (gas: 100)\n  3187: a1 = u8 [a0 + 0x11]\n  3190: a2 = u8 [a0 + 0x10]\n  3193: a3 = u8 [a0 + 0x12]\n  3196: a4 = u8 [a0 + 0x13]\n  3199: a1 = a1 << 0x8\n  3202: a1 = a1 | a2\n  3205: a3 = a3 << 0x10\n  3208: a4 = a4 << 0x18\n  3211: a3 = a3 | a4\n  3214: a1 = a1 | a3\n  3217: a2 = u8 [a0 + 0x15]\n  3220: a3 = u8 [a0 + 0x14]\n  3223: a4 = u8 [a0 + 0x16]\n  3226: a5 = u8 [a0 + 0x17]\n  3229: a2 = a2 << 0x8\n  3232: a2 = a2 | a3\n  3235: a4 = a4 << 0x10\n  3238: a5 = a5 << 0x18\n  3241: a4 = a4 | a5\n  3244: a2 = a2 | a4\n  3247: a2 = a2 << 0x20\n  3250: t0 = a2 | a1\n  3253: a2 = u8 [a0 + 0x1]\n  3256: a3 = u8 [a0]\n  3258: a4 = u8 [a0 + 0x2]\n  3261: a5 = u8 [a0 + 0x3]\n  3264: a2 = a2 << 0x8\n  3267: a2 = a2 | a3\n  3270: a4 = a4 << 0x10\n  3273: a5 = a5 << 0x18\n  3276: a4 = a4 | a5\n  3279: a2 = a2 | a4\n  3282: a3 = u8 [a0 + 0x5]\n  3285: a4 = u8 [a0 + 0x4]\n  3288: a5 = u8 [a0 + 0x6]\n  3291: a1 = u8 [a0 + 0x7]\n  3294: a3 = a3 << 0x8\n  3297: a3 = a3 | a4\n  3300: a5 = a5 << 0x10\n  3303: a1 = a1 << 0x18\n  3306: a1 = a1 | a5\n  3309: a1 = a1 | a3\n  3312: a1 = a1 << 0x20\n  3315: t1 = a1 | a2\n  3318: a1 = u8 [a0 + 0x19]\n  3321: a3 = u8 [a0 + 0x18]\n  3324: a4 = u8 [a0 + 0x1a]\n  3327: a5 = u8 [a0 + 0x1b]\n  3330: a1 = a1 << 0x8\n  3333: a1 = a1 | a3\n  3336: a4 = a4 << 0x10\n  3339: a5 = a5 << 0x18\n  3342: a4 = a4 | a5\n  3345: a1 = a1 | a4\n  3348: a3 = u8 [a0 + 0x1d]\n  3351: a4 = u8 [a0 + 0x1c]\n  3354: a5 = u8 [a0 + 0x1e]\n  3357: a2 = u8 [a0 + 0x1f]\n  3360: a3 = a3 << 0x8\n  3363: a3 = a3 | a4\n  3366: a5 = a5 << 0x10\n  3369: a2 = a2 << 0x18\n  3372: a2 = a2 | a5\n  3375: a2 = a2 | a3\n  3378: a2 = a2 << 0x20\n  3381: a3 = a2 | a1\n  3384: a1 = u8 [a0 + 0x9]\n  3387: a2 = u8 [a0 + 0x8]\n  3390: a4 = u8 [a0 + 0xa]\n  3393: a5 = u8 [a0 + 0xb]\n  3396: a1 = a1 << 0x8\n  3399: a1 = a1 | a2\n  3402: a4 = a4 << 0x10\n  3405: a5 = a5 << 0x18\n  3408: a4 = a4 | a5\n  3411: a1 = a1 | a4\n  3414: a2 = u8 [a0 + 0xd]\n  3417: a4 = u8 [a0 + 0xc]\n  3420: a5 = u8 [a0 + 0xe]\n  3423: a0 = u8 [a0 + 0xf]\n  3426: a2 = a2 << 0x8\n  3429: a2 = a2 | a4\n  3432: a5 = a5 << 0x10\n  3435: a0 = a0 << 0x18\n  3438: a0 = a0 | a5\n  3441: a0 = a0 | a2\n  3444: a0 = a0 << 0x20\n  3447: a0 = a0 | a1\n  3450: a1 = reverse a0\n  3452: a0 = reverse a3\n  3454: a2 = reverse t1\n  3456: a3 = reverse t0\n  3458: a2 = a2 | a3\n  3461: a3 = a0 | a1\n  3464: a3 = a3 | a2\n  3467: a3 = a3 >> 0x20\n  3470: a1 = a1 | a2\n  3473: a1 = a1 << 0x20\n  3476: a1 = a1 | a3\n  3479: jump @71 if a1 == 0\n      : @62 (gas: 1)\n  3483: trap\n      : @63 (gas: 3)\n  3484: a0 = 0\n  3486: a1 = 0\n  3488: ra = 26, jump @0\n      : @64 [@dyn 13] (gas: 5)\n  3493: i32 a1 = a0 + 0\n  3495: a0 = 0x1\n  3498: a2 = 0\n  3500: ecalli 7 // 'seal_return'\n  3502: fallthrough\n      : @65 (gas: 8)\n  3503: u64 [s1 + 272] = 0\n  3507: u64 [s1 + 264] = 0\n  3511: u64 [s1 + 256] = 0\n  3515: a0 = 0x4e487b7100000000\n  3525: a1 = s1 + 0x100\n  3529: u64 [s1 + 0x118] = a0\n  3533: a0 = 0\n  3535: ra = 28, jump @23\n      : @66 [@dyn 14] (gas: 8)\n  3540: u64 [s1 + 248] = 0\n  3544: u64 [s1 + 240] = 0\n  3548: u64 [s1 + 224] = 0x22\n  3553: a0 = 0x4\n  3556: a1 = s1 + 0xe0\n  3560: u64 [s1 + 232] = 0\n  3564: ra = 0x20\n  3567: jump @23\n      : @67 (gas: 8)\n  3570: u64 [s1 + 336] = 0\n  3574: u64 [s1 + 328] = 0\n  3578: u64 [s1 + 320] = 0\n  3582: a0 = 0x4e487b7100000000\n  3592: a1 = s1 + 0x140\n  3596: u64 [s1 + 0x158] = a0\n  3600: a0 = 0\n  3602: ra = 30, jump @23\n      : @68 [@dyn 15] (gas: 7)\n  3607: u64 [s1 + 312] = 0\n  3611: u64 [s1 + 304] = 0\n  3615: u64 [s1 + 288] = 0x22\n  3620: a0 = 0x4\n  3623: a1 = s1 + 0x120\n  3627: u64 [s1 + 296] = 0\n  3631: ra = 32, jump @23\n      : @69 [@dyn 16] (gas: 3)\n  3636: a1 = 0x24\n  3639: a0 = 0\n  3641: ra = 34, jump @0\n      : @70 [@dyn 17] (gas: 5)\n  3646: i32 a1 = a0 + 0\n  3648: a0 = 0x1\n  3651: a2 = 0x24\n  3654: ecalli 7 // 'seal_return'\n  3656: fallthrough\n      : @71 (gas: 3)\n  3657: i32 a0 = a0 + 0\n  3659: u64 [s1 + 0xd8] = a0\n  3663: ra = 36, jump @0\n      : @72 [@dyn 18] (gas: 5)\n  3668: i32 a0 = a0 + 0\n  3670: a1 = 0\n  3672: a2 = 0\n  3674: ecalli 0 // 'call_data_copy'\n  3675: fallthrough\n      : @73 (gas: 2)\n  3676: a1 = i32 [0x20070]\n  3681: jump @75 if a1 == 0\n      : @74 (gas: 4)\n  3684: a0 = 0x30080\n  3689: i32 a0 = a0 + 0\n  3691: ecalli 8 // 'set_immutable_data'\n  3693: fallthrough\n      : @75 (gas: 3)\n  3694: a0 = u64 [s1 + 0xd8]\n  3698: a1 = 0\n  3700: ra = 38, jump @0\n      : @76 [@dyn 19] (gas: 6)\n  3705: i32 a1 = a0 + 0\n  3707: a0 = 0\n  3709: a2 = 0\n  3711: ra = 0x28\n  3714: ecalli 7 // 'seal_return'\n  3716: fallthrough\n      : @77 [@dyn 20] (gas: 11)\n  3717: sp = sp + 0xfffffffffffff808\n  3721: u64 [sp + 0x7f0] = ra\n  3725: u64 [sp + 0x7e8] = s0\n  3729: u64 [sp + 0x7e0] = s1\n  3733: s0 = sp + 0x7f8\n  3737: sp = sp + 0xfffffffffffffb18\n  3741: sp = sp & 0xffffffffffffffe0\n  3744: s1 = sp\n  3746: a0 = 0x40\n  3749: a1 = 0x20\n  3752: ra = 42, jump @0\n      : @78 [@dyn 21] (gas: 36)\n  3757: u8 [a0 + 31] = 0x80\n  3762: u8 [a0 + 30] = 0\n  3765: u8 [a0 + 29] = 0\n  3768: u8 [a0 + 28] = 0\n  3771: u8 [a0 + 27] = 0\n  3774: u8 [a0 + 26] = 0\n  3777: u8 [a0 + 25] = 0\n  3780: u8 [a0 + 24] = 0\n  3783: u8 [a0 + 23] = 0\n  3786: u8 [a0 + 22] = 0\n  3789: u8 [a0 + 21] = 0\n  3792: u8 [a0 + 20] = 0\n  3795: u8 [a0 + 19] = 0\n  3798: u8 [a0 + 18] = 0\n  3801: u8 [a0 + 17] = 0\n  3804: u8 [a0 + 16] = 0\n  3807: u8 [a0 + 15] = 0\n  3810: u8 [a0 + 14] = 0\n  3813: u8 [a0 + 13] = 0\n  3816: u8 [a0 + 12] = 0\n  3819: u8 [a0 + 11] = 0\n  3822: u8 [a0 + 10] = 0\n  3825: u8 [a0 + 9] = 0\n  3828: u8 [a0 + 8] = 0\n  3831: u8 [a0 + 7] = 0\n  3834: u8 [a0 + 3] = 0\n  3837: a1 = 0x2006c\n  3842: u8 [a0 + 2] = 0\n  3845: u8 [a0 + 1] = 0\n  3848: u8 [a0 + 0] = 0\n  3850: u64 [s1 + 0x238] = a1\n  3854: a1 = i32 [0x2006c]\n  3859: u8 [a0 + 6] = 0\n  3862: u8 [a0 + 5] = 0\n  3865: u8 [a0 + 4] = 0\n  3868: jump @80 if a1 >=u 4\n      : @79 (gas: 1)\n  3872: jump @460\n      : @80 (gas: 5)\n  3875: a0 = s1 + 0x1000\n  3879: i32 a0 = a0 + 0xfffffffffffffa40\n  3883: a1 = 0\n  3885: ecalli 1 // 'call_data_load'\n  3887: fallthrough\n      : @81 (gas: 4)\n  3888: a0 = s1 + 0x7ff\n  3892: a0 = a0 + 0x1b9\n  3896: a0 = i32 [a0 + 0xa4]\n  3900: jump @95 if a0 <=s 135795451\n      : @82 (gas: 1)\n  3908: jump @118 if a0 <=s 1666326813\n      : @83 (gas: 1)\n  3916: jump @85 if a0 <=s 1889567280\n      : @84 (gas: 1)\n  3923: jump @161\n      : @85 (gas: 1)\n  3926: jump @87 if a0 == 1666326814\n      : @86 (gas: 1)\n  3933: jump @247\n      : @87 (gas: 11)\n  3936: a0 = sp + 0xffffffffffffffe0\n  3939: a0 = a0 & 0xffffffffffffffe0\n  3942: u64 [s1 + 0x230] = a0\n  3946: sp = a0\n  3948: u64 [a0 + 24] = 0\n  3951: u64 [a0 + 16] = 0\n  3954: u64 [a0 + 8] = 0\n  3957: u64 [a0 + 0] = 0\n  3959: i32 a0 = a0 + 0\n  3961: ecalli 10 // 'value_transferred'\n  3963: fallthrough\n      : @88 (gas: 9)\n  3964: a3 = u64 [s1 + 0x230]\n  3968: a0 = u64 [a3 + 0x10]\n  3971: a1 = u64 [a3 + 0x18]\n  3974: a2 = u64 [a3 + 0x8]\n  3977: a3 = u64 [a3]\n  3979: a1 = a1 | a2\n  3982: a0 = a0 | a3\n  3985: a0 = a0 | a1\n  3988: jump @90 if a0 == 0\n      : @89 (gas: 1)\n  3991: jump @460\n      : @90 (gas: 3)\n  3994: a0 = u64 [s1 + 0x238]\n  3998: a0 = i32 [a0]\n  4000: jump @92 if a0 >u 35\n      : @91 (gas: 1)\n  4004: jump @460\n      : @92 (gas: 17)\n  4007: a0 = s1 + 0x1000\n  4011: i32 a0 = a0 + 0xfffffffffffffb60\n  4015: a1 = 0x4\n  4018: ecalli 1 // 'call_data_load'\n  4020: a0 = s1 + 0x7ff\n  4024: a0 = a0 + 0x1b9\n  4028: a1 = u64 [a0 + 0x1a8]\n  4032: u64 [s1 + 0x238] = a1\n  4036: a1 = u64 [a0 + 0x1b0]\n  4040: u64 [s1 + 0x230] = a1\n  4044: a1 = u64 [a0 + 0x1b8]\n  4048: u64 [s1 + 0x228] = a1\n  4052: a0 = u64 [a0 + 0x1c0]\n  4056: u64 [s1 + 0x220] = a0\n  4060: a1 = 0x20\n  4063: a0 = 0\n  4065: ra = 44, jump @0\n      : @93 [@dyn 22] (gas: 71)\n  4070: a1 = u64 [s1 + 0x220]\n  4074: a1 = reverse a1\n  4076: a2 = u64 [s1 + 0x228]\n  4080: a2 = reverse a2\n  4082: a3 = u64 [s1 + 0x230]\n  4086: a3 = reverse a3\n  4088: a4 = u64 [s1 + 0x238]\n  4092: a4 = reverse a4\n  4094: a5 = a4 >> 0x38\n  4097: u8 [a0 + 0x1f] = a5\n  4100: a5 = a4 >> 0x30\n  4103: u8 [a0 + 0x1e] = a5\n  4106: a5 = a4 >> 0x28\n  4109: u8 [a0 + 0x1d] = a5\n  4112: a5 = a4 >> 0x20\n  4115: u8 [a0 + 0x1c] = a5\n  4118: a5 = a4 >> 0x18\n  4121: u8 [a0 + 0x1b] = a5\n  4124: a5 = a4 >> 0x10\n  4127: u8 [a0 + 0x1a] = a5\n  4130: a5 = a4 >> 0x8\n  4133: u8 [a0 + 0x19] = a5\n  4136: u8 [a0 + 0x18] = a4\n  4139: a4 = a3 >> 0x38\n  4142: u8 [a0 + 0x17] = a4\n  4145: a4 = a3 >> 0x30\n  4148: u8 [a0 + 0x16] = a4\n  4151: a4 = a3 >> 0x28\n  4154: u8 [a0 + 0x15] = a4\n  4157: a4 = a3 >> 0x20\n  4160: u8 [a0 + 0x14] = a4\n  4163: a4 = a3 >> 0x18\n  4166: u8 [a0 + 0x13] = a4\n  4169: a4 = a3 >> 0x10\n  4172: u8 [a0 + 0x12] = a4\n  4175: a4 = a3 >> 0x8\n  4178: u8 [a0 + 0x11] = a4\n  4181: u8 [a0 + 0x10] = a3\n  4184: a3 = a2 >> 0x38\n  4187: u8 [a0 + 0xf] = a3\n  4190: a3 = a2 >> 0x30\n  4193: u8 [a0 + 0xe] = a3\n  4196: a3 = a2 >> 0x28\n  4199: u8 [a0 + 0xd] = a3\n  4202: a3 = a2 >> 0x20\n  4205: u8 [a0 + 0xc] = a3\n  4208: a3 = a2 >> 0x18\n  4211: u8 [a0 + 0xb] = a3\n  4214: a3 = a2 >> 0x10\n  4217: u8 [a0 + 0xa] = a3\n  4220: a3 = a2 >> 0x8\n  4223: u8 [a0 + 0x9] = a3\n  4226: u8 [a0 + 0x8] = a2\n  4229: a2 = a1 >> 0x38\n  4232: u8 [a0 + 0x7] = a2\n  4235: a2 = a1 >> 0x30\n  4238: u8 [a0 + 0x6] = a2\n  4241: a2 = a1 >> 0x28\n  4244: u8 [a0 + 0x5] = a2\n  4247: a2 = a1 >> 0x20\n  4250: u8 [a0 + 0x4] = a2\n  4253: a2 = a1 >> 0x18\n  4256: u8 [a0 + 0x3] = a2\n  4259: a2 = a1 >> 0x10\n  4262: u8 [a0 + 0x2] = a2\n  4265: a2 = a1 >> 0x8\n  4268: u8 [a0 + 0x1] = a2\n  4271: u8 [a0] = a1\n  4273: a0 = 0x20\n  4276: a1 = 0x20\n  4279: ra = 46, jump @0\n      : @94 [@dyn 23] (gas: 2)\n  4284: a1 = 0x3\n  4287: jump @304\n      : @95 (gas: 1)\n  4290: jump @149 if a0 >s 3187165926\n      : @96 (gas: 1)\n  4298: jump @98 if a0 != 2221020444\n      : @97 (gas: 1)\n  4305: jump @182\n      : @98 (gas: 1)\n  4308: jump @100 if a0 == 2514000705\n      : @99 (gas: 1)\n  4315: jump @293\n      : @100 (gas: 11)\n  4318: a0 = sp + 0xffffffffffffffe0\n  4321: a0 = a0 & 0xffffffffffffffe0\n  4324: u64 [s1 + 0x230] = a0\n  4328: sp = a0\n  4330: u64 [a0 + 24] = 0\n  4333: u64 [a0 + 16] = 0\n  4336: u64 [a0 + 8] = 0\n  4339: u64 [a0 + 0] = 0\n  4341: i32 a0 = a0 + 0\n  4343: ecalli 10 // 'value_transferred'\n  4345: fallthrough\n      : @101 (gas: 9)\n  4346: a3 = u64 [s1 + 0x230]\n  4350: a0 = u64 [a3 + 0x10]\n  4353: a1 = u64 [a3 + 0x18]\n  4356: a2 = u64 [a3 + 0x8]\n  4359: a3 = u64 [a3]\n  4361: a1 = a1 | a2\n  4364: a0 = a0 | a3\n  4367: a0 = a0 | a1\n  4370: jump @103 if a0 == 0\n      : @102 (gas: 1)\n  4373: jump @460\n      : @103 (gas: 3)\n  4376: a0 = u64 [s1 + 0x238]\n  4380: a0 = i32 [a0]\n  4382: jump @105 if a0 >u 3\n      : @104 (gas: 1)\n  4386: jump @460\n      : @105 (gas: 3)\n  4389: a0 = 0x40\n  4392: a1 = 0x20\n  4395: ra = 48, jump @0\n      : @106 [@dyn 24] (gas: 85)\n  4400: a1 = u8 [a0 + 0x18]\n  4403: u64 [s1 + 0x140] = a1\n  4407: a1 = u8 [a0 + 0x19]\n  4410: u64 [s1 + 0x120] = a1\n  4414: a1 = u8 [a0 + 0x1a]\n  4417: u64 [s1 + 0x130] = a1\n  4421: a1 = u8 [a0 + 0x1b]\n  4424: u64 [s1 + 0x128] = a1\n  4428: a1 = u8 [a0 + 0x1c]\n  4431: u64 [s1 + 0x158] = a1\n  4435: a1 = u8 [a0 + 0x1d]\n  4438: u64 [s1 + 0x138] = a1\n  4442: a1 = u8 [a0 + 0x1e]\n  4445: u64 [s1 + 0x150] = a1\n  4449: a1 = u8 [a0 + 0x1f]\n  4452: u64 [s1 + 0x148] = a1\n  4456: a1 = u8 [a0 + 0x10]\n  4459: u64 [s1 + 0x180] = a1\n  4463: a1 = u8 [a0 + 0x11]\n  4466: u64 [s1 + 0x160] = a1\n  4470: a1 = u8 [a0 + 0x12]\n  4473: u64 [s1 + 0x170] = a1\n  4477: a1 = u8 [a0 + 0x13]\n  4480: u64 [s1 + 0x168] = a1\n  4484: a1 = u8 [a0 + 0x14]\n  4487: u64 [s1 + 0x198] = a1\n  4491: a1 = u8 [a0 + 0x15]\n  4494: u64 [s1 + 0x178] = a1\n  4498: a1 = u8 [a0 + 0x16]\n  4501: u64 [s1 + 0x190] = a1\n  4505: a1 = u8 [a0 + 0x17]\n  4508: u64 [s1 + 0x188] = a1\n  4512: a1 = u8 [a0 + 0x8]\n  4515: u64 [s1 + 0x1e0] = a1\n  4519: a1 = u8 [a0 + 0x9]\n  4522: u64 [s1 + 0x1a0] = a1\n  4526: a1 = u8 [a0 + 0xa]\n  4529: u64 [s1 + 0x1b0] = a1\n  4533: a1 = u8 [a0 + 0xb]\n  4536: u64 [s1 + 0x1a8] = a1\n  4540: a1 = u8 [a0 + 0xc]\n  4543: u64 [s1 + 0x1f8] = a1\n  4547: a1 = u8 [a0 + 0xd]\n  4550: u64 [s1 + 0x1b8] = a1\n  4554: a1 = u8 [a0 + 0xe]\n  4557: u64 [s1 + 0x1f0] = a1\n  4561: a1 = u8 [a0 + 0xf]\n  4564: u64 [s1 + 0x1e8] = a1\n  4568: a1 = u8 [a0]\n  4570: u64 [s1 + 0x220] = a1\n  4574: a1 = u8 [a0 + 0x1]\n  4577: u64 [s1 + 0x200] = a1\n  4581: a1 = u8 [a0 + 0x2]\n  4584: u64 [s1 + 0x210] = a1\n  4588: a1 = u8 [a0 + 0x3]\n  4591: u64 [s1 + 0x208] = a1\n  4595: a1 = u8 [a0 + 0x4]\n  4598: u64 [s1 + 0x238] = a1\n  4602: a1 = u8 [a0 + 0x5]\n  4605: u64 [s1 + 0x218] = a1\n  4609: a1 = u8 [a0 + 0x6]\n  4612: u64 [s1 + 0x230] = a1\n  4616: a0 = u8 [a0 + 0x7]\n  4619: u64 [s1 + 0x228] = a0\n  4623: a1 = s1 + 0x7ff\n  4627: a1 = a1 + 0x1b9\n  4631: u64 [a1 + 712] = 0x1\n  4636: u32 [a1 + 744] = 0x20\n  4641: u64 [a1 + 736] = 0\n  4645: u64 [a1 + 728] = 0\n  4649: u64 [a1 + 720] = 0\n  4653: u64 [a1 + 608] = 0\n  4657: u64 [a1 + 600] = 0\n  4661: u64 [a1 + 592] = 0\n  4665: u64 [a1 + 584] = 0\n  4669: a0 = s1 + 0x1000\n  4673: i32 a1 = a0 + 0xfffffffffffffc80\n  4677: a0 = s1 + 0x1000\n  4681: i32 a3 = a0 + 0xfffffffffffffc00\n  4685: a0 = s1 + 0x1000\n  4689: i32 a4 = a0 + 0xfffffffffffffca0\n  4693: a2 = 0xffffffffffffffff\n  4696: a0 = 0\n  4698: ecalli 5 // 'get_storage'\n  4700: fallthrough\n      : @107 (gas: 36)\n  4701: a0 = s1 + 0x7ff\n  4705: a0 = a0 + 0x1b9\n  4709: t2 = u64 [a0 + 0x258]\n  4713: ra = u64 [a0 + 0x250]\n  4717: t1 = u64 [a0 + 0x260]\n  4721: a5 = u64 [a0 + 0x248]\n  4725: a0 = t2 << 0x3f\n  4728: a1 = ra >> 0x1\n  4731: a0 = a0 | a1\n  4734: a1 = t1 << 0x3f\n  4737: a2 = t2 >> 0x1\n  4740: a1 = a1 | a2\n  4743: a2 = ra << 0x3f\n  4746: a3 = a5 >> 0x1\n  4749: a4 = a3 | a2\n  4752: a2 = t1 >> 0x1\n  4755: u64 [s1 + 0x110] = a5\n  4759: a5 = a5 & 0x1\n  4762: a3 = -a5\n  4764: t0 = a3 & a1\n  4767: a1 = a3 & a0\n  4770: a2 = a2 & a3\n  4773: a0 = a4 & 0x7f\n  4776: u64 [s1 + 0x108] = a0\n  4780: a4 = a0 if a5 == 0\n  4783: u64 [s1 + 0x1d8] = a4\n  4787: a0 = a4 <u 0x20\n  4790: u64 [s1 + 0x1c8] = a1\n  4794: a0 = 0 if a1 != 0\n  4796: u64 [s1 + 0x1d0] = t0\n  4800: u64 [s1 + 0x1c0] = a2\n  4804: a1 = t0 | a2\n  4807: a0 = 0 if a1 != 0\n  4809: u64 [s1 + 0x118] = a5\n  4813: a1 = a5 <u 0x1\n  4816: jump @109 if a1 == a0\n      : @108 (gas: 1)\n  4819: jump @468\n      : @109 (gas: 100)\n  4822: a0 = u64 [s1 + 0x120]\n  4826: a0 = a0 << 0x8\n  4829: a1 = u64 [s1 + 0x140]\n  4833: a0 = a0 | a1\n  4836: a1 = u64 [s1 + 0x130]\n  4840: a1 = a1 << 0x10\n  4843: a2 = u64 [s1 + 0x128]\n  4847: a2 = a2 << 0x18\n  4850: a1 = a1 | a2\n  4853: a0 = a0 | a1\n  4856: a1 = u64 [s1 + 0x138]\n  4860: a1 = a1 << 0x8\n  4863: a2 = u64 [s1 + 0x158]\n  4867: a1 = a1 | a2\n  4870: a2 = u64 [s1 + 0x150]\n  4874: a2 = a2 << 0x10\n  4877: a3 = u64 [s1 + 0x148]\n  4881: a3 = a3 << 0x18\n  4884: a2 = a2 | a3\n  4887: a1 = a1 | a2\n  4890: a1 = a1 << 0x20\n  4893: t0 = a1 | a0\n  4896: a1 = u64 [s1 + 0x160]\n  4900: a1 = a1 << 0x8\n  4903: a0 = u64 [s1 + 0x180]\n  4907: a1 = a1 | a0\n  4910: a2 = u64 [s1 + 0x170]\n  4914: a2 = a2 << 0x10\n  4917: a3 = u64 [s1 + 0x168]\n  4921: a3 = a3 << 0x18\n  4924: a2 = a2 | a3\n  4927: a1 = a1 | a2\n  4930: a2 = u64 [s1 + 0x178]\n  4934: a2 = a2 << 0x8\n  4937: a0 = u64 [s1 + 0x198]\n  4941: a2 = a2 | a0\n  4944: a3 = u64 [s1 + 0x190]\n  4948: a3 = a3 << 0x10\n  4951: a4 = u64 [s1 + 0x188]\n  4955: a4 = a4 << 0x18\n  4958: a3 = a3 | a4\n  4961: a2 = a2 | a3\n  4964: a2 = a2 << 0x20\n  4967: a1 = a1 | a2\n  4970: a2 = u64 [s1 + 0x1a0]\n  4974: a2 = a2 << 0x8\n  4977: a0 = u64 [s1 + 0x1e0]\n  4981: a2 = a2 | a0\n  4984: a3 = u64 [s1 + 0x1b0]\n  4988: a3 = a3 << 0x10\n  4991: a4 = u64 [s1 + 0x1a8]\n  4995: a4 = a4 << 0x18\n  4998: a3 = a3 | a4\n  5001: a2 = a2 | a3\n  5004: a3 = u64 [s1 + 0x1b8]\n  5008: a3 = a3 << 0x8\n  5011: a0 = u64 [s1 + 0x1f8]\n  5015: a3 = a3 | a0\n  5018: a4 = u64 [s1 + 0x1f0]\n  5022: a4 = a4 << 0x10\n  5025: a5 = u64 [s1 + 0x1e8]\n  5029: a5 = a5 << 0x18\n  5032: a4 = a4 | a5\n  5035: a3 = a3 | a4\n  5038: a3 = a3 << 0x20\n  5041: a2 = a2 | a3\n  5044: a3 = u64 [s1 + 0x200]\n  5048: a3 = a3 << 0x8\n  5051: a0 = u64 [s1 + 0x220]\n  5055: a3 = a3 | a0\n  5058: a4 = u64 [s1 + 0x210]\n  5062: a4 = a4 << 0x10\n  5065: a5 = u64 [s1 + 0x208]\n  5069: a5 = a5 << 0x18\n  5072: a4 = a4 | a5\n  5075: a3 = a3 | a4\n  5078: a4 = u64 [s1 + 0x218]\n  5082: a4 = a4 << 0x8\n  5085: a0 = u64 [s1 + 0x238]\n  5089: a4 = a4 | a0\n  5092: a5 = u64 [s1 + 0x230]\n  5096: a5 = a5 << 0x10\n  5099: a0 = u64 [s1 + 0x228]\n  5103: a0 = a0 << 0x18\n  5106: a0 = a0 | a5\n  5109: a0 = a0 | a4\n  5112: a0 = a0 << 0x20\n  5115: a0 = a0 | a3\n  5118: a5 = reverse a0\n  5120: a4 = reverse a2\n  5122: a3 = reverse a1\n  5124: a2 = reverse t0\n  5126: a0 = a2 | a4\n  5129: a1 = a3 | a5\n  5132: a0 = a0 | a1\n  5135: a0 = a0 >> 0x20\n  5138: a1 = a1 | a4\n  5141: a1 = a1 << 0x20\n  5144: a0 = a0 | a1\n  5147: jump @111 if a0 == 0\n      : @110 (gas: 1)\n  5150: jump @309\n      : @111 (gas: 11)\n  5153: u64 [s1 + 0x220] = ra\n  5157: u64 [s1 + 0x228] = t2\n  5161: u64 [s1 + 0x230] = t1\n  5165: u64 [s1 + 0x178] = a5\n  5169: u64 [s1 + 0x180] = a4\n  5173: u64 [s1 + 0x188] = a3\n  5177: i32 a0 = a2 + 0\n  5179: a1 = 0x20\n  5182: u64 [s1 + 0x238] = a0\n  5186: u64 [s1 + 0x190] = a2\n  5190: ra = 50, jump @0\n      : @112 [@dyn 25] (gas: 70)\n  5195: a1 = u64 [s1 + 0x1d8]\n  5199: a1 = reverse a1\n  5201: a2 = a1 >> 0x38\n  5204: u8 [a0 + 0x1f] = a2\n  5207: a2 = a1 >> 0x30\n  5210: u8 [a0 + 0x1e] = a2\n  5213: a2 = a1 >> 0x28\n  5216: u8 [a0 + 0x1d] = a2\n  5219: a2 = a1 >> 0x20\n  5222: u8 [a0 + 0x1c] = a2\n  5225: a2 = a1 >> 0x18\n  5228: u8 [a0 + 0x1b] = a2\n  5231: a2 = a1 >> 0x10\n  5234: u8 [a0 + 0x1a] = a2\n  5237: a2 = a1 >> 0x8\n  5240: u8 [a0 + 0x19] = a2\n  5243: a2 = u64 [s1 + 0x1c8]\n  5247: a2 = reverse a2\n  5249: u8 [a0 + 0x18] = a1\n  5252: a1 = a2 >> 0x38\n  5255: u8 [a0 + 0x17] = a1\n  5258: a1 = a2 >> 0x30\n  5261: u8 [a0 + 0x16] = a1\n  5264: a1 = a2 >> 0x28\n  5267: u8 [a0 + 0x15] = a1\n  5270: a1 = a2 >> 0x20\n  5273: u8 [a0 + 0x14] = a1\n  5276: a1 = a2 >> 0x18\n  5279: u8 [a0 + 0x13] = a1\n  5282: a1 = a2 >> 0x10\n  5285: u8 [a0 + 0x12] = a1\n  5288: a1 = u64 [s1 + 0x1d0]\n  5292: a1 = reverse a1\n  5294: u8 [a0 + 0x10] = a2\n  5297: a2 = a2 >> 0x8\n  5300: u8 [a0 + 0x11] = a2\n  5303: a2 = a1 >> 0x38\n  5306: u8 [a0 + 0xf] = a2\n  5309: a2 = a1 >> 0x30\n  5312: u8 [a0 + 0xe] = a2\n  5315: a2 = a1 >> 0x28\n  5318: u8 [a0 + 0xd] = a2\n  5321: a2 = a1 >> 0x20\n  5324: u8 [a0 + 0xc] = a2\n  5327: a2 = a1 >> 0x18\n  5330: u8 [a0 + 0xb] = a2\n  5333: a2 = a1 >> 0x10\n  5336: u8 [a0 + 0xa] = a2\n  5339: a2 = u64 [s1 + 0x1c0]\n  5343: a2 = reverse a2\n  5345: u8 [a0 + 0x8] = a1\n  5348: a1 = a1 >> 0x8\n  5351: u8 [a0 + 0x9] = a1\n  5354: a1 = a2 >> 0x38\n  5357: u8 [a0 + 0x7] = a1\n  5360: a1 = a2 >> 0x30\n  5363: u8 [a0 + 0x6] = a1\n  5366: a1 = a2 >> 0x28\n  5369: u8 [a0 + 0x5] = a1\n  5372: a1 = a2 >> 0x20\n  5375: u8 [a0 + 0x4] = a1\n  5378: a1 = a2 >> 0x18\n  5381: u8 [a0 + 0x3] = a1\n  5384: a1 = a2 >> 0x10\n  5387: u8 [a0 + 0x2] = a1\n  5390: u8 [a0] = a2\n  5392: a2 = a2 >> 0x8\n  5395: u8 [a0 + 0x1] = a2\n  5398: a0 = u64 [s1 + 0x118]\n  5402: jump @114 if a0 == 0\n      : @113 (gas: 1)\n  5405: jump @366\n      : @114 (gas: 10)\n  5408: a0 = u64 [s1 + 0x180]\n  5412: a1 = u64 [s1 + 0x178]\n  5416: a0 = a0 | a1\n  5419: a1 = 0xffffffe0\n  5429: a2 = u64 [s1 + 0x190]\n  5433: a1 = a2 <u a1\n  5436: a2 = u64 [s1 + 0x188]\n  5440: a1 = 0 if a2 != 0\n  5442: a1 = 0 if a0 != 0\n  5444: jump @116 if a1 != 0\n      : @115 (gas: 1)\n  5447: jump @309\n      : @116 (gas: 7)\n  5450: a0 = u64 [s1 + 0x110]\n  5454: a0 = a0 & 0xffffffffffffff00\n  5458: u64 [s1 + 0x218] = a0\n  5462: a0 = u64 [s1 + 0x238]\n  5466: i32 a0 = a0 + 0x20\n  5469: a1 = 0x20\n  5472: ra = 52, jump @0\n      : @117 [@dyn 26] (gas: 74)\n  5477: t0 = 0\n  5479: t1 = 0\n  5481: u64 [s1 + 568] = 0\n  5485: a1 = u64 [s1 + 0x218]\n  5489: a3 = reverse a1\n  5491: a4 = a3 >> 0x30\n  5494: u8 [a0 + 0x1e] = a4\n  5497: a4 = a3 >> 0x28\n  5500: u8 [a0 + 0x1d] = a4\n  5503: a4 = a3 >> 0x20\n  5506: u8 [a0 + 0x1c] = a4\n  5509: a4 = a3 >> 0x18\n  5512: u8 [a0 + 0x1b] = a4\n  5515: a4 = a3 >> 0x10\n  5518: u8 [a0 + 0x1a] = a4\n  5521: a1 = u64 [s1 + 0x220]\n  5525: a4 = reverse a1\n  5527: u8 [a0 + 0x18] = a3\n  5530: a3 = a3 >> 0x8\n  5533: u8 [a0 + 0x19] = a3\n  5536: a3 = a4 >> 0x38\n  5539: u8 [a0 + 0x17] = a3\n  5542: a3 = a4 >> 0x30\n  5545: u8 [a0 + 0x16] = a3\n  5548: a3 = a4 >> 0x28\n  5551: u8 [a0 + 0x15] = a3\n  5554: a3 = a4 >> 0x20\n  5557: u8 [a0 + 0x14] = a3\n  5560: a3 = a4 >> 0x18\n  5563: u8 [a0 + 0x13] = a3\n  5566: a3 = a4 >> 0x10\n  5569: u8 [a0 + 0x12] = a3\n  5572: a1 = u64 [s1 + 0x228]\n  5576: a3 = reverse a1\n  5578: u8 [a0 + 0x10] = a4\n  5581: a4 = a4 >> 0x8\n  5584: u8 [a0 + 0x11] = a4\n  5587: a4 = a3 >> 0x38\n  5590: u8 [a0 + 0xf] = a4\n  5593: a4 = a3 >> 0x30\n  5596: u8 [a0 + 0xe] = a4\n  5599: a4 = a3 >> 0x28\n  5602: u8 [a0 + 0xd] = a4\n  5605: a4 = a3 >> 0x20\n  5608: u8 [a0 + 0xc] = a4\n  5611: a4 = a3 >> 0x18\n  5614: u8 [a0 + 0xb] = a4\n  5617: a4 = a3 >> 0x10\n  5620: u8 [a0 + 0xa] = a4\n  5623: a1 = u64 [s1 + 0x230]\n  5627: a4 = reverse a1\n  5629: u8 [a0 + 31] = 0\n  5632: u8 [a0 + 0x8] = a3\n  5635: a3 = a3 >> 0x8\n  5638: u8 [a0 + 0x9] = a3\n  5641: u8 [a0] = a4\n  5643: a3 = a4 >> 0x38\n  5646: u8 [a0 + 0x7] = a3\n  5649: a3 = a4 >> 0x30\n  5652: u8 [a0 + 0x6] = a3\n  5655: a3 = a4 >> 0x28\n  5658: u8 [a0 + 0x5] = a3\n  5661: a3 = a4 >> 0x20\n  5664: u8 [a0 + 0x4] = a3\n  5667: a3 = a4 >> 0x18\n  5670: u8 [a0 + 0x3] = a3\n  5673: a3 = a4 >> 0x10\n  5676: u8 [a0 + 0x2] = a3\n  5679: a4 = a4 >> 0x8\n  5682: u8 [a0 + 0x1] = a4\n  5685: a0 = u64 [s1 + 0x108]\n  5689: a0 = a0 >u 0\n  5691: ra = a0 << 0x5\n  5694: jump @396\n      : @118 (gas: 1)\n  5697: jump @176 if a0 == 135795452\n      : @119 (gas: 1)\n  5705: jump @121 if a0 == 157198259\n      : @120 (gas: 1)\n  5712: jump @230\n      : @121 (gas: 11)\n  5715: a0 = sp + 0xffffffffffffffe0\n  5718: a0 = a0 & 0xffffffffffffffe0\n  5721: u64 [s1 + 0x230] = a0\n  5725: sp = a0\n  5727: u64 [a0 + 24] = 0\n  5730: u64 [a0 + 16] = 0\n  5733: u64 [a0 + 8] = 0\n  5736: u64 [a0 + 0] = 0\n  5738: i32 a0 = a0 + 0\n  5740: ecalli 10 // 'value_transferred'\n  5742: fallthrough\n      : @122 (gas: 9)\n  5743: a3 = u64 [s1 + 0x230]\n  5747: a0 = u64 [a3 + 0x10]\n  5750: a1 = u64 [a3 + 0x18]\n  5753: a2 = u64 [a3 + 0x8]\n  5756: a3 = u64 [a3]\n  5758: a1 = a1 | a2\n  5761: a0 = a0 | a3\n  5764: a0 = a0 | a1\n  5767: jump @124 if a0 == 0\n      : @123 (gas: 1)\n  5770: jump @460\n      : @124 (gas: 3)\n  5773: a0 = u64 [s1 + 0x238]\n  5777: a0 = i32 [a0]\n  5779: jump @126 if a0 >u 67\n      : @125 (gas: 1)\n  5783: jump @460\n      : @126 (gas: 5)\n  5786: a0 = s1 + 0x1000\n  5790: i32 a0 = a0 + 0xfffffffffffffc00\n  5794: a1 = 0x4\n  5797: ecalli 1 // 'call_data_load'\n  5799: fallthrough\n      : @127 (gas: 14)\n  5800: a2 = s1 + 0x7ff\n  5804: a2 = a2 + 0x1b9\n  5808: a1 = u64 [a2 + 0x258]\n  5812: a3 = u64 [a2 + 0x260]\n  5816: a0 = 0x100000000\n  5826: a0 = a0 ^ a1\n  5829: a0 = a0 | a3\n  5832: u64 [s1 + 0x200] = a1\n  5836: a1 = a1 >> 0x20\n  5839: a1 = a1 <u 0x1\n  5842: u64 [s1 + 0x1f8] = a3\n  5846: a1 = 0 if a3 != 0\n  5848: a1 = 0 if a0 == 0\n  5850: jump @129 if a1 != 0\n      : @128 (gas: 1)\n  5853: jump @462\n      : @129 (gas: 21)\n  5856: a0 = u64 [a2 + 0x250]\n  5860: u64 [s1 + 0x1e8] = a0\n  5864: a0 = u64 [a2 + 0x248]\n  5868: u64 [s1 + 0x1f0] = a0\n  5872: a0 = s1 + 0x1000\n  5876: i32 a0 = a0 + 0xfffffffffffffa80\n  5880: a1 = 0x24\n  5883: ecalli 1 // 'call_data_load'\n  5885: a0 = s1 + 0x7ff\n  5889: a0 = a0 + 0x1b9\n  5893: a1 = u64 [a0 + 0xe0]\n  5897: u64 [s1 + 0x220] = a1\n  5901: a1 = u64 [a0 + 0xd8]\n  5905: u64 [s1 + 0x228] = a1\n  5909: a1 = u64 [a0 + 0xd0]\n  5913: u64 [s1 + 0x230] = a1\n  5917: a0 = u64 [a0 + 0xc8]\n  5921: u64 [s1 + 0x238] = a0\n  5925: a1 = 0x20\n  5928: a0 = 0\n  5930: ra = 54, jump @0\n      : @130 [@dyn 27] (gas: 71)\n  5935: a1 = u64 [s1 + 0x220]\n  5939: a1 = reverse a1\n  5941: a2 = u64 [s1 + 0x228]\n  5945: a2 = reverse a2\n  5947: a3 = u64 [s1 + 0x230]\n  5951: a3 = reverse a3\n  5953: a4 = u64 [s1 + 0x238]\n  5957: a4 = reverse a4\n  5959: a5 = a4 >> 0x38\n  5962: u8 [a0 + 0x1f] = a5\n  5965: a5 = a4 >> 0x30\n  5968: u8 [a0 + 0x1e] = a5\n  5971: a5 = a4 >> 0x28\n  5974: u8 [a0 + 0x1d] = a5\n  5977: a5 = a4 >> 0x20\n  5980: u8 [a0 + 0x1c] = a5\n  5983: a5 = a4 >> 0x18\n  5986: u8 [a0 + 0x1b] = a5\n  5989: a5 = a4 >> 0x10\n  5992: u8 [a0 + 0x1a] = a5\n  5995: a5 = a4 >> 0x8\n  5998: u8 [a0 + 0x19] = a5\n  6001: u8 [a0 + 0x18] = a4\n  6004: a4 = a3 >> 0x38\n  6007: u8 [a0 + 0x17] = a4\n  6010: a4 = a3 >> 0x30\n  6013: u8 [a0 + 0x16] = a4\n  6016: a4 = a3 >> 0x28\n  6019: u8 [a0 + 0x15] = a4\n  6022: a4 = a3 >> 0x20\n  6025: u8 [a0 + 0x14] = a4\n  6028: a4 = a3 >> 0x18\n  6031: u8 [a0 + 0x13] = a4\n  6034: a4 = a3 >> 0x10\n  6037: u8 [a0 + 0x12] = a4\n  6040: a4 = a3 >> 0x8\n  6043: u8 [a0 + 0x11] = a4\n  6046: u8 [a0 + 0x10] = a3\n  6049: a3 = a2 >> 0x38\n  6052: u8 [a0 + 0xf] = a3\n  6055: a3 = a2 >> 0x30\n  6058: u8 [a0 + 0xe] = a3\n  6061: a3 = a2 >> 0x28\n  6064: u8 [a0 + 0xd] = a3\n  6067: a3 = a2 >> 0x20\n  6070: u8 [a0 + 0xc] = a3\n  6073: a3 = a2 >> 0x18\n  6076: u8 [a0 + 0xb] = a3\n  6079: a3 = a2 >> 0x10\n  6082: u8 [a0 + 0xa] = a3\n  6085: a3 = a2 >> 0x8\n  6088: u8 [a0 + 0x9] = a3\n  6091: u8 [a0 + 0x8] = a2\n  6094: a2 = a1 >> 0x38\n  6097: u8 [a0 + 0x7] = a2\n  6100: a2 = a1 >> 0x30\n  6103: u8 [a0 + 0x6] = a2\n  6106: a2 = a1 >> 0x28\n  6109: u8 [a0 + 0x5] = a2\n  6112: a2 = a1 >> 0x20\n  6115: u8 [a0 + 0x4] = a2\n  6118: a2 = a1 >> 0x18\n  6121: u8 [a0 + 0x3] = a2\n  6124: a2 = a1 >> 0x10\n  6127: u8 [a0 + 0x2] = a2\n  6130: a2 = a1 >> 0x8\n  6133: u8 [a0 + 0x1] = a2\n  6136: u8 [a0] = a1\n  6138: a0 = 0x20\n  6141: a1 = 0x20\n  6144: ra = 56, jump @0\n      : @131 [@dyn 28] (gas: 35)\n  6149: u8 [a0 + 31] = 0x3\n  6153: u8 [a0 + 30] = 0\n  6156: u8 [a0 + 29] = 0\n  6159: u8 [a0 + 28] = 0\n  6162: u8 [a0 + 27] = 0\n  6165: u8 [a0 + 26] = 0\n  6168: u8 [a0 + 25] = 0\n  6171: u8 [a0 + 24] = 0\n  6174: u8 [a0 + 23] = 0\n  6177: u8 [a0 + 22] = 0\n  6180: u8 [a0 + 21] = 0\n  6183: u8 [a0 + 20] = 0\n  6186: u8 [a0 + 19] = 0\n  6189: u8 [a0 + 18] = 0\n  6192: u8 [a0 + 17] = 0\n  6195: u8 [a0 + 16] = 0\n  6198: u8 [a0 + 15] = 0\n  6201: u8 [a0 + 14] = 0\n  6204: u8 [a0 + 13] = 0\n  6207: u8 [a0 + 12] = 0\n  6210: u8 [a0 + 11] = 0\n  6213: u8 [a0 + 10] = 0\n  6216: u8 [a0 + 9] = 0\n  6219: u8 [a0 + 8] = 0\n  6222: u8 [a0 + 7] = 0\n  6225: u8 [a0 + 6] = 0\n  6228: u8 [a0 + 5] = 0\n  6231: u8 [a0 + 4] = 0\n  6234: u8 [a0 + 3] = 0\n  6237: u8 [a0 + 2] = 0\n  6240: u8 [a0 + 1] = 0\n  6243: u8 [a0 + 0] = 0\n  6245: a1 = 0x40\n  6248: a0 = 0\n  6250: ra = 58, jump @0\n      : @132 [@dyn 29] (gas: 49)\n  6255: a1 = sp + 0xffffffffffffffe0\n  6258: a1 = a1 & 0xffffffffffffffe0\n  6261: u64 [s1 + 0x218] = a1\n  6265: sp = a1\n  6267: i32 a0 = a0 + 0\n  6269: i32 a2 = a1 + 0\n  6271: a1 = 0x40\n  6274: ecalli 6 // 'hash_keccak_256'\n  6276: a3 = u64 [s1 + 0x218]\n  6280: a0 = u64 [a3 + 0x18]\n  6283: a1 = u64 [a3 + 0x10]\n  6286: a2 = u64 [a3 + 0x8]\n  6289: a3 = u64 [a3]\n  6291: a0 = reverse a0\n  6293: a1 = reverse a1\n  6295: a2 = reverse a2\n  6297: a3 = reverse a3\n  6299: a4 = s1 + 0x7ff\n  6303: a4 = a4 + 0x1b9\n  6307: u64 [a4 + 0x2e0] = a3\n  6311: u64 [a4 + 0x2d8] = a2\n  6315: u64 [a4 + 0x2d0] = a1\n  6319: u64 [a4 + 0x2c8] = a0\n  6323: u64 [a4 + 608] = 0\n  6327: u64 [a4 + 600] = 0\n  6331: u64 [a4 + 592] = 0\n  6335: u64 [a4 + 584] = 0\n  6339: u32 [a4 + 744] = 0x20\n  6344: a0 = s1 + 0x1000\n  6348: i32 a1 = a0 + 0xfffffffffffffc80\n  6352: a0 = s1 + 0x1000\n  6356: i32 a3 = a0 + 0xfffffffffffffc00\n  6360: a0 = s1 + 0x1000\n  6364: i32 a4 = a0 + 0xfffffffffffffca0\n  6368: a2 = 0xffffffffffffffff\n  6371: a0 = 0\n  6373: ecalli 5 // 'get_storage'\n  6375: a0 = s1 + 0x7ff\n  6379: a0 = a0 + 0x1b9\n  6383: a1 = u64 [a0 + 0x250]\n  6387: u64 [s1 + 0x218] = a1\n  6391: a1 = u64 [a0 + 0x248]\n  6395: u64 [s1 + 0x210] = a1\n  6399: a1 = u32 [a0 + 0x258]\n  6403: u64 [s1 + 0x208] = a1\n  6407: a0 = s1 + 0x1000\n  6411: i32 a0 = a0 + 0xfffffffffffffaa0\n  6415: ecalli 3 // 'caller'\n  6417: fallthrough\n      : @133 (gas: 24)\n  6418: a2 = s1 + 0x7ff\n  6422: a2 = a2 + 0x1b9\n  6426: a0 = u64 [a2 + 0xf0]\n  6430: a1 = u64 [a2 + 0xe8]\n  6434: a2 = i32 [a2 + 0xf8]\n  6438: a0 = reverse a0\n  6440: a3 = a0 >> 0x20\n  6443: a1 = reverse a1\n  6445: a4 = a1 << 0x20\n  6448: a3 = a3 | a4\n  6451: a0 = a0 << 0x20\n  6454: a2 = reverse a2\n  6456: a2 = a2 >> 0x20\n  6459: a0 = a0 | a2\n  6462: a1 = a1 >> 0x20\n  6465: a2 = u64 [s1 + 0x208]\n  6469: a1 = a1 ^ a2\n  6472: a2 = u64 [s1 + 0x210]\n  6476: a0 = a0 ^ a2\n  6479: a0 = a0 | a1\n  6482: a1 = u64 [s1 + 0x218]\n  6486: a1 = a1 ^ a3\n  6489: a0 = a0 | a1\n  6492: jump @135 if a0 != 0\n      : @134 (gas: 1)\n  6495: jump @470\n      : @135 (gas: 3)\n  6498: a0 = 0x40\n  6501: a1 = 0x20\n  6504: ra = 60, jump @0\n      : @136 [@dyn 30] (gas: 100)\n  6509: a1 = u8 [a0 + 0x11]\n  6512: a2 = u8 [a0 + 0x10]\n  6515: a3 = u8 [a0 + 0x12]\n  6518: a4 = u8 [a0 + 0x13]\n  6521: a1 = a1 << 0x8\n  6524: a1 = a1 | a2\n  6527: a3 = a3 << 0x10\n  6530: a4 = a4 << 0x18\n  6533: a3 = a3 | a4\n  6536: a1 = a1 | a3\n  6539: a2 = u8 [a0 + 0x15]\n  6542: a3 = u8 [a0 + 0x14]\n  6545: a4 = u8 [a0 + 0x16]\n  6548: a5 = u8 [a0 + 0x17]\n  6551: a2 = a2 << 0x8\n  6554: a2 = a2 | a3\n  6557: a4 = a4 << 0x10\n  6560: a5 = a5 << 0x18\n  6563: a4 = a4 | a5\n  6566: a2 = a2 | a4\n  6569: a2 = a2 << 0x20\n  6572: t0 = a2 | a1\n  6575: a2 = u8 [a0 + 0x1]\n  6578: a3 = u8 [a0]\n  6580: a4 = u8 [a0 + 0x2]\n  6583: a5 = u8 [a0 + 0x3]\n  6586: a2 = a2 << 0x8\n  6589: a2 = a2 | a3\n  6592: a4 = a4 << 0x10\n  6595: a5 = a5 << 0x18\n  6598: a4 = a4 | a5\n  6601: a2 = a2 | a4\n  6604: a3 = u8 [a0 + 0x5]\n  6607: a4 = u8 [a0 + 0x4]\n  6610: a5 = u8 [a0 + 0x6]\n  6613: a1 = u8 [a0 + 0x7]\n  6616: a3 = a3 << 0x8\n  6619: a3 = a3 | a4\n  6622: a5 = a5 << 0x10\n  6625: a1 = a1 << 0x18\n  6628: a1 = a1 | a5\n  6631: a1 = a1 | a3\n  6634: a1 = a1 << 0x20\n  6637: t1 = a1 | a2\n  6640: a1 = u8 [a0 + 0x19]\n  6643: a3 = u8 [a0 + 0x18]\n  6646: a4 = u8 [a0 + 0x1a]\n  6649: a5 = u8 [a0 + 0x1b]\n  6652: a1 = a1 << 0x8\n  6655: a1 = a1 | a3\n  6658: a4 = a4 << 0x10\n  6661: a5 = a5 << 0x18\n  6664: a4 = a4 | a5\n  6667: a1 = a1 | a4\n  6670: a3 = u8 [a0 + 0x1d]\n  6673: a4 = u8 [a0 + 0x1c]\n  6676: a5 = u8 [a0 + 0x1e]\n  6679: a2 = u8 [a0 + 0x1f]\n  6682: a3 = a3 << 0x8\n  6685: a3 = a3 | a4\n  6688: a5 = a5 << 0x10\n  6691: a2 = a2 << 0x18\n  6694: a2 = a2 | a5\n  6697: a2 = a2 | a3\n  6700: a2 = a2 << 0x20\n  6703: a3 = a2 | a1\n  6706: a1 = u8 [a0 + 0x9]\n  6709: a2 = u8 [a0 + 0x8]\n  6712: a4 = u8 [a0 + 0xa]\n  6715: a5 = u8 [a0 + 0xb]\n  6718: a1 = a1 << 0x8\n  6721: a1 = a1 | a2\n  6724: a4 = a4 << 0x10\n  6727: a5 = a5 << 0x18\n  6730: a4 = a4 | a5\n  6733: a1 = a1 | a4\n  6736: a2 = u8 [a0 + 0xd]\n  6739: a4 = u8 [a0 + 0xc]\n  6742: a5 = u8 [a0 + 0xe]\n  6745: a0 = u8 [a0 + 0xf]\n  6748: a2 = a2 << 0x8\n  6751: a2 = a2 | a4\n  6754: a5 = a5 << 0x10\n  6757: a0 = a0 << 0x18\n  6760: a0 = a0 | a5\n  6763: a0 = a0 | a2\n  6766: a0 = a0 << 0x20\n  6769: a0 = a0 | a1\n  6772: a4 = reverse a0\n  6774: a2 = reverse a3\n  6776: a5 = reverse t1\n  6778: a3 = reverse t0\n  6780: a0 = a3 | a5\n  6783: a1 = a2 | a4\n  6786: a1 = a1 | a0\n  6789: a1 = a1 >> 0x20\n  6792: a0 = a0 | a4\n  6795: a0 = a0 << 0x20\n  6798: a0 = a0 | a1\n  6801: jump @138 if a0 == 0\n      : @137 (gas: 1)\n  6804: jump @309\n      : @138 (gas: 8)\n  6807: i32 a0 = a2 + 0\n  6809: a1 = 0x20\n  6812: u64 [s1 + 0x218] = a0\n  6816: u64 [s1 + 0x238] = a2\n  6820: u64 [s1 + 0x230] = a3\n  6824: u64 [s1 + 0x228] = a4\n  6828: u64 [s1 + 0x220] = a5\n  6832: ra = 62, jump @0\n      : @139 [@dyn 31] (gas: 43)\n  6837: u8 [a0 + 31] = 0\n  6840: u8 [a0 + 30] = 0\n  6843: u8 [a0 + 29] = 0\n  6846: u8 [a0 + 28] = 0\n  6849: u8 [a0 + 27] = 0\n  6852: u8 [a0 + 26] = 0\n  6855: u8 [a0 + 25] = 0\n  6858: u8 [a0 + 24] = 0\n  6861: u8 [a0 + 23] = 0\n  6864: u8 [a0 + 22] = 0\n  6867: u8 [a0 + 21] = 0\n  6870: u8 [a0 + 20] = 0\n  6873: u8 [a0 + 19] = 0\n  6876: u8 [a0 + 18] = 0\n  6879: u8 [a0 + 17] = 0\n  6882: u8 [a0 + 16] = 0\n  6885: u8 [a0 + 15] = 0\n  6888: u8 [a0 + 14] = 0\n  6891: u8 [a0 + 13] = 0\n  6894: u8 [a0 + 12] = 0\n  6897: u8 [a0 + 11] = 0\n  6900: u8 [a0 + 10] = 0\n  6903: u8 [a0 + 9] = 0\n  6906: u8 [a0 + 8] = 0\n  6909: u8 [a0 + 7] = 0\n  6912: u8 [a0 + 6] = 0\n  6915: u8 [a0 + 5] = 0\n  6918: u8 [a0 + 3] = 0xa0\n  6923: u8 [a0 + 2] = 0x79\n  6927: u8 [a0 + 1] = 0xc3\n  6932: u8 [a0 + 0] = 0x8\n  6935: a1 = u64 [s1 + 0x228]\n  6939: a3 = u64 [s1 + 0x220]\n  6943: a3 = a3 | a1\n  6946: a4 = 0x100000000\n  6956: a1 = 0xfffffffc\n  6966: a2 = u64 [s1 + 0x238]\n  6970: a1 = a2 <u a1\n  6973: a2 = u64 [s1 + 0x230]\n  6977: a1 = 0 if a2 != 0\n  6979: a1 = 0 if a3 != 0\n  6981: u8 [a0 + 4] = 0\n  6984: jump @141 if a1 != 0\n      : @140 (gas: 1)\n  6987: jump @309\n      : @141 (gas: 6)\n  6990: a0 = u64 [s1 + 0x218]\n  6994: i32 a0 = a0 + 0x4\n  6997: a1 = 0x20\n  7000: u64 [s1 + 0x228] = a3\n  7004: u64 [s1 + 0x220] = a4\n  7008: ra = 64, jump @0\n      : @142 [@dyn 32] (gas: 41)\n  7013: a4 = u64 [s1 + 0x228]\n  7017: a3 = u64 [s1 + 0x230]\n  7021: a2 = u64 [s1 + 0x238]\n  7025: u8 [a0 + 31] = 0x20\n  7029: u8 [a0 + 30] = 0\n  7032: u8 [a0 + 29] = 0\n  7035: u8 [a0 + 28] = 0\n  7038: u8 [a0 + 27] = 0\n  7041: u8 [a0 + 26] = 0\n  7044: u8 [a0 + 25] = 0\n  7047: u8 [a0 + 24] = 0\n  7050: u8 [a0 + 23] = 0\n  7053: u8 [a0 + 22] = 0\n  7056: u8 [a0 + 21] = 0\n  7059: u8 [a0 + 20] = 0\n  7062: u8 [a0 + 19] = 0\n  7065: u8 [a0 + 18] = 0\n  7068: u8 [a0 + 17] = 0\n  7071: u8 [a0 + 16] = 0\n  7074: u8 [a0 + 15] = 0\n  7077: u8 [a0 + 14] = 0\n  7080: u8 [a0 + 13] = 0\n  7083: u8 [a0 + 12] = 0\n  7086: u8 [a0 + 11] = 0\n  7089: u8 [a0 + 10] = 0\n  7092: u8 [a0 + 9] = 0\n  7095: u8 [a0 + 8] = 0\n  7098: u8 [a0 + 7] = 0\n  7101: u8 [a0 + 6] = 0\n  7104: u8 [a0 + 5] = 0\n  7107: u8 [a0 + 4] = 0\n  7110: u8 [a0 + 3] = 0\n  7113: u8 [a0 + 2] = 0\n  7116: u8 [a0 + 1] = 0\n  7119: a1 = u64 [s1 + 0x220]\n  7123: a1 = a1 + 0xffffffffffffffdc\n  7126: a1 = a2 <u a1\n  7129: a1 = 0 if a3 != 0\n  7131: a1 = 0 if a4 != 0\n  7133: u8 [a0 + 0] = 0\n  7135: jump @144 if a1 != 0\n      : @143 (gas: 1)\n  7138: jump @309\n      : @144 (gas: 4)\n  7141: a0 = u64 [s1 + 0x218]\n  7145: i32 a0 = a0 + 0x24\n  7148: a1 = 0x20\n  7151: ra = 66, jump @0\n      : @145 [@dyn 33] (gas: 40)\n  7156: u8 [a0 + 31] = 0x9\n  7160: u8 [a0 + 30] = 0\n  7163: u8 [a0 + 29] = 0\n  7166: u8 [a0 + 28] = 0\n  7169: u8 [a0 + 27] = 0\n  7172: u8 [a0 + 26] = 0\n  7175: u8 [a0 + 25] = 0\n  7178: u8 [a0 + 24] = 0\n  7181: u8 [a0 + 23] = 0\n  7184: u8 [a0 + 22] = 0\n  7187: u8 [a0 + 21] = 0\n  7190: u8 [a0 + 20] = 0\n  7193: u8 [a0 + 19] = 0\n  7196: u8 [a0 + 18] = 0\n  7199: u8 [a0 + 17] = 0\n  7202: u8 [a0 + 16] = 0\n  7205: u8 [a0 + 15] = 0\n  7208: u8 [a0 + 14] = 0\n  7211: u8 [a0 + 13] = 0\n  7214: u8 [a0 + 12] = 0\n  7217: u8 [a0 + 11] = 0\n  7220: u8 [a0 + 10] = 0\n  7223: u8 [a0 + 9] = 0\n  7226: u8 [a0 + 8] = 0\n  7229: u8 [a0 + 7] = 0\n  7232: u8 [a0 + 6] = 0\n  7235: u8 [a0 + 5] = 0\n  7238: u8 [a0 + 4] = 0\n  7241: u8 [a0 + 3] = 0\n  7244: u8 [a0 + 2] = 0\n  7247: u8 [a0 + 1] = 0\n  7250: a1 = 0xffffffbc\n  7260: a2 = u64 [s1 + 0x238]\n  7264: a1 = a2 <u a1\n  7267: a2 = u64 [s1 + 0x230]\n  7271: a1 = 0 if a2 != 0\n  7273: a2 = u64 [s1 + 0x228]\n  7277: a1 = 0 if a2 != 0\n  7279: u8 [a0 + 0] = 0\n  7281: jump @147 if a1 != 0\n      : @146 (gas: 1)\n  7284: jump @309\n      : @147 (gas: 4)\n  7287: a0 = u64 [s1 + 0x218]\n  7291: i32 a0 = a0 + 0x44\n  7294: a1 = 0x20\n  7297: ra = 68, jump @0\n      : @148 [@dyn 34] (gas: 30)\n  7302: u8 [a0 + 31] = 0\n  7305: u8 [a0 + 30] = 0\n  7308: u8 [a0 + 29] = 0\n  7311: u8 [a0 + 28] = 0\n  7314: u8 [a0 + 27] = 0\n  7317: u8 [a0 + 26] = 0\n  7320: u8 [a0 + 25] = 0\n  7323: u8 [a0 + 24] = 0\n  7326: u8 [a0 + 23] = 0\n  7329: u8 [a0 + 22] = 0\n  7332: u8 [a0 + 21] = 0\n  7335: u8 [a0 + 20] = 0\n  7338: u8 [a0 + 19] = 0\n  7341: u8 [a0 + 18] = 0\n  7344: u8 [a0 + 17] = 0\n  7347: u8 [a0 + 16] = 0\n  7350: u8 [a0 + 15] = 0\n  7353: u8 [a0 + 14] = 0\n  7356: u8 [a0 + 13] = 0\n  7359: u8 [a0 + 12] = 0\n  7362: u8 [a0 + 11] = 0\n  7365: u8 [a0 + 10] = 0\n  7368: u8 [a0 + 9] = 0\n  7371: u8 [a0 + 8] = 0x72\n  7375: u8 [a0 + 7] = 0x65\n  7379: u8 [a0 + 6] = 0x6e\n  7383: u8 [a0 + 5] = 0x77\n  7387: u8 [a0 + 4] = 0x6f\n  7391: u8 [a0 + 3] = 0x20\n  7395: jump @338\n      : @149 (gas: 1)\n  7398: jump @151 if a0 != 3187165927\n      : @150 (gas: 1)\n  7405: jump @224\n      : @151 (gas: 1)\n  7408: jump @153 if a0 == 3936796890\n      : @152 (gas: 1)\n  7415: jump @310\n      : @153 (gas: 11)\n  7418: a0 = sp + 0xffffffffffffffe0\n  7421: a0 = a0 & 0xffffffffffffffe0\n  7424: u64 [s1 + 0x230] = a0\n  7428: sp = a0\n  7430: u64 [a0 + 24] = 0\n  7433: u64 [a0 + 16] = 0\n  7436: u64 [a0 + 8] = 0\n  7439: u64 [a0 + 0] = 0\n  7441: i32 a0 = a0 + 0\n  7443: ecalli 10 // 'value_transferred'\n  7445: fallthrough\n      : @154 (gas: 9)\n  7446: a3 = u64 [s1 + 0x230]\n  7450: a0 = u64 [a3 + 0x10]\n  7453: a1 = u64 [a3 + 0x18]\n  7456: a2 = u64 [a3 + 0x8]\n  7459: a3 = u64 [a3]\n  7461: a1 = a1 | a2\n  7464: a0 = a0 | a3\n  7467: a0 = a0 | a1\n  7470: jump @156 if a0 == 0\n      : @155 (gas: 1)\n  7473: jump @460\n      : @156 (gas: 3)\n  7476: a0 = u64 [s1 + 0x238]\n  7480: a0 = i32 [a0]\n  7482: jump @158 if a0 >u 35\n      : @157 (gas: 1)\n  7486: jump @460\n      : @158 (gas: 17)\n  7489: a0 = s1 + 0x1000\n  7493: i32 a0 = a0 + 0xfffffffffffffbe0\n  7497: a1 = 0x4\n  7500: ecalli 1 // 'call_data_load'\n  7502: a0 = s1 + 0x7ff\n  7506: a0 = a0 + 0x1b9\n  7510: a1 = u64 [a0 + 0x228]\n  7514: u64 [s1 + 0x238] = a1\n  7518: a1 = u64 [a0 + 0x230]\n  7522: u64 [s1 + 0x230] = a1\n  7526: a1 = u64 [a0 + 0x238]\n  7530: u64 [s1 + 0x228] = a1\n  7534: a0 = u64 [a0 + 0x240]\n  7538: u64 [s1 + 0x220] = a0\n  7542: a1 = 0x20\n  7545: a0 = 0\n  7547: ra = 70, jump @0\n      : @159 [@dyn 35] (gas: 71)\n  7552: a1 = u64 [s1 + 0x220]\n  7556: a1 = reverse a1\n  7558: a2 = u64 [s1 + 0x228]\n  7562: a2 = reverse a2\n  7564: a3 = u64 [s1 + 0x230]\n  7568: a3 = reverse a3\n  7570: a4 = u64 [s1 + 0x238]\n  7574: a4 = reverse a4\n  7576: a5 = a4 >> 0x38\n  7579: u8 [a0 + 0x1f] = a5\n  7582: a5 = a4 >> 0x30\n  7585: u8 [a0 + 0x1e] = a5\n  7588: a5 = a4 >> 0x28\n  7591: u8 [a0 + 0x1d] = a5\n  7594: a5 = a4 >> 0x20\n  7597: u8 [a0 + 0x1c] = a5\n  7600: a5 = a4 >> 0x18\n  7603: u8 [a0 + 0x1b] = a5\n  7606: a5 = a4 >> 0x10\n  7609: u8 [a0 + 0x1a] = a5\n  7612: a5 = a4 >> 0x8\n  7615: u8 [a0 + 0x19] = a5\n  7618: u8 [a0 + 0x18] = a4\n  7621: a4 = a3 >> 0x38\n  7624: u8 [a0 + 0x17] = a4\n  7627: a4 = a3 >> 0x30\n  7630: u8 [a0 + 0x16] = a4\n  7633: a4 = a3 >> 0x28\n  7636: u8 [a0 + 0x15] = a4\n  7639: a4 = a3 >> 0x20\n  7642: u8 [a0 + 0x14] = a4\n  7645: a4 = a3 >> 0x18\n  7648: u8 [a0 + 0x13] = a4\n  7651: a4 = a3 >> 0x10\n  7654: u8 [a0 + 0x12] = a4\n  7657: a4 = a3 >> 0x8\n  7660: u8 [a0 + 0x11] = a4\n  7663: u8 [a0 + 0x10] = a3\n  7666: a3 = a2 >> 0x38\n  7669: u8 [a0 + 0xf] = a3\n  7672: a3 = a2 >> 0x30\n  7675: u8 [a0 + 0xe] = a3\n  7678: a3 = a2 >> 0x28\n  7681: u8 [a0 + 0xd] = a3\n  7684: a3 = a2 >> 0x20\n  7687: u8 [a0 + 0xc] = a3\n  7690: a3 = a2 >> 0x18\n  7693: u8 [a0 + 0xb] = a3\n  7696: a3 = a2 >> 0x10\n  7699: u8 [a0 + 0xa] = a3\n  7702: a3 = a2 >> 0x8\n  7705: u8 [a0 + 0x9] = a3\n  7708: u8 [a0 + 0x8] = a2\n  7711: a2 = a1 >> 0x38\n  7714: u8 [a0 + 0x7] = a2\n  7717: a2 = a1 >> 0x30\n  7720: u8 [a0 + 0x6] = a2\n  7723: a2 = a1 >> 0x28\n  7726: u8 [a0 + 0x5] = a2\n  7729: a2 = a1 >> 0x20\n  7732: u8 [a0 + 0x4] = a2\n  7735: a2 = a1 >> 0x18\n  7738: u8 [a0 + 0x3] = a2\n  7741: a2 = a1 >> 0x10\n  7744: u8 [a0 + 0x2] = a2\n  7747: a2 = a1 >> 0x8\n  7750: u8 [a0 + 0x1] = a2\n  7753: u8 [a0] = a1\n  7755: a0 = 0x20\n  7758: a1 = 0x20\n  7761: ra = 72, jump @0\n      : @160 [@dyn 36] (gas: 2)\n  7766: a1 = 0x5\n  7769: jump @174\n      : @161 (gas: 1)\n  7772: jump @163 if a0 == 1889567281\n      : @162 (gas: 1)\n  7779: jump @281\n      : @163 (gas: 11)\n  7782: a0 = sp + 0xffffffffffffffe0\n  7785: a0 = a0 & 0xffffffffffffffe0\n  7788: u64 [s1 + 0x230] = a0\n  7792: sp = a0\n  7794: u64 [a0 + 24] = 0\n  7797: u64 [a0 + 16] = 0\n  7800: u64 [a0 + 8] = 0\n  7803: u64 [a0 + 0] = 0\n  7805: i32 a0 = a0 + 0\n  7807: ecalli 10 // 'value_transferred'\n  7809: fallthrough\n      : @164 (gas: 9)\n  7810: a3 = u64 [s1 + 0x230]\n  7814: a0 = u64 [a3 + 0x10]\n  7817: a1 = u64 [a3 + 0x18]\n  7820: a2 = u64 [a3 + 0x8]\n  7823: a3 = u64 [a3]\n  7825: a1 = a1 | a2\n  7828: a0 = a0 | a3\n  7831: a0 = a0 | a1\n  7834: jump @166 if a0 == 0\n      : @165 (gas: 1)\n  7837: jump @460\n      : @166 (gas: 3)\n  7840: a0 = u64 [s1 + 0x238]\n  7844: a0 = i32 [a0]\n  7846: jump @168 if a0 >u 35\n      : @167 (gas: 1)\n  7850: jump @460\n      : @168 (gas: 5)\n  7853: a0 = s1 + 0x1000\n  7857: i32 a0 = a0 + 0xfffffffffffffc00\n  7861: a1 = 0x4\n  7864: ecalli 1 // 'call_data_load'\n  7866: fallthrough\n      : @169 (gas: 14)\n  7867: a2 = s1 + 0x7ff\n  7871: a2 = a2 + 0x1b9\n  7875: a1 = u64 [a2 + 0x258]\n  7879: a3 = u64 [a2 + 0x260]\n  7883: a0 = 0x100000000\n  7893: a0 = a0 ^ a1\n  7896: a0 = a0 | a3\n  7899: u64 [s1 + 0x238] = a1\n  7903: a1 = a1 >> 0x20\n  7906: a1 = a1 <u 0x1\n  7909: u64 [s1 + 0x230] = a3\n  7913: a1 = 0 if a3 != 0\n  7915: a1 = 0 if a0 == 0\n  7917: jump @171 if a1 != 0\n      : @170 (gas: 1)\n  7920: jump @462\n      : @171 (gas: 7)\n  7923: a0 = u64 [a2 + 0x250]\n  7927: u64 [s1 + 0x220] = a0\n  7931: a0 = u64 [a2 + 0x248]\n  7935: u64 [s1 + 0x228] = a0\n  7939: a1 = 0x20\n  7942: a0 = 0\n  7944: ra = 74, jump @0\n      : @172 [@dyn 37] (gas: 71)\n  7949: a1 = u64 [s1 + 0x230]\n  7953: a1 = reverse a1\n  7955: a2 = u64 [s1 + 0x238]\n  7959: a2 = reverse a2\n  7961: a3 = u64 [s1 + 0x220]\n  7965: a3 = reverse a3\n  7967: a4 = u64 [s1 + 0x228]\n  7971: a4 = reverse a4\n  7973: a5 = a4 >> 0x38\n  7976: u8 [a0 + 0x1f] = a5\n  7979: a5 = a4 >> 0x30\n  7982: u8 [a0 + 0x1e] = a5\n  7985: a5 = a4 >> 0x28\n  7988: u8 [a0 + 0x1d] = a5\n  7991: a5 = a4 >> 0x20\n  7994: u8 [a0 + 0x1c] = a5\n  7997: a5 = a4 >> 0x18\n  8000: u8 [a0 + 0x1b] = a5\n  8003: a5 = a4 >> 0x10\n  8006: u8 [a0 + 0x1a] = a5\n  8009: a5 = a4 >> 0x8\n  8012: u8 [a0 + 0x19] = a5\n  8015: u8 [a0 + 0x18] = a4\n  8018: u8 [a0 + 0x10] = a3\n  8021: a4 = a3 >> 0x38\n  8024: u8 [a0 + 0x17] = a4\n  8027: a4 = a3 >> 0x30\n  8030: u8 [a0 + 0x16] = a4\n  8033: a4 = a3 >> 0x28\n  8036: u8 [a0 + 0x15] = a4\n  8039: a4 = a3 >> 0x20\n  8042: u8 [a0 + 0x14] = a4\n  8045: a4 = a3 >> 0x18\n  8048: u8 [a0 + 0x13] = a4\n  8051: a4 = a3 >> 0x10\n  8054: u8 [a0 + 0x12] = a4\n  8057: a3 = a3 >> 0x8\n  8060: u8 [a0 + 0x11] = a3\n  8063: u8 [a0 + 0x8] = a2\n  8066: a3 = a2 >> 0x38\n  8069: u8 [a0 + 0xf] = a3\n  8072: a3 = a2 >> 0x30\n  8075: u8 [a0 + 0xe] = a3\n  8078: a3 = a2 >> 0x28\n  8081: u8 [a0 + 0xd] = a3\n  8084: a3 = a2 >> 0x20\n  8087: u8 [a0 + 0xc] = a3\n  8090: a3 = a2 >> 0x18\n  8093: u8 [a0 + 0xb] = a3\n  8096: a3 = a2 >> 0x10\n  8099: u8 [a0 + 0xa] = a3\n  8102: a2 = a2 >> 0x8\n  8105: u8 [a0 + 0x9] = a2\n  8108: u8 [a0] = a1\n  8110: a2 = a1 >> 0x38\n  8113: u8 [a0 + 0x7] = a2\n  8116: a2 = a1 >> 0x30\n  8119: u8 [a0 + 0x6] = a2\n  8122: a2 = a1 >> 0x28\n  8125: u8 [a0 + 0x5] = a2\n  8128: a2 = a1 >> 0x20\n  8131: u8 [a0 + 0x4] = a2\n  8134: a2 = a1 >> 0x18\n  8137: u8 [a0 + 0x3] = a2\n  8140: a2 = a1 >> 0x10\n  8143: u8 [a0 + 0x2] = a2\n  8146: a1 = a1 >> 0x8\n  8149: u8 [a0 + 0x1] = a1\n  8152: a0 = 0x20\n  8155: a1 = 0x20\n  8158: ra = 76, jump @0\n      : @173 [@dyn 38] (gas: 2)\n  8163: a1 = 0x4\n  8166: fallthrough\n      : @174 (gas: 35)\n  8167: u8 [a0 + 0x1f] = a1\n  8170: u8 [a0 + 30] = 0\n  8173: u8 [a0 + 29] = 0\n  8176: u8 [a0 + 28] = 0\n  8179: u8 [a0 + 27] = 0\n  8182: u8 [a0 + 26] = 0\n  8185: u8 [a0 + 25] = 0\n  8188: u8 [a0 + 24] = 0\n  8191: u8 [a0 + 23] = 0\n  8194: u8 [a0 + 22] = 0\n  8197: u8 [a0 + 21] = 0\n  8200: u8 [a0 + 20] = 0\n  8203: u8 [a0 + 19] = 0\n  8206: u8 [a0 + 18] = 0\n  8209: u8 [a0 + 17] = 0\n  8212: u8 [a0 + 16] = 0\n  8215: u8 [a0 + 15] = 0\n  8218: u8 [a0 + 14] = 0\n  8221: u8 [a0 + 13] = 0\n  8224: u8 [a0 + 12] = 0\n  8227: u8 [a0 + 11] = 0\n  8230: u8 [a0 + 10] = 0\n  8233: u8 [a0 + 9] = 0\n  8236: u8 [a0 + 8] = 0\n  8239: u8 [a0 + 7] = 0\n  8242: u8 [a0 + 6] = 0\n  8245: u8 [a0 + 5] = 0\n  8248: u8 [a0 + 4] = 0\n  8251: u8 [a0 + 3] = 0\n  8254: u8 [a0 + 2] = 0\n  8257: u8 [a0 + 1] = 0\n  8260: u8 [a0 + 0] = 0\n  8262: a1 = 0x40\n  8265: a0 = 0\n  8267: ra = 78, jump @0\n      : @175 [@dyn 39] (gas: 29)\n  8272: a1 = sp + 0xffffffffffffffe0\n  8275: a1 = a1 & 0xffffffffffffffe0\n  8278: u64 [s1 + 0x238] = a1\n  8282: sp = a1\n  8284: i32 a0 = a0 + 0\n  8286: i32 a2 = a1 + 0\n  8288: a1 = 0x40\n  8291: ecalli 6 // 'hash_keccak_256'\n  8293: a3 = u64 [s1 + 0x238]\n  8297: a0 = u64 [a3 + 0x18]\n  8300: a1 = u64 [a3 + 0x10]\n  8303: a2 = u64 [a3 + 0x8]\n  8306: a3 = u64 [a3]\n  8308: a0 = reverse a0\n  8310: a1 = reverse a1\n  8312: a2 = reverse a2\n  8314: a3 = reverse a3\n  8316: a4 = s1 + 0x7ff\n  8320: a4 = a4 + 0x1b9\n  8324: u64 [a4 + 0x2e0] = a3\n  8328: u64 [a4 + 0x2d8] = a2\n  8332: u64 [a4 + 0x2d0] = a1\n  8336: u64 [a4 + 0x2c8] = a0\n  8340: u64 [a4 + 608] = 0\n  8344: u64 [a4 + 600] = 0\n  8348: u64 [a4 + 592] = 0\n  8352: u64 [a4 + 584] = 0\n  8356: u32 [a4 + 744] = 0x20\n  8361: jump @289\n      : @176 (gas: 11)\n  8364: a0 = sp + 0xffffffffffffffe0\n  8367: a0 = a0 & 0xffffffffffffffe0\n  8370: u64 [s1 + 0x230] = a0\n  8374: sp = a0\n  8376: u64 [a0 + 24] = 0\n  8379: u64 [a0 + 16] = 0\n  8382: u64 [a0 + 8] = 0\n  8385: u64 [a0 + 0] = 0\n  8387: i32 a0 = a0 + 0\n  8389: ecalli 10 // 'value_transferred'\n  8391: fallthrough\n      : @177 (gas: 9)\n  8392: a3 = u64 [s1 + 0x230]\n  8396: a0 = u64 [a3 + 0x10]\n  8399: a1 = u64 [a3 + 0x18]\n  8402: a2 = u64 [a3 + 0x8]\n  8405: a3 = u64 [a3]\n  8407: a1 = a1 | a2\n  8410: a0 = a0 | a3\n  8413: a0 = a0 | a1\n  8416: jump @179 if a0 == 0\n      : @178 (gas: 1)\n  8419: jump @460\n      : @179 (gas: 3)\n  8422: a0 = u64 [s1 + 0x238]\n  8426: a0 = i32 [a0]\n  8428: jump @181 if a0 >u 35\n      : @180 (gas: 1)\n  8432: jump @460\n      : @181 (gas: 14)\n  8435: a0 = s1 + 0x1000\n  8439: i32 a0 = a0 + 0xfffffffffffffa60\n  8443: a1 = 0x4\n  8446: ecalli 1 // 'call_data_load'\n  8448: a0 = s1 + 0x7ff\n  8452: a0 = a0 + 0x1b9\n  8456: a1 = u64 [a0 + 0xa8]\n  8460: u64 [s1 + 0x238] = a1\n  8464: a1 = u64 [a0 + 0xb0]\n  8468: u64 [s1 + 0x230] = a1\n  8472: a1 = u64 [a0 + 0xb8]\n  8476: u64 [s1 + 0x228] = a1\n  8480: a0 = u64 [a0 + 0xc0]\n  8484: jump @301\n      : @182 (gas: 11)\n  8487: a0 = sp + 0xffffffffffffffe0\n  8490: a0 = a0 & 0xffffffffffffffe0\n  8493: u64 [s1 + 0x230] = a0\n  8497: sp = a0\n  8499: u64 [a0 + 24] = 0\n  8502: u64 [a0 + 16] = 0\n  8505: u64 [a0 + 8] = 0\n  8508: u64 [a0 + 0] = 0\n  8510: i32 a0 = a0 + 0\n  8512: ecalli 10 // 'value_transferred'\n  8514: fallthrough\n      : @183 (gas: 9)\n  8515: a3 = u64 [s1 + 0x230]\n  8519: a0 = u64 [a3 + 0x10]\n  8522: a1 = u64 [a3 + 0x18]\n  8525: a2 = u64 [a3 + 0x8]\n  8528: a3 = u64 [a3]\n  8530: a1 = a1 | a2\n  8533: a0 = a0 | a3\n  8536: a0 = a0 | a1\n  8539: jump @185 if a0 == 0\n      : @184 (gas: 1)\n  8542: jump @460\n      : @185 (gas: 3)\n  8545: a0 = u64 [s1 + 0x238]\n  8549: a0 = i32 [a0]\n  8551: jump @187 if a0 >u 35\n      : @186 (gas: 1)\n  8555: jump @460\n      : @187 (gas: 5)\n  8558: a0 = s1 + 0x1000\n  8562: i32 a0 = a0 + 0xfffffffffffffc00\n  8566: a1 = 0x4\n  8569: ecalli 1 // 'call_data_load'\n  8571: fallthrough\n      : @188 (gas: 14)\n  8572: a2 = s1 + 0x7ff\n  8576: a2 = a2 + 0x1b9\n  8580: a1 = u64 [a2 + 0x258]\n  8584: a3 = u64 [a2 + 0x260]\n  8588: a0 = 0x100000000\n  8598: a0 = a0 ^ a1\n  8601: a0 = a0 | a3\n  8604: u64 [s1 + 0xe0] = a1\n  8608: a1 = a1 >> 0x20\n  8611: a1 = a1 <u 0x1\n  8614: u64 [s1 + 0xd8] = a3\n  8618: a1 = 0 if a3 != 0\n  8620: a1 = 0 if a0 == 0\n  8622: jump @190 if a1 != 0\n      : @189 (gas: 1)\n  8625: jump @462\n      : @190 (gas: 7)\n  8628: a0 = u64 [a2 + 0x250]\n  8632: u64 [s1 + 0xd0] = a0\n  8636: a0 = u64 [a2 + 0x248]\n  8640: u64 [s1 + 0xc8] = a0\n  8644: a1 = 0x20\n  8647: a0 = 0\n  8649: ra = 80, jump @0\n      : @191 [@dyn 40] (gas: 71)\n  8654: a1 = u64 [s1 + 0xd8]\n  8658: a1 = reverse a1\n  8660: a2 = u64 [s1 + 0xe0]\n  8664: a2 = reverse a2\n  8666: a3 = u64 [s1 + 0xd0]\n  8670: a3 = reverse a3\n  8672: a4 = u64 [s1 + 0xc8]\n  8676: a4 = reverse a4\n  8678: a5 = a4 >> 0x38\n  8681: u8 [a0 + 0x1f] = a5\n  8684: a5 = a4 >> 0x30\n  8687: u8 [a0 + 0x1e] = a5\n  8690: a5 = a4 >> 0x28\n  8693: u8 [a0 + 0x1d] = a5\n  8696: a5 = a4 >> 0x20\n  8699: u8 [a0 + 0x1c] = a5\n  8702: a5 = a4 >> 0x18\n  8705: u8 [a0 + 0x1b] = a5\n  8708: a5 = a4 >> 0x10\n  8711: u8 [a0 + 0x1a] = a5\n  8714: a5 = a4 >> 0x8\n  8717: u8 [a0 + 0x19] = a5\n  8720: u8 [a0 + 0x18] = a4\n  8723: u8 [a0 + 0x10] = a3\n  8726: a4 = a3 >> 0x38\n  8729: u8 [a0 + 0x17] = a4\n  8732: a4 = a3 >> 0x30\n  8735: u8 [a0 + 0x16] = a4\n  8738: a4 = a3 >> 0x28\n  8741: u8 [a0 + 0x15] = a4\n  8744: a4 = a3 >> 0x20\n  8747: u8 [a0 + 0x14] = a4\n  8750: a4 = a3 >> 0x18\n  8753: u8 [a0 + 0x13] = a4\n  8756: a4 = a3 >> 0x10\n  8759: u8 [a0 + 0x12] = a4\n  8762: a3 = a3 >> 0x8\n  8765: u8 [a0 + 0x11] = a3\n  8768: u8 [a0 + 0x8] = a2\n  8771: a3 = a2 >> 0x38\n  8774: u8 [a0 + 0xf] = a3\n  8777: a3 = a2 >> 0x30\n  8780: u8 [a0 + 0xe] = a3\n  8783: a3 = a2 >> 0x28\n  8786: u8 [a0 + 0xd] = a3\n  8789: a3 = a2 >> 0x20\n  8792: u8 [a0 + 0xc] = a3\n  8795: a3 = a2 >> 0x18\n  8798: u8 [a0 + 0xb] = a3\n  8801: a3 = a2 >> 0x10\n  8804: u8 [a0 + 0xa] = a3\n  8807: a2 = a2 >> 0x8\n  8810: u8 [a0 + 0x9] = a2\n  8813: u8 [a0] = a1\n  8815: a2 = a1 >> 0x38\n  8818: u8 [a0 + 0x7] = a2\n  8821: a2 = a1 >> 0x30\n  8824: u8 [a0 + 0x6] = a2\n  8827: a2 = a1 >> 0x28\n  8830: u8 [a0 + 0x5] = a2\n  8833: a2 = a1 >> 0x20\n  8836: u8 [a0 + 0x4] = a2\n  8839: a2 = a1 >> 0x18\n  8842: u8 [a0 + 0x3] = a2\n  8845: a2 = a1 >> 0x10\n  8848: u8 [a0 + 0x2] = a2\n  8851: a1 = a1 >> 0x8\n  8854: u8 [a0 + 0x1] = a1\n  8857: a0 = 0x20\n  8860: a1 = 0x20\n  8863: ra = 82, jump @0\n      : @192 [@dyn 41] (gas: 35)\n  8868: u8 [a0 + 31] = 0x4\n  8872: u8 [a0 + 30] = 0\n  8875: u8 [a0 + 29] = 0\n  8878: u8 [a0 + 28] = 0\n  8881: u8 [a0 + 27] = 0\n  8884: u8 [a0 + 26] = 0\n  8887: u8 [a0 + 25] = 0\n  8890: u8 [a0 + 24] = 0\n  8893: u8 [a0 + 23] = 0\n  8896: u8 [a0 + 22] = 0\n  8899: u8 [a0 + 21] = 0\n  8902: u8 [a0 + 20] = 0\n  8905: u8 [a0 + 19] = 0\n  8908: u8 [a0 + 18] = 0\n  8911: u8 [a0 + 17] = 0\n  8914: u8 [a0 + 16] = 0\n  8917: u8 [a0 + 15] = 0\n  8920: u8 [a0 + 14] = 0\n  8923: u8 [a0 + 13] = 0\n  8926: u8 [a0 + 12] = 0\n  8929: u8 [a0 + 11] = 0\n  8932: u8 [a0 + 10] = 0\n  8935: u8 [a0 + 9] = 0\n  8938: u8 [a0 + 8] = 0\n  8941: u8 [a0 + 7] = 0\n  8944: u8 [a0 + 6] = 0\n  8947: u8 [a0 + 5] = 0\n  8950: u8 [a0 + 4] = 0\n  8953: u8 [a0 + 3] = 0\n  8956: u8 [a0 + 2] = 0\n  8959: u8 [a0 + 1] = 0\n  8962: u8 [a0 + 0] = 0\n  8964: a1 = 0x40\n  8967: a0 = 0\n  8969: ra = 84, jump @0\n      : @193 [@dyn 42] (gas: 54)\n  8974: a1 = sp + 0xffffffffffffffe0\n  8977: a1 = a1 & 0xffffffffffffffe0\n  8980: u64 [s1 + 0x230] = a1\n  8984: sp = a1\n  8986: i32 a0 = a0 + 0\n  8988: i32 a2 = a1 + 0\n  8990: a1 = 0x40\n  8993: ecalli 6 // 'hash_keccak_256'\n  8995: a3 = u64 [s1 + 0x230]\n  8999: a0 = u64 [a3 + 0x18]\n  9002: a1 = u64 [a3 + 0x10]\n  9005: a2 = u64 [a3 + 0x8]\n  9008: a3 = u64 [a3]\n  9010: a0 = reverse a0\n  9012: a1 = reverse a1\n  9014: a2 = reverse a2\n  9016: a3 = reverse a3\n  9018: a4 = s1 + 0x7ff\n  9022: a4 = a4 + 0x1b9\n  9026: u64 [a4 + 0x2e0] = a3\n  9030: a3 = s1 + 0x7ff\n  9034: a3 = a3 + 0x1b9\n  9038: u64 [a3 + 0x2d8] = a2\n  9042: a2 = s1 + 0x7ff\n  9046: a2 = a2 + 0x1b9\n  9050: u64 [a2 + 0x2d0] = a1\n  9054: a1 = s1 + 0x7ff\n  9058: a1 = a1 + 0x1b9\n  9062: u64 [a1 + 0x2c8] = a0\n  9066: a0 = s1 + 0x7ff\n  9070: a0 = a0 + 0x1b9\n  9074: u64 [a0 + 608] = 0\n  9078: a0 = s1 + 0x7ff\n  9082: a0 = a0 + 0x1b9\n  9086: u64 [a0 + 600] = 0\n  9090: a0 = s1 + 0x7ff\n  9094: a0 = a0 + 0x1b9\n  9098: u64 [a0 + 592] = 0\n  9102: a0 = s1 + 0x7ff\n  9106: a0 = a0 + 0x1b9\n  9110: u64 [a0 + 584] = 0\n  9114: a0 = s1 + 0x7ff\n  9118: a0 = a0 + 0x1b9\n  9122: u32 [a0 + 744] = 0x20\n  9127: a0 = s1 + 0x1000\n  9131: i32 a1 = a0 + 0xfffffffffffffc80\n  9135: a0 = s1 + 0x1000\n  9139: i32 a3 = a0 + 0xfffffffffffffc00\n  9143: a0 = s1 + 0x1000\n  9147: i32 a4 = a0 + 0xfffffffffffffca0\n  9151: a2 = 0xffffffffffffffff\n  9154: a0 = 0\n  9156: ecalli 5 // 'get_storage'\n  9158: fallthrough\n      : @194 (gas: 11)\n  9159: a2 = s1 + 0x7ff\n  9163: a2 = a2 + 0x1b9\n  9167: a0 = u64 [a2 + 0x260]\n  9171: a1 = u64 [a2 + 0x258]\n  9175: a3 = u64 [a2 + 0x250]\n  9179: u64 [s1 + 0x58] = a0\n  9182: u64 [s1 + 0x50] = a1\n  9185: a0 = a0 | a1\n  9188: a1 = a3 <u 0x1\n  9191: a1 = 0 if a0 != 0\n  9193: jump @196 if a1 != 0\n      : @195 (gas: 1)\n  9196: jump @476\n      : @196 (gas: 12)\n  9199: a2 = u64 [a2 + 0x248]\n  9203: a0 = a2 >> 0x3b\n  9206: u64 [s1 + 0x48] = a3\n  9209: a1 = a3 << 0x5\n  9212: a0 = a0 | a1\n  9215: u64 [s1 + 0x228] = a0\n  9219: u64 [s1 + 0x40] = a2\n  9222: a2 = a2 << 0x5\n  9225: u64 [s1 + 0x230] = a2\n  9229: a0 = 0x40\n  9232: a1 = 0x20\n  9235: ra = 86, jump @0\n      : @197 [@dyn 43] (gas: 120)\n  9240: a1 = u8 [a0 + 0x19]\n  9243: a2 = u8 [a0 + 0x18]\n  9246: a3 = u8 [a0 + 0x1a]\n  9249: a4 = u8 [a0 + 0x1b]\n  9252: a1 = a1 << 0x8\n  9255: a1 = a1 | a2\n  9258: a3 = a3 << 0x10\n  9261: a4 = a4 << 0x18\n  9264: a3 = a3 | a4\n  9267: a1 = a1 | a3\n  9270: a2 = u8 [a0 + 0x1d]\n  9273: a3 = u8 [a0 + 0x1c]\n  9276: a4 = u8 [a0 + 0x1e]\n  9279: a5 = u8 [a0 + 0x1f]\n  9282: a2 = a2 << 0x8\n  9285: a2 = a2 | a3\n  9288: a4 = a4 << 0x10\n  9291: a5 = a5 << 0x18\n  9294: a4 = a4 | a5\n  9297: a2 = a2 | a4\n  9300: a2 = a2 << 0x20\n  9303: t0 = a2 | a1\n  9306: a2 = u8 [a0 + 0x11]\n  9309: a3 = u8 [a0 + 0x10]\n  9312: a4 = u8 [a0 + 0x12]\n  9315: a5 = u8 [a0 + 0x13]\n  9318: a2 = a2 << 0x8\n  9321: a2 = a2 | a3\n  9324: a4 = a4 << 0x10\n  9327: a5 = a5 << 0x18\n  9330: a4 = a4 | a5\n  9333: a2 = a2 | a4\n  9336: a3 = u8 [a0 + 0x15]\n  9339: a4 = u8 [a0 + 0x14]\n  9342: a5 = u8 [a0 + 0x16]\n  9345: a1 = u8 [a0 + 0x17]\n  9348: a3 = a3 << 0x8\n  9351: a3 = a3 | a4\n  9354: a5 = a5 << 0x10\n  9357: a1 = a1 << 0x18\n  9360: a1 = a1 | a5\n  9363: a1 = a1 | a3\n  9366: a1 = a1 << 0x20\n  9369: t1 = a1 | a2\n  9372: a1 = u8 [a0 + 0x9]\n  9375: a3 = u8 [a0 + 0x8]\n  9378: a4 = u8 [a0 + 0xa]\n  9381: a5 = u8 [a0 + 0xb]\n  9384: a1 = a1 << 0x8\n  9387: a1 = a1 | a3\n  9390: a4 = a4 << 0x10\n  9393: a5 = a5 << 0x18\n  9396: a4 = a4 | a5\n  9399: a1 = a1 | a4\n  9402: a3 = u8 [a0 + 0xd]\n  9405: a4 = u8 [a0 + 0xc]\n  9408: a5 = u8 [a0 + 0xe]\n  9411: a2 = u8 [a0 + 0xf]\n  9414: a3 = a3 << 0x8\n  9417: a3 = a3 | a4\n  9420: a5 = a5 << 0x10\n  9423: a2 = a2 << 0x18\n  9426: a2 = a2 | a5\n  9429: a2 = a2 | a3\n  9432: a2 = a2 << 0x20\n  9435: a3 = a2 | a1\n  9438: a1 = u8 [a0 + 0x1]\n  9441: a2 = u8 [a0]\n  9443: a4 = u8 [a0 + 0x2]\n  9446: a5 = u8 [a0 + 0x3]\n  9449: a1 = a1 << 0x8\n  9452: a1 = a1 | a2\n  9455: a4 = a4 << 0x10\n  9458: a5 = a5 << 0x18\n  9461: a4 = a4 | a5\n  9464: a1 = a1 | a4\n  9467: a2 = u8 [a0 + 0x5]\n  9470: a4 = u8 [a0 + 0x4]\n  9473: a5 = u8 [a0 + 0x6]\n  9476: a0 = u8 [a0 + 0x7]\n  9479: a2 = a2 << 0x8\n  9482: a2 = a2 | a4\n  9485: a5 = a5 << 0x10\n  9488: a0 = a0 << 0x18\n  9491: a0 = a0 | a5\n  9494: a0 = a0 | a2\n  9497: a0 = a0 << 0x20\n  9500: a0 = a0 | a1\n  9503: t2 = reverse a0\n  9505: ra = reverse a3\n  9507: a3 = reverse t1\n  9509: a2 = reverse t0\n  9511: a1 = u64 [s1 + 0x230]\n  9515: a0 = a1 + 0x3f\n  9518: a1 = a0 <u a1\n  9521: a4 = u64 [s1 + 0x228]\n  9525: a1 = a1 + a4\n  9528: a1 = a1 & 0x3f\n  9531: a0 = a0 & 0xffffffffffffffe0\n  9534: a0 = a0 + a2\n  9537: u64 [s1 + 0x18] = a2\n  9540: u64 [s1 + 0x228] = a0\n  9544: a2 = a0 <u a2\n  9547: a1 = a1 + a3\n  9550: a4 = a1 + a2\n  9553: a1 = a4 ^ a3\n  9556: u64 [s1 + 0x20] = a3\n  9559: a0 = a4 <u a3\n  9562: a0 = a2 if a1 == 0\n  9565: t0 = ra + a0\n  9568: a1 = t0 <u ra\n  9571: a5 = t2 + a1\n  9574: a2 = t0 >u 0\n  9576: a3 = a5 >u 0\n  9578: a3 = a2 if a5 == 0\n  9581: a2 = t0 | a5\n  9584: u64 [s1 + 0x220] = a4\n  9588: a4 = a4 >u 0\n  9590: a4 = a3 if a2 != 0\n  9593: jump @199 if a4 == 0\n      : @198 (gas: 1)\n  9596: jump @466\n      : @199 (gas: 7)\n  9599: a2 = a5 ^ t2\n  9602: a3 = a5 <u t2\n  9605: a1 = a3 if a2 != 0\n  9608: a3 = t0 ^ ra\n  9611: a2 = a2 | a3\n  9614: a0 = a1 if a2 != 0\n  9617: jump @201 if a0 == 0\n      : @200 (gas: 1)\n  9620: jump @466\n      : @201 (gas: 7)\n  9623: a0 = 0x40\n  9626: a1 = 0x20\n  9629: u64 [s1 + 0x30] = t2\n  9632: u64 [s1 + 0x28] = ra\n  9635: u64 [s1 + 0x218] = t0\n  9639: u64 [s1 + 0x210] = a5\n  9643: ra = 88, jump @0\n      : @202 [@dyn 44] (gas: 80)\n  9648: t0 = u64 [s1 + 0x28]\n  9651: a1 = u64 [s1 + 0x210]\n  9655: a1 = reverse a1\n  9657: a2 = u64 [s1 + 0x218]\n  9661: a2 = reverse a2\n  9663: a3 = u64 [s1 + 0x220]\n  9667: a3 = reverse a3\n  9669: a4 = u64 [s1 + 0x228]\n  9673: a4 = reverse a4\n  9675: u8 [a0 + 0x18] = a4\n  9678: a5 = a4 >> 0x38\n  9681: u8 [a0 + 0x1f] = a5\n  9684: a5 = a4 >> 0x30\n  9687: u8 [a0 + 0x1e] = a5\n  9690: a5 = a4 >> 0x28\n  9693: u8 [a0 + 0x1d] = a5\n  9696: a5 = a4 >> 0x20\n  9699: u8 [a0 + 0x1c] = a5\n  9702: a5 = a4 >> 0x18\n  9705: u8 [a0 + 0x1b] = a5\n  9708: a5 = a4 >> 0x10\n  9711: u8 [a0 + 0x1a] = a5\n  9714: a4 = a4 >> 0x8\n  9717: u8 [a0 + 0x19] = a4\n  9720: u8 [a0 + 0x10] = a3\n  9723: a4 = a3 >> 0x38\n  9726: u8 [a0 + 0x17] = a4\n  9729: a4 = a3 >> 0x30\n  9732: u8 [a0 + 0x16] = a4\n  9735: a4 = a3 >> 0x28\n  9738: u8 [a0 + 0x15] = a4\n  9741: a4 = a3 >> 0x20\n  9744: u8 [a0 + 0x14] = a4\n  9747: a4 = a3 >> 0x18\n  9750: u8 [a0 + 0x13] = a4\n  9753: a4 = a3 >> 0x10\n  9756: u8 [a0 + 0x12] = a4\n  9759: a3 = a3 >> 0x8\n  9762: u8 [a0 + 0x11] = a3\n  9765: u8 [a0 + 0x8] = a2\n  9768: a3 = a2 >> 0x38\n  9771: u8 [a0 + 0xf] = a3\n  9774: a3 = a2 >> 0x30\n  9777: u8 [a0 + 0xe] = a3\n  9780: a3 = a2 >> 0x28\n  9783: u8 [a0 + 0xd] = a3\n  9786: a3 = a2 >> 0x20\n  9789: u8 [a0 + 0xc] = a3\n  9792: a3 = a2 >> 0x18\n  9795: u8 [a0 + 0xb] = a3\n  9798: a3 = a2 >> 0x10\n  9801: u8 [a0 + 0xa] = a3\n  9804: a2 = a2 >> 0x8\n  9807: u8 [a0 + 0x9] = a2\n  9810: u8 [a0] = a1\n  9812: a2 = a1 >> 0x38\n  9815: u8 [a0 + 0x7] = a2\n  9818: a2 = a1 >> 0x30\n  9821: u8 [a0 + 0x6] = a2\n  9824: a2 = a1 >> 0x28\n  9827: u8 [a0 + 0x5] = a2\n  9830: a2 = a1 >> 0x20\n  9833: u8 [a0 + 0x4] = a2\n  9836: a2 = a1 >> 0x18\n  9839: u8 [a0 + 0x3] = a2\n  9842: a2 = a1 >> 0x10\n  9845: u8 [a0 + 0x2] = a2\n  9848: a1 = a1 >> 0x8\n  9851: a5 = u64 [s1 + 0x18]\n  9854: a2 = a5 | t0\n  9857: a3 = u64 [s1 + 0x30]\n  9860: a4 = u64 [s1 + 0x20]\n  9863: a3 = a3 | a4\n  9866: a2 = a2 | a3\n  9869: a2 = a2 >> 0x20\n  9872: a3 = a3 | t0\n  9875: a3 = a3 << 0x20\n  9878: a2 = a2 | a3\n  9881: u8 [a0 + 0x1] = a1\n  9884: jump @204 if a2 == 0\n      : @203 (gas: 1)\n  9887: jump @309\n      : @204 (gas: 4)\n  9890: i32 a0 = a5 + 0\n  9892: a1 = 0x20\n  9895: u64 [s1 + 0x38] = a0\n  9898: ra = 90, jump @0\n      : @205 [@dyn 45] (gas: 76)\n  9903: t0 = u64 [s1 + 0x58]\n  9906: a1 = reverse t0\n  9908: t1 = u64 [s1 + 0x50]\n  9911: a2 = reverse t1\n  9913: t2 = u64 [s1 + 0x48]\n  9916: a3 = reverse t2\n  9918: ra = u64 [s1 + 0x40]\n  9921: a4 = reverse ra\n  9923: a5 = a4 >> 0x38\n  9926: u8 [a0 + 0x1f] = a5\n  9929: a5 = a4 >> 0x30\n  9932: u8 [a0 + 0x1e] = a5\n  9935: a5 = a4 >> 0x28\n  9938: u8 [a0 + 0x1d] = a5\n  9941: a5 = a4 >> 0x20\n  9944: u8 [a0 + 0x1c] = a5\n  9947: a5 = a4 >> 0x18\n  9950: u8 [a0 + 0x1b] = a5\n  9953: a5 = a4 >> 0x10\n  9956: u8 [a0 + 0x1a] = a5\n  9959: a5 = a4 >> 0x8\n  9962: u8 [a0 + 0x19] = a5\n  9965: u8 [a0 + 0x18] = a4\n  9968: u8 [a0 + 0x10] = a3\n  9971: a4 = a3 >> 0x38\n  9974: u8 [a0 + 0x17] = a4\n  9977: a4 = a3 >> 0x30\n  9980: u8 [a0 + 0x16] = a4\n  9983: a4 = a3 >> 0x28\n  9986: u8 [a0 + 0x15] = a4\n  9989: a4 = a3 >> 0x20\n  9992: u8 [a0 + 0x14] = a4\n  9995: a4 = a3 >> 0x18\n  9998: u8 [a0 + 0x13] = a4\n 10001: a4 = a3 >> 0x10\n 10004: u8 [a0 + 0x12] = a4\n 10007: a3 = a3 >> 0x8\n 10010: u8 [a0 + 0x11] = a3\n 10013: u8 [a0 + 0x8] = a2\n 10016: a3 = a2 >> 0x38\n 10019: u8 [a0 + 0xf] = a3\n 10022: a3 = a2 >> 0x30\n 10025: u8 [a0 + 0xe] = a3\n 10028: a3 = a2 >> 0x28\n 10031: u8 [a0 + 0xd] = a3\n 10034: a3 = a2 >> 0x20\n 10037: u8 [a0 + 0xc] = a3\n 10040: a3 = a2 >> 0x18\n 10043: u8 [a0 + 0xb] = a3\n 10046: a3 = a2 >> 0x10\n 10049: u8 [a0 + 0xa] = a3\n 10052: a2 = a2 >> 0x8\n 10055: u8 [a0 + 0x9] = a2\n 10058: u8 [a0] = a1\n 10060: a2 = a1 >> 0x38\n 10063: u8 [a0 + 0x7] = a2\n 10066: a2 = a1 >> 0x30\n 10069: u8 [a0 + 0x6] = a2\n 10072: a2 = a1 >> 0x28\n 10075: u8 [a0 + 0x5] = a2\n 10078: a2 = a1 >> 0x20\n 10081: u8 [a0 + 0x4] = a2\n 10084: a2 = a1 >> 0x18\n 10087: u8 [a0 + 0x3] = a2\n 10090: a2 = a1 >> 0x10\n 10093: u8 [a0 + 0x2] = a2\n 10096: a1 = a1 >> 0x8\n 10099: a2 = ra | t1\n 10102: a3 = t2 | t0\n 10105: a2 = a2 | a3\n 10108: a2 = a2 >> 0x1b\n 10111: a3 = a3 | t1\n 10114: a3 = a3 << 0x25\n 10117: a2 = a2 | a3\n 10120: u8 [a0 + 0x1] = a1\n 10123: jump @207 if a2 == 0\n      : @206 (gas: 1)\n 10126: jump @309\n      : @207 (gas: 10)\n 10129: a3 = u64 [s1 + 0x30]\n 10132: a4 = u64 [s1 + 0x28]\n 10135: a0 = a4 | a3\n 10138: a1 = 0xffffffe0\n 10148: a2 = u64 [s1 + 0x18]\n 10151: a1 = a2 <u a1\n 10154: a5 = u64 [s1 + 0x20]\n 10157: a1 = 0 if a5 != 0\n 10159: a1 = 0 if a0 != 0\n 10161: jump @209 if a1 != 0\n      : @208 (gas: 1)\n 10164: jump @309\n      : @209 (gas: 20)\n 10167: a0 = a2\n 10169: a2 = a2 + 0x20\n 10172: a0 = a2 <u a0\n 10175: a1 = a5 + a0\n 10178: u64 [s1 + 0x60] = a1\n 10181: a1 = a1 <u a5\n 10184: a1 = a0 if a0 == 0\n 10187: a0 = u64 [s1 + 0x238]\n 10191: a0 = i32 [a0]\n 10193: u64 [s1 + 0x238] = a0\n 10197: a1 = a1 + a4\n 10200: u64 [s1 + 0x70] = a1\n 10203: a0 = a1 <u a4\n 10206: a0 = a0 + a3\n 10209: u64 [s1 + 0x78] = a0\n 10212: u64 [s1 + 0x68] = a2\n 10215: i32 a0 = a2 + 0\n 10217: a1 = i32 [s1 + 0x230]\n 10221: u64 [s1 + 0x230] = a1\n 10225: ra = 92, jump @0\n      : @210 [@dyn 46] (gas: 17)\n 10230: i32 a0 = a0 + 0\n 10232: a1 = u64 [s1 + 0x230]\n 10236: a2 = u64 [s1 + 0x238]\n 10240: ecalli 0 // 'call_data_copy'\n 10241: a0 = s1 + 0x1000\n 10245: u64 [a0 + 4294965560] = 0\n 10249: a0 = s1 + 0x1000\n 10253: u64 [a0 + 4294965552] = 0\n 10257: a0 = s1 + 0x1000\n 10261: u64 [a0 + 4294965544] = 0\n 10265: a0 = s1 + 0x7ff\n 10269: a0 = a0 + 0x141\n 10273: a2 = s1 + 0x7ff\n 10277: a2 = a2 + 0x121\n 10281: a3 = s1 + 0x1000\n 10285: u64 [a3 + 4294965536] = 0x2\n 10290: ra = 94, jump @25\n      : @211 [@dyn 47] (gas: 16)\n 10295: a0 = s1 + 0x1000\n 10299: a0 = u64 [a0 + 0xfffffffffffff958]\n 10303: a1 = s1 + 0x1000\n 10307: a1 = u64 [a1 + 0xfffffffffffff950]\n 10311: a2 = s1 + 0x1000\n 10315: a2 = u64 [a2 + 0xfffffffffffff948]\n 10319: a3 = s1 + 0x1000\n 10323: a3 = u64 [a3 + 0xfffffffffffff940]\n 10327: u64 [s1 + 0xc0] = a0\n 10331: u64 [s1 + 0xb0] = a2\n 10335: a0 = a0 | a2\n 10338: u64 [s1 + 0xb8] = a1\n 10342: u64 [s1 + 0xa8] = a3\n 10346: a1 = a1 | a3\n 10349: a0 = a0 | a1\n 10352: jump @213 if a0 == 0\n      : @212 (gas: 1)\n 10355: jump @426\n      : @213 (gas: 3)\n 10358: a0 = 0x40\n 10361: a1 = 0x20\n 10364: ra = 96, jump @0\n      : @214 [@dyn 48] (gas: 100)\n 10369: a1 = u8 [a0 + 0x19]\n 10372: a2 = u8 [a0 + 0x18]\n 10375: a3 = u8 [a0 + 0x1a]\n 10378: a4 = u8 [a0 + 0x1b]\n 10381: a1 = a1 << 0x8\n 10384: a1 = a1 | a2\n 10387: a3 = a3 << 0x10\n 10390: a4 = a4 << 0x18\n 10393: a3 = a3 | a4\n 10396: a1 = a1 | a3\n 10399: a2 = u8 [a0 + 0x1d]\n 10402: a3 = u8 [a0 + 0x1c]\n 10405: a4 = u8 [a0 + 0x1e]\n 10408: a5 = u8 [a0 + 0x1f]\n 10411: a2 = a2 << 0x8\n 10414: a2 = a2 | a3\n 10417: a4 = a4 << 0x10\n 10420: a5 = a5 << 0x18\n 10423: a4 = a4 | a5\n 10426: a2 = a2 | a4\n 10429: a2 = a2 << 0x20\n 10432: t0 = a2 | a1\n 10435: a2 = u8 [a0 + 0x11]\n 10438: a3 = u8 [a0 + 0x10]\n 10441: a4 = u8 [a0 + 0x12]\n 10444: a5 = u8 [a0 + 0x13]\n 10447: a2 = a2 << 0x8\n 10450: a2 = a2 | a3\n 10453: a4 = a4 << 0x10\n 10456: a5 = a5 << 0x18\n 10459: a4 = a4 | a5\n 10462: a2 = a2 | a4\n 10465: a3 = u8 [a0 + 0x15]\n 10468: a4 = u8 [a0 + 0x14]\n 10471: a5 = u8 [a0 + 0x16]\n 10474: a1 = u8 [a0 + 0x17]\n 10477: a3 = a3 << 0x8\n 10480: a3 = a3 | a4\n 10483: a5 = a5 << 0x10\n 10486: a1 = a1 << 0x18\n 10489: a1 = a1 | a5\n 10492: a1 = a1 | a3\n 10495: a1 = a1 << 0x20\n 10498: t1 = a1 | a2\n 10501: a1 = u8 [a0 + 0x9]\n 10504: a3 = u8 [a0 + 0x8]\n 10507: a4 = u8 [a0 + 0xa]\n 10510: a5 = u8 [a0 + 0xb]\n 10513: a1 = a1 << 0x8\n 10516: a1 = a1 | a3\n 10519: a4 = a4 << 0x10\n 10522: a5 = a5 << 0x18\n 10525: a4 = a4 | a5\n 10528: a1 = a1 | a4\n 10531: a3 = u8 [a0 + 0xd]\n 10534: a4 = u8 [a0 + 0xc]\n 10537: a5 = u8 [a0 + 0xe]\n 10540: a2 = u8 [a0 + 0xf]\n 10543: a3 = a3 << 0x8\n 10546: a3 = a3 | a4\n 10549: a5 = a5 << 0x10\n 10552: a2 = a2 << 0x18\n 10555: a2 = a2 | a5\n 10558: a2 = a2 | a3\n 10561: a2 = a2 << 0x20\n 10564: a3 = a2 | a1\n 10567: a1 = u8 [a0 + 0x1]\n 10570: a2 = u8 [a0]\n 10572: a4 = u8 [a0 + 0x2]\n 10575: a5 = u8 [a0 + 0x3]\n 10578: a1 = a1 << 0x8\n 10581: a1 = a1 | a2\n 10584: a4 = a4 << 0x10\n 10587: a5 = a5 << 0x18\n 10590: a4 = a4 | a5\n 10593: a1 = a1 | a4\n 10596: a2 = u8 [a0 + 0x5]\n 10599: a4 = u8 [a0 + 0x4]\n 10602: a5 = u8 [a0 + 0x6]\n 10605: a0 = u8 [a0 + 0x7]\n 10608: a2 = a2 << 0x8\n 10611: a2 = a2 | a4\n 10614: a5 = a5 << 0x10\n 10617: a0 = a0 << 0x18\n 10620: a0 = a0 | a5\n 10623: a0 = a0 | a2\n 10626: a0 = a0 << 0x20\n 10629: a0 = a0 | a1\n 10632: a4 = reverse a0\n 10634: a5 = reverse a3\n 10636: a3 = reverse t1\n 10638: a2 = reverse t0\n 10640: a0 = a3 | a4\n 10643: a1 = a2 | a5\n 10646: a1 = a1 | a0\n 10649: a1 = a1 >> 0x20\n 10652: a0 = a0 | a5\n 10655: a0 = a0 << 0x20\n 10658: a0 = a0 | a1\n 10661: jump @216 if a0 == 0\n      : @215 (gas: 1)\n 10664: jump @309\n      : @216 (gas: 20)\n 10667: a0 = a2 + 0x20\n 10670: u64 [s1 + 0x230] = a0\n 10674: t0 = a0 <u a2\n 10677: a0 = a3 + t0\n 10680: u64 [s1 + 0x238] = a0\n 10684: a1 = a0 <u a3\n 10687: a1 = t0 if t0 == 0\n 10690: a1 = a1 + a5\n 10693: u64 [s1 + 0x220] = a1\n 10697: a0 = a1 <u a5\n 10700: a0 = a0 + a4\n 10703: u64 [s1 + 0x228] = a0\n 10707: i32 a0 = a2 + 0\n 10709: a1 = 0x20\n 10712: u64 [s1 + 0xd8] = a0\n 10716: u64 [s1 + 0xf0] = a2\n 10720: u64 [s1 + 0xe8] = a3\n 10724: u64 [s1 + 0xe0] = a4\n 10728: u64 [s1 + 0xf8] = a5\n 10732: ra = 98, jump @0\n      : @217 [@dyn 49] (gas: 35)\n 10737: u8 [a0 + 31] = 0x20\n 10741: u8 [a0 + 30] = 0\n 10744: u8 [a0 + 29] = 0\n 10747: u8 [a0 + 28] = 0\n 10750: u8 [a0 + 27] = 0\n 10753: u8 [a0 + 26] = 0\n 10756: u8 [a0 + 25] = 0\n 10759: u8 [a0 + 24] = 0\n 10762: u8 [a0 + 23] = 0\n 10765: u8 [a0 + 22] = 0\n 10768: u8 [a0 + 21] = 0\n 10771: u8 [a0 + 20] = 0\n 10774: u8 [a0 + 19] = 0\n 10777: u8 [a0 + 18] = 0\n 10780: u8 [a0 + 17] = 0\n 10783: u8 [a0 + 16] = 0\n 10786: u8 [a0 + 15] = 0\n 10789: u8 [a0 + 14] = 0\n 10792: u8 [a0 + 13] = 0\n 10795: u8 [a0 + 12] = 0\n 10798: u8 [a0 + 11] = 0\n 10801: u8 [a0 + 10] = 0\n 10804: u8 [a0 + 9] = 0\n 10807: u8 [a0 + 8] = 0\n 10810: u8 [a0 + 7] = 0\n 10813: u8 [a0 + 6] = 0\n 10816: u8 [a0 + 5] = 0\n 10819: u8 [a0 + 4] = 0\n 10822: u8 [a0 + 3] = 0\n 10825: u8 [a0 + 2] = 0\n 10828: u8 [a0 + 1] = 0\n 10831: u8 [a0 + 0] = 0\n 10833: a1 = 0x20\n 10836: a0 = u64 [s1 + 0x38]\n 10839: ra = 100, jump @0\n      : @218 [@dyn 50] (gas: 12)\n 10844: t0 = u64 [s1 + 0x230]\n 10848: a3 = u64 [s1 + 0x220]\n 10852: a1 = t0 | a3\n 10855: a2 = u64 [s1 + 0x238]\n 10859: a4 = u64 [s1 + 0x228]\n 10863: a2 = a2 | a4\n 10866: a1 = a1 | a2\n 10869: a1 = a1 >> 0x20\n 10872: a2 = a2 | a3\n 10875: a2 = a2 << 0x20\n 10878: a1 = a1 | a2\n 10881: jump @220 if a1 == 0\n      : @219 (gas: 1)\n 10884: jump @309\n      : @220 (gas: 95)\n 10887: a1 = u8 [a0 + 0x19]\n 10890: a2 = u8 [a0 + 0x18]\n 10893: a3 = u8 [a0 + 0x1a]\n 10896: a4 = u8 [a0 + 0x1b]\n 10899: a1 = a1 << 0x8\n 10902: a1 = a1 | a2\n 10905: a3 = a3 << 0x10\n 10908: a4 = a4 << 0x18\n 10911: a3 = a3 | a4\n 10914: a1 = a1 | a3\n 10917: a2 = u8 [a0 + 0x1d]\n 10920: a3 = u8 [a0 + 0x1c]\n 10923: a4 = u8 [a0 + 0x1e]\n 10926: a5 = u8 [a0 + 0x1f]\n 10929: a2 = a2 << 0x8\n 10932: a2 = a2 | a3\n 10935: a4 = a4 << 0x10\n 10938: a5 = a5 << 0x18\n 10941: a4 = a4 | a5\n 10944: a2 = a2 | a4\n 10947: a2 = a2 << 0x20\n 10950: a1 = a1 | a2\n 10953: u64 [s1 + 0x210] = a1\n 10957: a1 = u8 [a0 + 0x11]\n 10960: a2 = u8 [a0 + 0x10]\n 10963: a3 = u8 [a0 + 0x12]\n 10966: a4 = u8 [a0 + 0x13]\n 10969: a1 = a1 << 0x8\n 10972: a1 = a1 | a2\n 10975: a3 = a3 << 0x10\n 10978: a4 = a4 << 0x18\n 10981: a3 = a3 | a4\n 10984: a1 = a1 | a3\n 10987: a2 = u8 [a0 + 0x15]\n 10990: a3 = u8 [a0 + 0x14]\n 10993: a4 = u8 [a0 + 0x16]\n 10996: a5 = u8 [a0 + 0x17]\n 10999: a2 = a2 << 0x8\n 11002: a2 = a2 | a3\n 11005: a4 = a4 << 0x10\n 11008: a5 = a5 << 0x18\n 11011: a4 = a4 | a5\n 11014: a2 = a2 | a4\n 11017: a2 = a2 << 0x20\n 11020: a1 = a1 | a2\n 11023: u64 [s1 + 0x208] = a1\n 11027: a1 = u8 [a0 + 0x9]\n 11030: a2 = u8 [a0 + 0x8]\n 11033: a3 = u8 [a0 + 0xa]\n 11036: a4 = u8 [a0 + 0xb]\n 11039: a1 = a1 << 0x8\n 11042: a1 = a1 | a2\n 11045: a3 = a3 << 0x10\n 11048: a4 = a4 << 0x18\n 11051: a3 = a3 | a4\n 11054: a1 = a1 | a3\n 11057: a2 = u8 [a0 + 0xd]\n 11060: a3 = u8 [a0 + 0xc]\n 11063: a4 = u8 [a0 + 0xe]\n 11066: a5 = u8 [a0 + 0xf]\n 11069: a2 = a2 << 0x8\n 11072: a2 = a2 | a3\n 11075: a4 = a4 << 0x10\n 11078: a5 = a5 << 0x18\n 11081: a4 = a4 | a5\n 11084: a2 = a2 | a4\n 11087: a2 = a2 << 0x20\n 11090: a1 = a1 | a2\n 11093: u64 [s1 + 0x220] = a1\n 11097: a1 = u8 [a0 + 0x1]\n 11100: a2 = u8 [a0]\n 11102: a3 = u8 [a0 + 0x2]\n 11105: a4 = u8 [a0 + 0x3]\n 11108: a1 = a1 << 0x8\n 11111: a1 = a1 | a2\n 11114: a3 = a3 << 0x10\n 11117: a4 = a4 << 0x18\n 11120: a3 = a3 | a4\n 11123: a1 = a1 | a3\n 11126: a2 = u8 [a0 + 0x5]\n 11129: a3 = u8 [a0 + 0x4]\n 11132: a4 = u8 [a0 + 0x6]\n 11135: a0 = u8 [a0 + 0x7]\n 11138: a2 = a2 << 0x8\n 11141: a2 = a2 | a3\n 11144: a4 = a4 << 0x10\n 11147: a0 = a0 << 0x18\n 11150: a0 = a0 | a4\n 11153: a0 = a0 | a2\n 11156: a0 = a0 << 0x20\n 11159: a0 = a0 | a1\n 11162: u64 [s1 + 0x218] = a0\n 11166: i32 a0 = t0 + 0\n 11168: a1 = 0x20\n 11171: ra = 102, jump @0\n      : @221 [@dyn 51] (gas: 84)\n 11176: a5 = u64 [s1 + 0x208]\n 11180: a4 = u64 [s1 + 0x210]\n 11184: u8 [a0 + 0x10] = a5\n 11187: a2 = u64 [s1 + 0x220]\n 11191: a1 = a2 >> 0x38\n 11194: u8 [a0 + 0xf] = a1\n 11197: a1 = a2 >> 0x30\n 11200: u8 [a0 + 0xe] = a1\n 11203: a1 = a2 >> 0x28\n 11206: u8 [a0 + 0xd] = a1\n 11209: a1 = a2 >> 0x20\n 11212: u8 [a0 + 0xc] = a1\n 11215: a1 = a2 >> 0x18\n 11218: u8 [a0 + 0xb] = a1\n 11221: a1 = a2 >> 0x10\n 11224: u8 [a0 + 0xa] = a1\n 11227: a1 = a2 >> 0x8\n 11230: u8 [a0 + 0x9] = a1\n 11233: u8 [a0 + 0x8] = a2\n 11236: t2 = u64 [s1 + 0x218]\n 11240: a1 = t2 >> 0x38\n 11243: u8 [a0 + 0x7] = a1\n 11246: a1 = t2 >> 0x30\n 11249: u8 [a0 + 0x6] = a1\n 11252: a1 = t2 >> 0x28\n 11255: u8 [a0 + 0x5] = a1\n 11258: a1 = t2 >> 0x20\n 11261: u8 [a0 + 0x4] = a1\n 11264: a1 = t2 >> 0x18\n 11267: u8 [a0 + 0x3] = a1\n 11270: a1 = t2 >> 0x10\n 11273: u8 [a0 + 0x2] = a1\n 11276: a1 = t2 >> 0x8\n 11279: u8 [a0 + 0x1] = a1\n 11282: u8 [a0] = t2\n 11284: u8 [a0 + 0x18] = a4\n 11287: a1 = a5 >> 0x38\n 11290: u8 [a0 + 0x17] = a1\n 11293: a1 = a5 >> 0x30\n 11296: u8 [a0 + 0x16] = a1\n 11299: a1 = a5 >> 0x28\n 11302: u8 [a0 + 0x15] = a1\n 11305: a1 = a5 >> 0x20\n 11308: u8 [a0 + 0x14] = a1\n 11311: a1 = a5 >> 0x18\n 11314: u8 [a0 + 0x13] = a1\n 11317: a1 = a5 >> 0x10\n 11320: u8 [a0 + 0x12] = a1\n 11323: a1 = a5 >> 0x8\n 11326: u8 [a0 + 0x11] = a1\n 11329: a1 = a4 >> 0x38\n 11332: u8 [a0 + 0x1f] = a1\n 11335: a1 = a4 >> 0x30\n 11338: u8 [a0 + 0x1e] = a1\n 11341: a1 = a4 >> 0x28\n 11344: u8 [a0 + 0x1d] = a1\n 11347: a1 = a4 >> 0x20\n 11350: u8 [a0 + 0x1c] = a1\n 11353: a1 = a4 >> 0x18\n 11356: u8 [a0 + 0x1b] = a1\n 11359: a1 = a4 >> 0x10\n 11362: u8 [a0 + 0x1a] = a1\n 11365: a1 = a4 >> 0x8\n 11368: u8 [a0 + 0x19] = a1\n 11371: a3 = u64 [s1 + 0xf0]\n 11375: t0 = a3 + 0x40\n 11378: a0 = t0 <u a3\n 11381: ra = u64 [s1 + 0xe8]\n 11385: a1 = ra + a0\n 11388: u64 [s1 + 0x230] = a1\n 11392: a1 = a1 <u ra\n 11395: a1 = a0 if a0 == 0\n 11398: a2 = u64 [s1 + 0xf8]\n 11402: t1 = a2 + a1\n 11405: a0 = t2 | a5\n 11408: a1 = u64 [s1 + 0x220]\n 11412: t2 = a1\n 11414: a1 = a1 | a4\n 11417: a0 = a0 | a1\n 11420: a1 = t1 <u a2\n 11423: a2 = u64 [s1 + 0xe0]\n 11427: a1 = a1 + a2\n 11430: u64 [s1 + 0x238] = a1\n 11434: jump @223 if a0 == 0\n      : @222 (gas: 1)\n 11437: jump @443\n      : @223 (gas: 3)\n 11440: ra = u64 [s1 + 0x230]\n 11444: a2 = t1\n 11446: jump @451\n      : @224 (gas: 11)\n 11449: a0 = sp + 0xffffffffffffffe0\n 11452: a0 = a0 & 0xffffffffffffffe0\n 11455: u64 [s1 + 0x230] = a0\n 11459: sp = a0\n 11461: u64 [a0 + 24] = 0\n 11464: u64 [a0 + 16] = 0\n 11467: u64 [a0 + 8] = 0\n 11470: u64 [a0 + 0] = 0\n 11472: i32 a0 = a0 + 0\n 11474: ecalli 10 // 'value_transferred'\n 11476: fallthrough\n      : @225 (gas: 9)\n 11477: a3 = u64 [s1 + 0x230]\n 11481: a0 = u64 [a3 + 0x10]\n 11484: a1 = u64 [a3 + 0x18]\n 11487: a2 = u64 [a3 + 0x8]\n 11490: a3 = u64 [a3]\n 11492: a1 = a1 | a2\n 11495: a0 = a0 | a3\n 11498: a0 = a0 | a1\n 11501: jump @227 if a0 == 0\n      : @226 (gas: 1)\n 11504: jump @460\n      : @227 (gas: 5)\n 11507: a0 = u64 [s1 + 0x238]\n 11511: a0 = i32 [a0]\n 11513: a2 = s1 + 0x7ff\n 11517: a2 = a2 + 0x1b9\n 11521: jump @229 if a0 >u 3\n      : @228 (gas: 1)\n 11525: jump @460\n      : @229 (gas: 10)\n 11528: u64 [a2 + 736] = 0\n 11532: u64 [a2 + 728] = 0\n 11536: u64 [a2 + 720] = 0\n 11540: u64 [a2 + 712] = 0x7\n 11545: u64 [a2 + 608] = 0\n 11549: u64 [a2 + 600] = 0\n 11553: u64 [a2 + 592] = 0\n 11557: u64 [a2 + 584] = 0\n 11561: u32 [a2 + 744] = 0x20\n 11566: jump @306\n      : @230 (gas: 1)\n 11569: jump @232 if a0 == 599290589\n      : @231 (gas: 1)\n 11576: jump @460\n      : @232 (gas: 11)\n 11579: a0 = sp + 0xffffffffffffffe0\n 11582: a0 = a0 & 0xffffffffffffffe0\n 11585: u64 [s1 + 0x230] = a0\n 11589: sp = a0\n 11591: u64 [a0 + 24] = 0\n 11594: u64 [a0 + 16] = 0\n 11597: u64 [a0 + 8] = 0\n 11600: u64 [a0 + 0] = 0\n 11602: i32 a0 = a0 + 0\n 11604: ecalli 10 // 'value_transferred'\n 11606: fallthrough\n      : @233 (gas: 9)\n 11607: a3 = u64 [s1 + 0x230]\n 11611: a0 = u64 [a3 + 0x10]\n 11614: a1 = u64 [a3 + 0x18]\n 11617: a2 = u64 [a3 + 0x8]\n 11620: a3 = u64 [a3]\n 11622: a1 = a1 | a2\n 11625: a0 = a0 | a3\n 11628: a0 = a0 | a1\n 11631: jump @235 if a0 == 0\n      : @234 (gas: 1)\n 11634: jump @460\n      : @235 (gas: 3)\n 11637: a0 = u64 [s1 + 0x238]\n 11641: a0 = i32 [a0]\n 11643: jump @237 if a0 >u 99\n      : @236 (gas: 1)\n 11647: jump @460\n      : @237 (gas: 5)\n 11650: a0 = s1 + 0x1000\n 11654: i32 a0 = a0 + 0xfffffffffffffc00\n 11658: a1 = 0x4\n 11661: ecalli 1 // 'call_data_load'\n 11663: fallthrough\n      : @238 (gas: 15)\n 11664: a2 = s1 + 0x7ff\n 11668: a2 = a2 + 0x1b9\n 11672: a1 = u64 [a2 + 0x258]\n 11676: a3 = u64 [a2 + 0x260]\n 11680: a0 = 0x100000000\n 11690: u64 [s1 + 0x220] = a0\n 11694: a0 = a0 ^ a1\n 11697: a0 = a0 | a3\n 11700: u64 [s1 + 0x238] = a1\n 11704: a1 = a1 >> 0x20\n 11707: a1 = a1 <u 0x1\n 11710: u64 [s1 + 0x200] = a3\n 11714: a1 = 0 if a3 != 0\n 11716: a1 = 0 if a0 == 0\n 11718: jump @240 if a1 != 0\n      : @239 (gas: 1)\n 11721: jump @462\n      : @240 (gas: 9)\n 11724: a0 = u64 [a2 + 0x250]\n 11728: u64 [s1 + 0x228] = a0\n 11732: a0 = u64 [a2 + 0x248]\n 11736: u64 [s1 + 0x230] = a0\n 11740: a0 = s1 + 0x1000\n 11744: i32 a0 = a0 + 0xfffffffffffffae0\n 11748: a1 = 0x24\n 11751: ecalli 1 // 'call_data_load'\n 11753: fallthrough\n      : @241 (gas: 14)\n 11754: a2 = s1 + 0x7ff\n 11758: a2 = a2 + 0x1b9\n 11762: a1 = u64 [a2 + 0x138]\n 11766: a3 = u64 [a2 + 0x140]\n 11770: a0 = u64 [s1 + 0x220]\n 11774: a0 = a0 ^ a1\n 11777: a0 = a0 | a3\n 11780: u64 [s1 + 0x1d0] = a1\n 11784: a1 = a1 >> 0x20\n 11787: a1 = a1 <u 0x1\n 11790: u64 [s1 + 0x1c8] = a3\n 11794: a1 = 0 if a3 != 0\n 11796: a1 = 0 if a0 == 0\n 11798: jump @243 if a1 != 0\n      : @242 (gas: 1)\n 11801: jump @462\n      : @243 (gas: 22)\n 11804: a0 = u64 [a2 + 0x130]\n 11808: u64 [s1 + 0x1b8] = a0\n 11812: a0 = u64 [a2 + 0x128]\n 11816: u64 [s1 + 0x1c0] = a0\n 11820: a0 = s1 + 0x1000\n 11824: i32 a0 = a0 + 0xfffffffffffffb00\n 11828: a1 = 0x44\n 11831: ecalli 1 // 'call_data_load'\n 11833: a1 = s1 + 0x7ff\n 11837: a1 = a1 + 0x1b9\n 11841: a0 = u64 [a1 + 0x160]\n 11845: u64 [s1 + 0x208] = a0\n 11849: a0 = u64 [a1 + 0x158]\n 11853: u64 [s1 + 0x210] = a0\n 11857: a0 = u64 [a1 + 0x150]\n 11861: u64 [s1 + 0x218] = a0\n 11865: a0 = u64 [a1 + 0x148]\n 11869: u64 [s1 + 0x220] = a0\n 11873: a0 = s1 + 0x1000\n 11877: i32 a0 = a0 + 0xfffffffffffffb20\n 11881: ecalli 3 // 'caller'\n 11883: fallthrough\n      : @244 (gas: 26)\n 11884: a2 = s1 + 0x7ff\n 11888: a2 = a2 + 0x1b9\n 11892: a0 = u64 [a2 + 0x170]\n 11896: a1 = u64 [a2 + 0x168]\n 11900: a2 = i32 [a2 + 0x178]\n 11904: a0 = reverse a0\n 11906: a3 = a0 >> 0x20\n 11909: a1 = reverse a1\n 11911: a4 = a1 << 0x20\n 11914: a3 = a3 | a4\n 11917: a0 = a0 << 0x20\n 11920: a2 = reverse a2\n 11922: a2 = a2 >> 0x20\n 11925: a0 = a0 | a2\n 11928: a1 = a1 >> 0x20\n 11931: a2 = u64 [s1 + 0x238]\n 11935: a2 = a2 << 0x20\n 11938: a2 = a2 >> 0x20\n 11941: a1 = a1 ^ a2\n 11944: a2 = u64 [s1 + 0x230]\n 11948: a0 = a0 ^ a2\n 11951: a0 = a0 | a1\n 11954: a1 = u64 [s1 + 0x228]\n 11958: a1 = a1 ^ a3\n 11961: a0 = a0 | a1\n 11964: jump @246 if a0 == 0\n      : @245 (gas: 1)\n 11967: jump @339\n      : @246 (gas: 13)\n 11970: a0 = u64 [s1 + 0x220]\n 11974: a0 = reverse a0\n 11976: u64 [s1 + 0x1f8] = a0\n 11980: a0 = u64 [s1 + 0x218]\n 11984: a0 = reverse a0\n 11986: u64 [s1 + 0x1f0] = a0\n 11990: a0 = u64 [s1 + 0x210]\n 11994: a0 = reverse a0\n 11996: u64 [s1 + 0x1e0] = a0\n 12000: a0 = u64 [s1 + 0x208]\n 12004: a0 = reverse a0\n 12006: u64 [s1 + 0x1e8] = a0\n 12010: jump @344\n      : @247 (gas: 1)\n 12013: jump @249 if a0 == 1692584023\n      : @248 (gas: 1)\n 12020: jump @460\n      : @249 (gas: 11)\n 12023: a0 = sp + 0xffffffffffffffe0\n 12026: a0 = a0 & 0xffffffffffffffe0\n 12029: u64 [s1 + 0x230] = a0\n 12033: sp = a0\n 12035: u64 [a0 + 24] = 0\n 12038: u64 [a0 + 16] = 0\n 12041: u64 [a0 + 8] = 0\n 12044: u64 [a0 + 0] = 0\n 12046: i32 a0 = a0 + 0\n 12048: ecalli 10 // 'value_transferred'\n 12050: fallthrough\n      : @250 (gas: 9)\n 12051: a3 = u64 [s1 + 0x230]\n 12055: a0 = u64 [a3 + 0x10]\n 12058: a1 = u64 [a3 + 0x18]\n 12061: a2 = u64 [a3 + 0x8]\n 12064: a3 = u64 [a3]\n 12066: a1 = a1 | a2\n 12069: a0 = a0 | a3\n 12072: a0 = a0 | a1\n 12075: jump @252 if a0 == 0\n      : @251 (gas: 1)\n 12078: jump @460\n      : @252 (gas: 3)\n 12081: a0 = u64 [s1 + 0x238]\n 12085: a0 = i32 [a0]\n 12087: jump @254 if a0 >u 67\n      : @253 (gas: 1)\n 12091: jump @460\n      : @254 (gas: 5)\n 12094: a0 = s1 + 0x1000\n 12098: i32 a0 = a0 + 0xfffffffffffffc00\n 12102: a1 = 0x4\n 12105: ecalli 1 // 'call_data_load'\n 12107: fallthrough\n      : @255 (gas: 14)\n 12108: a2 = s1 + 0x7ff\n 12112: a2 = a2 + 0x1b9\n 12116: a1 = u64 [a2 + 0x258]\n 12120: a3 = u64 [a2 + 0x260]\n 12124: a0 = 0x100000000\n 12134: a0 = a0 ^ a1\n 12137: a0 = a0 | a3\n 12140: u64 [s1 + 0x238] = a1\n 12144: a1 = a1 >> 0x20\n 12147: a1 = a1 <u 0x1\n 12150: u64 [s1 + 0x230] = a3\n 12154: a1 = 0 if a3 != 0\n 12156: a1 = 0 if a0 == 0\n 12158: jump @257 if a1 != 0\n      : @256 (gas: 1)\n 12161: jump @462\n      : @257 (gas: 34)\n 12164: a0 = u64 [a2 + 0x250]\n 12168: u64 [s1 + 0x220] = a0\n 12172: a0 = u64 [a2 + 0x248]\n 12176: u64 [s1 + 0x228] = a0\n 12180: u64 [a2 + 736] = 0\n 12184: u64 [a2 + 728] = 0\n 12188: u64 [a2 + 720] = 0\n 12192: u64 [a2 + 712] = 0x7\n 12197: u64 [a2 + 608] = 0\n 12201: u64 [a2 + 600] = 0\n 12205: u64 [a2 + 592] = 0\n 12209: u64 [a2 + 584] = 0\n 12213: u32 [a2 + 744] = 0x20\n 12218: a0 = s1 + 0x1000\n 12222: i32 a1 = a0 + 0xfffffffffffffc80\n 12226: a0 = s1 + 0x1000\n 12230: i32 a3 = a0 + 0xfffffffffffffc00\n 12234: a0 = s1 + 0x1000\n 12238: i32 a4 = a0 + 0xfffffffffffffca0\n 12242: a2 = 0xffffffffffffffff\n 12245: a0 = 0\n 12247: ecalli 5 // 'get_storage'\n 12249: a1 = s1 + 0x7ff\n 12253: a1 = a1 + 0x1b9\n 12257: a0 = u64 [a1 + 0x250]\n 12261: u64 [s1 + 0x218] = a0\n 12265: a0 = u64 [a1 + 0x248]\n 12269: u64 [s1 + 0x210] = a0\n 12273: a0 = u32 [a1 + 0x258]\n 12277: u64 [s1 + 0x208] = a0\n 12281: a0 = s1 + 0x1000\n 12285: i32 a0 = a0 + 0xfffffffffffffb80\n 12289: ecalli 3 // 'caller'\n 12291: fallthrough\n      : @258 (gas: 24)\n 12292: a2 = s1 + 0x7ff\n 12296: a2 = a2 + 0x1b9\n 12300: a0 = u64 [a2 + 0x1d0]\n 12304: a1 = u64 [a2 + 0x1c8]\n 12308: a2 = i32 [a2 + 0x1d8]\n 12312: a0 = reverse a0\n 12314: a3 = a0 >> 0x20\n 12317: a1 = reverse a1\n 12319: a4 = a1 << 0x20\n 12322: a3 = a3 | a4\n 12325: a0 = a0 << 0x20\n 12328: a2 = reverse a2\n 12330: a2 = a2 >> 0x20\n 12333: a0 = a0 | a2\n 12336: a1 = a1 >> 0x20\n 12339: a2 = u64 [s1 + 0x208]\n 12343: a1 = a1 ^ a2\n 12346: a2 = u64 [s1 + 0x210]\n 12350: a0 = a0 ^ a2\n 12353: a0 = a0 | a1\n 12356: a1 = u64 [s1 + 0x218]\n 12360: a1 = a1 ^ a3\n 12363: a0 = a0 | a1\n 12366: jump @260 if a0 == 0\n      : @259 (gas: 1)\n 12369: jump @328\n      : @260 (gas: 21)\n 12372: a1 = s1 + 0x7ff\n 12376: a1 = a1 + 0x1b9\n 12380: u64 [a1 + 736] = 0\n 12384: u64 [a1 + 728] = 0\n 12388: u64 [a1 + 720] = 0\n 12392: u64 [a1 + 712] = 0x2\n 12397: u64 [a1 + 608] = 0\n 12401: u64 [a1 + 600] = 0\n 12405: u64 [a1 + 592] = 0\n 12409: u64 [a1 + 584] = 0\n 12413: u32 [a1 + 744] = 0x20\n 12418: a0 = s1 + 0x1000\n 12422: i32 a1 = a0 + 0xfffffffffffffc80\n 12426: a0 = s1 + 0x1000\n 12430: i32 a3 = a0 + 0xfffffffffffffc00\n 12434: a0 = s1 + 0x1000\n 12438: i32 a4 = a0 + 0xfffffffffffffca0\n 12442: a2 = 0xffffffffffffffff\n 12445: a0 = 0\n 12447: ecalli 5 // 'get_storage'\n 12449: fallthrough\n      : @261 (gas: 22)\n 12450: a1 = s1 + 0x7ff\n 12454: a1 = a1 + 0x1b9\n 12458: a0 = u64 [a1 + 0x248]\n 12462: a4 = u64 [a1 + 0x260]\n 12466: a2 = u64 [a1 + 0x250]\n 12470: a3 = u64 [a1 + 0x258]\n 12474: u64 [s1 + 0x218] = a0\n 12478: a0 = a0 + 0x1\n 12481: a1 = a0 <u 0x1\n 12484: u64 [s1 + 0x210] = a2\n 12488: a1 = a1 + a2\n 12491: a2 = a0 | a1\n 12494: a2 = a2 <u 0x1\n 12497: a2 = a2 + a3\n 12500: u64 [s1 + 0x200] = a3\n 12504: a3 = a2 <u a3\n 12507: u64 [s1 + 0x208] = a4\n 12511: a3 = a3 + a4\n 12514: a4 = a1 | a3\n 12517: a5 = a0 | a2\n 12520: a4 = a4 | a5\n 12523: jump @263 if a4 != 0\n      : @262 (gas: 1)\n 12526: jump @509\n      : @263 (gas: 21)\n 12529: a4 = s1 + 0x7ff\n 12533: a4 = a4 + 0x1b9\n 12537: u64 [a4 + 736] = 0\n 12541: u64 [a4 + 728] = 0\n 12545: u64 [a4 + 720] = 0\n 12549: u64 [a4 + 712] = 0x2\n 12554: u64 [a4 + 0x248] = a0\n 12558: u64 [a4 + 0x250] = a1\n 12562: u64 [a4 + 0x258] = a2\n 12566: u64 [a4 + 0x260] = a3\n 12570: a0 = s1 + 0x1000\n 12574: i32 a1 = a0 + 0xfffffffffffffc80\n 12578: a0 = s1 + 0x1000\n 12582: i32 a3 = a0 + 0xfffffffffffffc00\n 12586: a2 = 0xffffffffffffffff\n 12589: a4 = 0x20\n 12592: a0 = 0\n 12594: ecalli 9 // 'set_storage'\n 12596: a1 = 0x20\n 12599: a0 = 0\n 12601: ra = 104, jump @0\n      : @264 [@dyn 52] (gas: 103)\n 12606: a1 = u64 [s1 + 0x208]\n 12610: a2 = reverse a1\n 12612: a1 = u64 [s1 + 0x200]\n 12616: a4 = reverse a1\n 12618: a1 = u64 [s1 + 0x210]\n 12622: a5 = reverse a1\n 12624: a1 = u64 [s1 + 0x218]\n 12628: a3 = reverse a1\n 12630: a1 = a3 >> 0x38\n 12633: u64 [s1 + 0x1f8] = a1\n 12637: u8 [a0 + 0x1f] = a1\n 12640: a1 = a3 >> 0x30\n 12643: u64 [s1 + 0x1f0] = a1\n 12647: u8 [a0 + 0x1e] = a1\n 12650: a1 = a3 >> 0x28\n 12653: u64 [s1 + 0x1e8] = a1\n 12657: u8 [a0 + 0x1d] = a1\n 12660: a1 = a3 >> 0x20\n 12663: u64 [s1 + 0x1e0] = a1\n 12667: u8 [a0 + 0x1c] = a1\n 12670: a1 = a3 >> 0x18\n 12673: u64 [s1 + 0x1d8] = a1\n 12677: u8 [a0 + 0x1b] = a1\n 12680: a1 = a3 >> 0x10\n 12683: u64 [s1 + 0x1d0] = a1\n 12687: u8 [a0 + 0x1a] = a1\n 12690: a1 = a3 >> 0x8\n 12693: u64 [s1 + 0x1c8] = a1\n 12697: u8 [a0 + 0x19] = a1\n 12700: u64 [s1 + 0x210] = a3\n 12704: u8 [a0 + 0x18] = a3\n 12707: a1 = a5 >> 0x38\n 12710: u64 [s1 + 0x1c0] = a1\n 12714: u8 [a0 + 0x17] = a1\n 12717: a1 = a5 >> 0x30\n 12720: u64 [s1 + 0x1b8] = a1\n 12724: u8 [a0 + 0x16] = a1\n 12727: a1 = a5 >> 0x28\n 12730: u64 [s1 + 0x1b0] = a1\n 12734: u8 [a0 + 0x15] = a1\n 12737: a1 = a5 >> 0x20\n 12740: u64 [s1 + 0x1a8] = a1\n 12744: u8 [a0 + 0x14] = a1\n 12747: a1 = a5 >> 0x18\n 12750: u64 [s1 + 0x1a0] = a1\n 12754: u8 [a0 + 0x13] = a1\n 12757: a1 = a5 >> 0x10\n 12760: u64 [s1 + 0x198] = a1\n 12764: u8 [a0 + 0x12] = a1\n 12767: a1 = a5 >> 0x8\n 12770: u64 [s1 + 0x190] = a1\n 12774: u8 [a0 + 0x11] = a1\n 12777: u64 [s1 + 0x200] = a5\n 12781: u8 [a0 + 0x10] = a5\n 12784: a1 = a4 >> 0x38\n 12787: u64 [s1 + 0x188] = a1\n 12791: u8 [a0 + 0xf] = a1\n 12794: a1 = a4 >> 0x30\n 12797: u64 [s1 + 0x180] = a1\n 12801: u8 [a0 + 0xe] = a1\n 12804: a1 = a4 >> 0x28\n 12807: u64 [s1 + 0x178] = a1\n 12811: u8 [a0 + 0xd] = a1\n 12814: a1 = a4 >> 0x20\n 12817: u64 [s1 + 0x170] = a1\n 12821: u8 [a0 + 0xc] = a1\n 12824: a1 = a4 >> 0x18\n 12827: u64 [s1 + 0x168] = a1\n 12831: u8 [a0 + 0xb] = a1\n 12834: a1 = a4 >> 0x10\n 12837: u64 [s1 + 0x160] = a1\n 12841: u8 [a0 + 0xa] = a1\n 12844: a1 = a4 >> 0x8\n 12847: u64 [s1 + 0x158] = a1\n 12851: u8 [a0 + 0x9] = a1\n 12854: u64 [s1 + 0x208] = a4\n 12858: u8 [a0 + 0x8] = a4\n 12861: a1 = a2 >> 0x38\n 12864: u64 [s1 + 0x150] = a1\n 12868: u8 [a0 + 0x7] = a1\n 12871: a1 = a2 >> 0x30\n 12874: u64 [s1 + 0x148] = a1\n 12878: u8 [a0 + 0x6] = a1\n 12881: a1 = a2 >> 0x28\n 12884: u64 [s1 + 0x140] = a1\n 12888: u8 [a0 + 0x5] = a1\n 12891: a1 = a2 >> 0x20\n 12894: u64 [s1 + 0x138] = a1\n 12898: u8 [a0 + 0x4] = a1\n 12901: a1 = a2 >> 0x18\n 12904: u64 [s1 + 0x130] = a1\n 12908: u8 [a0 + 0x3] = a1\n 12911: a1 = a2 >> 0x10\n 12914: u64 [s1 + 0x128] = a1\n 12918: u8 [a0 + 0x2] = a1\n 12921: a1 = a2 >> 0x8\n 12924: u64 [s1 + 0x120] = a1\n 12928: u8 [a0 + 0x1] = a1\n 12931: u64 [s1 + 0x218] = a2\n 12935: u8 [a0] = a2\n 12937: a0 = 0x20\n 12940: a1 = 0x20\n 12943: ra = 106, jump @0\n      : @265 [@dyn 53] (gas: 35)\n 12948: u8 [a0 + 31] = 0x3\n 12952: u8 [a0 + 30] = 0\n 12955: u8 [a0 + 29] = 0\n 12958: u8 [a0 + 28] = 0\n 12961: u8 [a0 + 27] = 0\n 12964: u8 [a0 + 26] = 0\n 12967: u8 [a0 + 25] = 0\n 12970: u8 [a0 + 24] = 0\n 12973: u8 [a0 + 23] = 0\n 12976: u8 [a0 + 22] = 0\n 12979: u8 [a0 + 21] = 0\n 12982: u8 [a0 + 20] = 0\n 12985: u8 [a0 + 19] = 0\n 12988: u8 [a0 + 18] = 0\n 12991: u8 [a0 + 17] = 0\n 12994: u8 [a0 + 16] = 0\n 12997: u8 [a0 + 15] = 0\n 13000: u8 [a0 + 14] = 0\n 13003: u8 [a0 + 13] = 0\n 13006: u8 [a0 + 12] = 0\n 13009: u8 [a0 + 11] = 0\n 13012: u8 [a0 + 10] = 0\n 13015: u8 [a0 + 9] = 0\n 13018: u8 [a0 + 8] = 0\n 13021: u8 [a0 + 7] = 0\n 13024: u8 [a0 + 6] = 0\n 13027: u8 [a0 + 5] = 0\n 13030: u8 [a0 + 4] = 0\n 13033: u8 [a0 + 3] = 0\n 13036: u8 [a0 + 2] = 0\n 13039: u8 [a0 + 1] = 0\n 13042: u8 [a0 + 0] = 0\n 13044: a1 = 0x40\n 13047: a0 = 0\n 13049: ra = 108, jump @0\n      : @266 [@dyn 54] (gas: 75)\n 13054: a1 = sp + 0xffffffffffffffe0\n 13057: a1 = a1 & 0xffffffffffffffe0\n 13060: u64 [s1 + 0x118] = a1\n 13064: sp = a1\n 13066: i32 a0 = a0 + 0\n 13068: i32 a2 = a1 + 0\n 13070: a1 = 0x40\n 13073: ecalli 6 // 'hash_keccak_256'\n 13075: a3 = u64 [s1 + 0x118]\n 13079: a0 = u64 [a3 + 0x18]\n 13082: a1 = u64 [a3 + 0x10]\n 13085: a2 = u64 [a3 + 0x8]\n 13088: a3 = u64 [a3]\n 13090: a4 = reverse a0\n 13092: u64 [s1 + 0x118] = a4\n 13096: a1 = reverse a1\n 13098: u64 [s1 + 0x110] = a1\n 13102: a2 = reverse a2\n 13104: u64 [s1 + 0x108] = a2\n 13108: a3 = reverse a3\n 13110: u64 [s1 + 0x100] = a3\n 13114: a0 = s1 + 0x7ff\n 13118: a0 = a0 + 0x1b9\n 13122: u64 [a0 + 0x2e0] = a3\n 13126: u64 [a0 + 0x2d8] = a2\n 13130: u64 [a0 + 0x2d0] = a1\n 13134: u64 [a0 + 0x2c8] = a4\n 13138: u64 [a0 + 608] = 0\n 13142: u64 [a0 + 600] = 0\n 13146: u64 [a0 + 592] = 0\n 13150: u64 [a0 + 584] = 0\n 13154: u32 [a0 + 744] = 0x20\n 13159: a0 = s1 + 0x1000\n 13163: i32 a1 = a0 + 0xfffffffffffffc80\n 13167: a0 = s1 + 0x1000\n 13171: i32 a3 = a0 + 0xfffffffffffffc00\n 13175: a0 = s1 + 0x1000\n 13179: i32 a4 = a0 + 0xfffffffffffffca0\n 13183: a2 = 0xffffffffffffffff\n 13186: a0 = 0\n 13188: ecalli 5 // 'get_storage'\n 13190: a2 = s1 + 0x7ff\n 13194: a2 = a2 + 0x1b9\n 13198: a0 = u64 [s1 + 0x100]\n 13202: u64 [a2 + 0x2e0] = a0\n 13206: a0 = u64 [s1 + 0x108]\n 13210: u64 [a2 + 0x2d8] = a0\n 13214: a0 = u64 [a2 + 0x260]\n 13218: a1 = u64 [s1 + 0x110]\n 13222: u64 [a2 + 0x2d0] = a1\n 13226: a1 = u32 [a2 + 0x25c]\n 13230: a3 = u64 [s1 + 0x118]\n 13234: u64 [a2 + 0x2c8] = a3\n 13238: a3 = u64 [s1 + 0x230]\n 13242: a0 = a0 | a3\n 13245: u64 [a2 + 0x260] = a0\n 13249: a1 = a1 << 0x20\n 13252: a0 = u64 [s1 + 0x238]\n 13256: a0 = a0 | a1\n 13259: u64 [a2 + 0x258] = a0\n 13263: a0 = u64 [s1 + 0x220]\n 13267: u64 [a2 + 0x250] = a0\n 13271: a0 = u64 [s1 + 0x228]\n 13275: u64 [a2 + 0x248] = a0\n 13279: a0 = s1 + 0x1000\n 13283: i32 a1 = a0 + 0xfffffffffffffc80\n 13287: a0 = s1 + 0x1000\n 13291: i32 a3 = a0 + 0xfffffffffffffc00\n 13295: a2 = 0xffffffffffffffff\n 13298: a4 = 0x20\n 13301: a0 = 0\n 13303: ecalli 9 // 'set_storage'\n 13305: a1 = 0x20\n 13308: a0 = 0\n 13310: ra = 110, jump @0\n      : @267 [@dyn 55] (gas: 75)\n 13315: a1 = u64 [s1 + 0x230]\n 13319: a2 = reverse a1\n 13321: a1 = u64 [s1 + 0x238]\n 13325: a3 = reverse a1\n 13327: a1 = u64 [s1 + 0x220]\n 13331: a4 = reverse a1\n 13333: a1 = u64 [s1 + 0x228]\n 13337: a5 = reverse a1\n 13339: a1 = a5 >> 0x38\n 13342: u8 [a0 + 0x1f] = a1\n 13345: a1 = a5 >> 0x30\n 13348: u8 [a0 + 0x1e] = a1\n 13351: a1 = a5 >> 0x28\n 13354: u8 [a0 + 0x1d] = a1\n 13357: a1 = a5 >> 0x20\n 13360: u8 [a0 + 0x1c] = a1\n 13363: a1 = a5 >> 0x18\n 13366: u8 [a0 + 0x1b] = a1\n 13369: a1 = a5 >> 0x10\n 13372: u8 [a0 + 0x1a] = a1\n 13375: a1 = a5 >> 0x8\n 13378: u8 [a0 + 0x19] = a1\n 13381: u64 [s1 + 0x220] = a5\n 13385: u8 [a0 + 0x18] = a5\n 13388: a1 = a4 >> 0x38\n 13391: u8 [a0 + 0x17] = a1\n 13394: a1 = a4 >> 0x30\n 13397: u8 [a0 + 0x16] = a1\n 13400: a1 = a4 >> 0x28\n 13403: u8 [a0 + 0x15] = a1\n 13406: a1 = a4 >> 0x20\n 13409: u8 [a0 + 0x14] = a1\n 13412: a1 = a4 >> 0x18\n 13415: u8 [a0 + 0x13] = a1\n 13418: a1 = a4 >> 0x10\n 13421: u8 [a0 + 0x12] = a1\n 13424: a1 = a4 >> 0x8\n 13427: u8 [a0 + 0x11] = a1\n 13430: u64 [s1 + 0x228] = a4\n 13434: u8 [a0 + 0x10] = a4\n 13437: a1 = a3 >> 0x38\n 13440: u8 [a0 + 0xf] = a1\n 13443: a1 = a3 >> 0x30\n 13446: u8 [a0 + 0xe] = a1\n 13449: a1 = a3 >> 0x28\n 13452: u8 [a0 + 0xd] = a1\n 13455: a1 = a3 >> 0x20\n 13458: u8 [a0 + 0xc] = a1\n 13461: a1 = a3 >> 0x18\n 13464: u8 [a0 + 0xb] = a1\n 13467: a1 = a3 >> 0x10\n 13470: u8 [a0 + 0xa] = a1\n 13473: a1 = a3 >> 0x8\n 13476: u8 [a0 + 0x9] = a1\n 13479: u64 [s1 + 0x230] = a3\n 13483: u8 [a0 + 0x8] = a3\n 13486: a1 = a2 >> 0x38\n 13489: u8 [a0 + 0x7] = a1\n 13492: a1 = a2 >> 0x30\n 13495: u8 [a0 + 0x6] = a1\n 13498: a1 = a2 >> 0x28\n 13501: u8 [a0 + 0x5] = a1\n 13504: a1 = a2 >> 0x20\n 13507: u8 [a0 + 0x4] = a1\n 13510: a1 = a2 >> 0x18\n 13513: u8 [a0 + 0x3] = a1\n 13516: a1 = a2 >> 0x10\n 13519: u8 [a0 + 0x2] = a1\n 13522: a1 = a2 >> 0x8\n 13525: u8 [a0 + 0x1] = a1\n 13528: u64 [s1 + 0x238] = a2\n 13532: u8 [a0] = a2\n 13534: a0 = 0x20\n 13537: a1 = 0x20\n 13540: ra = 112, jump @0\n      : @268 [@dyn 56] (gas: 35)\n 13545: u8 [a0 + 31] = 0x4\n 13549: u8 [a0 + 30] = 0\n 13552: u8 [a0 + 29] = 0\n 13555: u8 [a0 + 28] = 0\n 13558: u8 [a0 + 27] = 0\n 13561: u8 [a0 + 26] = 0\n 13564: u8 [a0 + 25] = 0\n 13567: u8 [a0 + 24] = 0\n 13570: u8 [a0 + 23] = 0\n 13573: u8 [a0 + 22] = 0\n 13576: u8 [a0 + 21] = 0\n 13579: u8 [a0 + 20] = 0\n 13582: u8 [a0 + 19] = 0\n 13585: u8 [a0 + 18] = 0\n 13588: u8 [a0 + 17] = 0\n 13591: u8 [a0 + 16] = 0\n 13594: u8 [a0 + 15] = 0\n 13597: u8 [a0 + 14] = 0\n 13600: u8 [a0 + 13] = 0\n 13603: u8 [a0 + 12] = 0\n 13606: u8 [a0 + 11] = 0\n 13609: u8 [a0 + 10] = 0\n 13612: u8 [a0 + 9] = 0\n 13615: u8 [a0 + 8] = 0\n 13618: u8 [a0 + 7] = 0\n 13621: u8 [a0 + 6] = 0\n 13624: u8 [a0 + 5] = 0\n 13627: u8 [a0 + 4] = 0\n 13630: u8 [a0 + 3] = 0\n 13633: u8 [a0 + 2] = 0\n 13636: u8 [a0 + 1] = 0\n 13639: u8 [a0 + 0] = 0\n 13641: a1 = 0x40\n 13644: a0 = 0\n 13646: ra = 114, jump @0\n      : @269 [@dyn 57] (gas: 42)\n 13651: a1 = sp + 0xffffffffffffffe0\n 13654: a1 = a1 & 0xffffffffffffffe0\n 13657: u64 [s1 + 0x118] = a1\n 13661: sp = a1\n 13663: i32 a0 = a0 + 0\n 13665: i32 a2 = a1 + 0\n 13667: a1 = 0x40\n 13670: ecalli 6 // 'hash_keccak_256'\n 13672: a3 = u64 [s1 + 0x118]\n 13676: a0 = u64 [a3 + 0x18]\n 13679: a1 = u64 [a3 + 0x10]\n 13682: a2 = u64 [a3 + 0x8]\n 13685: a3 = u64 [a3]\n 13687: a4 = reverse a0\n 13689: a5 = reverse a1\n 13691: a1 = reverse a2\n 13693: a2 = reverse a3\n 13695: a0 = s1 + 0x7ff\n 13699: a0 = a0 + 0x1b9\n 13703: u64 [s1 + 0x108] = a2\n 13707: u64 [a0 + 0x2e0] = a2\n 13711: u64 [s1 + 0x110] = a1\n 13715: u64 [a0 + 0x2d8] = a1\n 13719: u64 [s1 + 0x100] = a5\n 13723: u64 [a0 + 0x2d0] = a5\n 13727: u64 [s1 + 0x118] = a4\n 13731: u64 [a0 + 0x2c8] = a4\n 13735: u64 [a0 + 608] = 0\n 13739: u64 [a0 + 600] = 0\n 13743: u64 [a0 + 592] = 0\n 13747: u64 [a0 + 584] = 0\n 13751: u32 [a0 + 744] = 0x20\n 13756: a0 = s1 + 0x1000\n 13760: i32 a1 = a0 + 0xfffffffffffffc80\n 13764: a0 = s1 + 0x1000\n 13768: i32 a3 = a0 + 0xfffffffffffffc00\n 13772: a0 = s1 + 0x1000\n 13776: i32 a4 = a0 + 0xfffffffffffffca0\n 13780: a2 = 0xffffffffffffffff\n 13783: a0 = 0\n 13785: ecalli 5 // 'get_storage'\n 13787: fallthrough\n      : @270 (gas: 18)\n 13788: a2 = s1 + 0x7ff\n 13792: a2 = a2 + 0x1b9\n 13796: a0 = u64 [a2 + 0x248]\n 13800: a3 = u64 [a2 + 0x260]\n 13804: a1 = u64 [a2 + 0x250]\n 13808: a4 = u64 [a2 + 0x258]\n 13812: a0 = a0 + 0x1\n 13815: a2 = a0 <u 0x1\n 13818: a1 = a1 + a2\n 13821: a2 = a0 | a1\n 13824: a2 = a2 <u 0x1\n 13827: a2 = a2 + a4\n 13830: a4 = a2 <u a4\n 13833: a3 = a3 + a4\n 13836: a4 = a1 | a3\n 13839: a5 = a0 | a2\n 13842: a4 = a4 | a5\n 13845: jump @272 if a4 != 0\n      : @271 (gas: 1)\n 13848: jump @511\n      : @272 (gas: 25)\n 13851: a4 = s1 + 0x7ff\n 13855: a4 = a4 + 0x1b9\n 13859: a5 = u64 [s1 + 0x100]\n 13863: u64 [a4 + 0x2d0] = a5\n 13867: a5 = u64 [s1 + 0x118]\n 13871: u64 [a4 + 0x2c8] = a5\n 13875: a5 = u64 [s1 + 0x110]\n 13879: u64 [a4 + 0x2d8] = a5\n 13883: a5 = u64 [s1 + 0x108]\n 13887: u64 [a4 + 0x2e0] = a5\n 13891: u64 [a4 + 0x248] = a0\n 13895: u64 [a4 + 0x250] = a1\n 13899: u64 [a4 + 0x258] = a2\n 13903: u64 [a4 + 0x260] = a3\n 13907: a0 = s1 + 0x1000\n 13911: i32 a1 = a0 + 0xfffffffffffffc80\n 13915: a0 = s1 + 0x1000\n 13919: i32 a3 = a0 + 0xfffffffffffffc00\n 13923: a2 = 0xffffffffffffffff\n 13926: a4 = 0x20\n 13929: a0 = 0\n 13931: ecalli 9 // 'set_storage'\n 13933: a1 = 0x20\n 13936: a0 = 0\n 13938: ra = 116, jump @0\n      : @273 [@dyn 58] (gas: 67)\n 13943: a1 = u64 [s1 + 0x1f8]\n 13947: u8 [a0 + 0x1f] = a1\n 13950: a1 = u64 [s1 + 0x1f0]\n 13954: u8 [a0 + 0x1e] = a1\n 13957: a1 = u64 [s1 + 0x1e8]\n 13961: u8 [a0 + 0x1d] = a1\n 13964: a1 = u64 [s1 + 0x1e0]\n 13968: u8 [a0 + 0x1c] = a1\n 13971: a1 = u64 [s1 + 0x1d8]\n 13975: u8 [a0 + 0x1b] = a1\n 13978: a1 = u64 [s1 + 0x1d0]\n 13982: u8 [a0 + 0x1a] = a1\n 13985: a1 = u64 [s1 + 0x1c8]\n 13989: u8 [a0 + 0x19] = a1\n 13992: a1 = u64 [s1 + 0x210]\n 13996: u8 [a0 + 0x18] = a1\n 13999: a1 = u64 [s1 + 0x1c0]\n 14003: u8 [a0 + 0x17] = a1\n 14006: a1 = u64 [s1 + 0x1b8]\n 14010: u8 [a0 + 0x16] = a1\n 14013: a1 = u64 [s1 + 0x1b0]\n 14017: u8 [a0 + 0x15] = a1\n 14020: a1 = u64 [s1 + 0x1a8]\n 14024: u8 [a0 + 0x14] = a1\n 14027: a1 = u64 [s1 + 0x1a0]\n 14031: u8 [a0 + 0x13] = a1\n 14034: a1 = u64 [s1 + 0x198]\n 14038: u8 [a0 + 0x12] = a1\n 14041: a1 = u64 [s1 + 0x190]\n 14045: u8 [a0 + 0x11] = a1\n 14048: a1 = u64 [s1 + 0x200]\n 14052: u8 [a0 + 0x10] = a1\n 14055: a1 = u64 [s1 + 0x188]\n 14059: u8 [a0 + 0xf] = a1\n 14062: a1 = u64 [s1 + 0x180]\n 14066: u8 [a0 + 0xe] = a1\n 14069: a1 = u64 [s1 + 0x178]\n 14073: u8 [a0 + 0xd] = a1\n 14076: a1 = u64 [s1 + 0x170]\n 14080: u8 [a0 + 0xc] = a1\n 14083: a1 = u64 [s1 + 0x168]\n 14087: u8 [a0 + 0xb] = a1\n 14090: a1 = u64 [s1 + 0x160]\n 14094: u8 [a0 + 0xa] = a1\n 14097: a1 = u64 [s1 + 0x158]\n 14101: u8 [a0 + 0x9] = a1\n 14104: a1 = u64 [s1 + 0x208]\n 14108: u8 [a0 + 0x8] = a1\n 14111: a1 = u64 [s1 + 0x150]\n 14115: u8 [a0 + 0x7] = a1\n 14118: a1 = u64 [s1 + 0x148]\n 14122: u8 [a0 + 0x6] = a1\n 14125: a1 = u64 [s1 + 0x140]\n 14129: u8 [a0 + 0x5] = a1\n 14132: a1 = u64 [s1 + 0x138]\n 14136: u8 [a0 + 0x4] = a1\n 14139: a1 = u64 [s1 + 0x130]\n 14143: u8 [a0 + 0x3] = a1\n 14146: a1 = u64 [s1 + 0x128]\n 14150: u8 [a0 + 0x2] = a1\n 14153: a1 = u64 [s1 + 0x120]\n 14157: u8 [a0 + 0x1] = a1\n 14160: a1 = u64 [s1 + 0x218]\n 14164: u8 [a0] = a1\n 14166: a0 = 0x20\n 14169: a1 = 0x20\n 14172: ra = 118, jump @0\n      : @274 [@dyn 59] (gas: 49)\n 14177: u8 [a0 + 31] = 0x5\n 14181: u8 [a0 + 30] = 0\n 14184: u8 [a0 + 29] = 0\n 14187: u8 [a0 + 28] = 0\n 14190: u8 [a0 + 27] = 0\n 14193: u8 [a0 + 26] = 0\n 14196: u8 [a0 + 25] = 0\n 14199: u8 [a0 + 24] = 0\n 14202: u8 [a0 + 23] = 0\n 14205: u8 [a0 + 22] = 0\n 14208: u8 [a0 + 21] = 0\n 14211: u8 [a0 + 20] = 0\n 14214: u8 [a0 + 19] = 0\n 14217: u8 [a0 + 18] = 0\n 14220: u8 [a0 + 17] = 0\n 14223: u8 [a0 + 16] = 0\n 14226: u8 [a0 + 15] = 0\n 14229: u8 [a0 + 14] = 0\n 14232: u8 [a0 + 13] = 0\n 14235: u8 [a0 + 12] = 0\n 14238: u8 [a0 + 11] = 0\n 14241: u8 [a0 + 10] = 0\n 14244: u8 [a0 + 9] = 0\n 14247: u8 [a0 + 8] = 0\n 14250: u8 [a0 + 7] = 0\n 14253: u8 [a0 + 6] = 0\n 14256: u8 [a0 + 5] = 0\n 14259: u8 [a0 + 4] = 0\n 14262: u8 [a0 + 3] = 0\n 14265: u8 [a0 + 2] = 0\n 14268: u8 [a0 + 1] = 0\n 14271: u8 [a0 + 0] = 0\n 14273: a0 = s1 + 0x1000\n 14277: i32 a0 = a0 + 0xfffffffffffffba0\n 14281: a1 = 0x24\n 14284: ecalli 1 // 'call_data_load'\n 14286: a0 = s1 + 0x7ff\n 14290: a0 = a0 + 0x1b9\n 14294: a1 = u64 [a0 + 0x1e8]\n 14298: u64 [s1 + 0x118] = a1\n 14302: a1 = u64 [a0 + 0x1f0]\n 14306: u64 [s1 + 0x110] = a1\n 14310: a1 = u64 [a0 + 0x1f8]\n 14314: u64 [s1 + 0x108] = a1\n 14318: a1 = u64 [a0 + 0x200]\n 14322: u64 [s1 + 0x100] = a1\n 14326: a1 = 0x40\n 14329: a0 = 0\n 14331: ra = 120, jump @0\n      : @275 [@dyn 60] (gas: 42)\n 14336: a1 = sp + 0xffffffffffffffe0\n 14339: a1 = a1 & 0xffffffffffffffe0\n 14342: u64 [s1 + 0xf8] = a1\n 14346: sp = a1\n 14348: i32 a0 = a0 + 0\n 14350: i32 a2 = a1 + 0\n 14352: a1 = 0x40\n 14355: ecalli 6 // 'hash_keccak_256'\n 14357: a3 = u64 [s1 + 0xf8]\n 14361: a0 = u64 [a3 + 0x18]\n 14364: a1 = u64 [a3 + 0x10]\n 14367: a2 = u64 [a3 + 0x8]\n 14370: a3 = u64 [a3]\n 14372: a0 = reverse a0\n 14374: a1 = reverse a1\n 14376: a2 = reverse a2\n 14378: a3 = reverse a3\n 14380: a4 = s1 + 0x7ff\n 14384: a4 = a4 + 0x1b9\n 14388: u64 [a4 + 0x2e0] = a3\n 14392: u64 [a4 + 0x2d8] = a2\n 14396: u64 [a4 + 0x2d0] = a1\n 14400: u64 [a4 + 0x2c8] = a0\n 14404: a0 = u64 [s1 + 0x100]\n 14408: u64 [a4 + 0x260] = a0\n 14412: a0 = u64 [s1 + 0x108]\n 14416: u64 [a4 + 0x258] = a0\n 14420: a0 = u64 [s1 + 0x110]\n 14424: u64 [a4 + 0x250] = a0\n 14428: a0 = u64 [s1 + 0x118]\n 14432: u64 [a4 + 0x248] = a0\n 14436: a0 = s1 + 0x1000\n 14440: i32 a1 = a0 + 0xfffffffffffffc80\n 14444: a0 = s1 + 0x1000\n 14448: i32 a3 = a0 + 0xfffffffffffffc00\n 14452: a2 = 0xffffffffffffffff\n 14455: a4 = 0x20\n 14458: a0 = 0\n 14460: ecalli 9 // 'set_storage'\n 14462: a0 = 0x40\n 14465: a1 = 0x20\n 14468: ra = 122, jump @0\n      : @276 [@dyn 61] (gas: 99)\n 14473: a1 = u8 [a0 + 0x11]\n 14476: a2 = u8 [a0 + 0x10]\n 14479: a3 = u8 [a0 + 0x12]\n 14482: a4 = u8 [a0 + 0x13]\n 14485: a1 = a1 << 0x8\n 14488: a1 = a1 | a2\n 14491: a3 = a3 << 0x10\n 14494: a4 = a4 << 0x18\n 14497: a3 = a3 | a4\n 14500: a1 = a1 | a3\n 14503: a2 = u8 [a0 + 0x15]\n 14506: a3 = u8 [a0 + 0x14]\n 14509: a4 = u8 [a0 + 0x16]\n 14512: a5 = u8 [a0 + 0x17]\n 14515: a2 = a2 << 0x8\n 14518: a2 = a2 | a3\n 14521: a4 = a4 << 0x10\n 14524: a5 = a5 << 0x18\n 14527: a4 = a4 | a5\n 14530: a2 = a2 | a4\n 14533: a2 = a2 << 0x20\n 14536: t0 = a2 | a1\n 14539: a2 = u8 [a0 + 0x1]\n 14542: a3 = u8 [a0]\n 14544: a4 = u8 [a0 + 0x2]\n 14547: a5 = u8 [a0 + 0x3]\n 14550: a2 = a2 << 0x8\n 14553: a2 = a2 | a3\n 14556: a4 = a4 << 0x10\n 14559: a5 = a5 << 0x18\n 14562: a4 = a4 | a5\n 14565: a2 = a2 | a4\n 14568: a3 = u8 [a0 + 0x5]\n 14571: a4 = u8 [a0 + 0x4]\n 14574: a5 = u8 [a0 + 0x6]\n 14577: a1 = u8 [a0 + 0x7]\n 14580: a3 = a3 << 0x8\n 14583: a3 = a3 | a4\n 14586: a5 = a5 << 0x10\n 14589: a1 = a1 << 0x18\n 14592: a1 = a1 | a5\n 14595: a1 = a1 | a3\n 14598: a1 = a1 << 0x20\n 14601: t1 = a1 | a2\n 14604: a1 = u8 [a0 + 0x19]\n 14607: a3 = u8 [a0 + 0x18]\n 14610: a4 = u8 [a0 + 0x1a]\n 14613: a5 = u8 [a0 + 0x1b]\n 14616: a1 = a1 << 0x8\n 14619: a1 = a1 | a3\n 14622: a4 = a4 << 0x10\n 14625: a5 = a5 << 0x18\n 14628: a4 = a4 | a5\n 14631: a1 = a1 | a4\n 14634: a3 = u8 [a0 + 0x1d]\n 14637: a4 = u8 [a0 + 0x1c]\n 14640: a5 = u8 [a0 + 0x1e]\n 14643: a2 = u8 [a0 + 0x1f]\n 14646: a3 = a3 << 0x8\n 14649: a3 = a3 | a4\n 14652: a5 = a5 << 0x10\n 14655: a2 = a2 << 0x18\n 14658: a2 = a2 | a5\n 14661: a2 = a2 | a3\n 14664: a2 = a2 << 0x20\n 14667: a3 = a2 | a1\n 14670: a1 = u8 [a0 + 0x9]\n 14673: a2 = u8 [a0 + 0x8]\n 14676: a4 = u8 [a0 + 0xa]\n 14679: a5 = u8 [a0 + 0xb]\n 14682: a1 = a1 << 0x8\n 14685: a1 = a1 | a2\n 14688: a4 = a4 << 0x10\n 14691: a5 = a5 << 0x18\n 14694: a4 = a4 | a5\n 14697: a1 = a1 | a4\n 14700: a2 = u8 [a0 + 0xd]\n 14703: a4 = u8 [a0 + 0xc]\n 14706: a5 = u8 [a0 + 0xe]\n 14709: a0 = u8 [a0 + 0xf]\n 14712: a2 = a2 << 0x8\n 14715: a2 = a2 | a4\n 14718: a5 = a5 << 0x10\n 14721: a0 = a0 << 0x18\n 14724: a0 = a0 | a5\n 14727: a0 = a0 | a2\n 14730: a0 = a0 << 0x20\n 14733: a0 = a0 | a1\n 14736: a0 = reverse a0\n 14738: u64 [s1 + 0x118] = a0\n 14742: a0 = reverse a3\n 14744: u64 [s1 + 0x108] = a0\n 14748: a0 = reverse t1\n 14750: u64 [s1 + 0x110] = a0\n 14754: a0 = reverse t0\n 14756: u64 [s1 + 0x100] = a0\n 14760: a0 = 0\n 14762: a1 = 0\n 14764: ra = 124, jump @0\n      : @277 [@dyn 62] (gas: 37)\n 14769: a1 = u64 [0x20008]\n 14774: a2 = u64 [0x20010]\n 14779: a3 = u64 [0x20018]\n 14784: a4 = u64 [0x20020]\n 14789: a5 = s1 + 0x7ff\n 14793: a5 = a5 + 0x1b9\n 14797: u64 [a5 + 0x260] = a1\n 14801: u64 [a5 + 0x258] = a2\n 14805: u64 [a5 + 0x250] = a3\n 14809: u64 [a5 + 0x248] = a4\n 14813: a1 = u64 [s1 + 0x220]\n 14817: u64 [a5 + 0x2a0] = a1\n 14821: a1 = u64 [s1 + 0x228]\n 14825: u64 [a5 + 0x298] = a1\n 14829: a1 = u64 [s1 + 0x230]\n 14833: u64 [a5 + 0x290] = a1\n 14837: a1 = u64 [s1 + 0x238]\n 14841: u64 [a5 + 0x288] = a1\n 14845: u64 [a5 + 640] = 0\n 14849: u64 [a5 + 632] = 0\n 14853: u64 [a5 + 624] = 0\n 14857: u64 [a5 + 616] = 0\n 14861: a1 = u64 [s1 + 0x210]\n 14865: u64 [a5 + 0x2c0] = a1\n 14869: a1 = u64 [s1 + 0x200]\n 14873: u64 [a5 + 0x2b8] = a1\n 14877: a1 = u64 [s1 + 0x208]\n 14881: u64 [a5 + 0x2b0] = a1\n 14885: a1 = u64 [s1 + 0x218]\n 14889: u64 [a5 + 0x2a8] = a1\n 14893: i32 a2 = a0 + 0\n 14895: a0 = s1 + 0x1000\n 14899: i32 a0 = a0 + 0xfffffffffffffc00\n 14903: a1 = 0x4\n 14906: a3 = 0\n 14908: ecalli 4 // 'deposit_event'\n 14910: fallthrough\n      : @278 (gas: 12)\n 14911: a2 = u64 [s1 + 0x108]\n 14915: a0 = u64 [s1 + 0x110]\n 14919: a1 = u64 [s1 + 0x100]\n 14923: a0 = a0 | a1\n 14926: a3 = u64 [s1 + 0x118]\n 14930: a1 = a2 | a3\n 14933: a1 = a1 | a0\n 14936: a1 = a1 >> 0x20\n 14939: a0 = a0 | a3\n 14942: a0 = a0 << 0x20\n 14945: a0 = a0 | a1\n 14948: jump @309 if a0 != 0\n      : @279 (gas: 4)\n 14952: i32 a0 = a2 + 0\n 14954: u64 [s1 + 0x238] = a0\n 14958: a1 = 0x20\n 14961: ra = 126, jump @0\n      : @280 [@dyn 63] (gas: 68)\n 14966: a1 = u64 [s1 + 0x200]\n 14970: u8 [a0 + 0x10] = a1\n 14973: a1 = u64 [s1 + 0x188]\n 14977: u8 [a0 + 0xf] = a1\n 14980: a1 = u64 [s1 + 0x180]\n 14984: u8 [a0 + 0xe] = a1\n 14987: a1 = u64 [s1 + 0x178]\n 14991: u8 [a0 + 0xd] = a1\n 14994: a1 = u64 [s1 + 0x170]\n 14998: u8 [a0 + 0xc] = a1\n 15001: a1 = u64 [s1 + 0x168]\n 15005: u8 [a0 + 0xb] = a1\n 15008: a1 = u64 [s1 + 0x160]\n 15012: u8 [a0 + 0xa] = a1\n 15015: a1 = u64 [s1 + 0x158]\n 15019: u8 [a0 + 0x9] = a1\n 15022: a1 = u64 [s1 + 0x208]\n 15026: u8 [a0 + 0x8] = a1\n 15029: a1 = u64 [s1 + 0x150]\n 15033: u8 [a0 + 0x7] = a1\n 15036: a1 = u64 [s1 + 0x148]\n 15040: u8 [a0 + 0x6] = a1\n 15043: a1 = u64 [s1 + 0x140]\n 15047: u8 [a0 + 0x5] = a1\n 15050: a1 = u64 [s1 + 0x138]\n 15054: u8 [a0 + 0x4] = a1\n 15057: a1 = u64 [s1 + 0x130]\n 15061: u8 [a0 + 0x3] = a1\n 15064: a1 = u64 [s1 + 0x128]\n 15068: u8 [a0 + 0x2] = a1\n 15071: a1 = u64 [s1 + 0x120]\n 15075: u8 [a0 + 0x1] = a1\n 15078: a1 = u64 [s1 + 0x218]\n 15082: u8 [a0] = a1\n 15084: a1 = u64 [s1 + 0x210]\n 15088: u8 [a0 + 0x18] = a1\n 15091: a1 = u64 [s1 + 0x1c0]\n 15095: u8 [a0 + 0x17] = a1\n 15098: a1 = u64 [s1 + 0x1b8]\n 15102: u8 [a0 + 0x16] = a1\n 15105: a1 = u64 [s1 + 0x1b0]\n 15109: u8 [a0 + 0x15] = a1\n 15112: a1 = u64 [s1 + 0x1a8]\n 15116: u8 [a0 + 0x14] = a1\n 15119: a1 = u64 [s1 + 0x1a0]\n 15123: u8 [a0 + 0x13] = a1\n 15126: a1 = u64 [s1 + 0x198]\n 15130: u8 [a0 + 0x12] = a1\n 15133: a1 = u64 [s1 + 0x190]\n 15137: u8 [a0 + 0x11] = a1\n 15140: a1 = u64 [s1 + 0x1f8]\n 15144: u8 [a0 + 0x1f] = a1\n 15147: a1 = u64 [s1 + 0x1f0]\n 15151: u8 [a0 + 0x1e] = a1\n 15154: a1 = u64 [s1 + 0x1e8]\n 15158: u8 [a0 + 0x1d] = a1\n 15161: a1 = u64 [s1 + 0x1e0]\n 15165: u8 [a0 + 0x1c] = a1\n 15168: a1 = u64 [s1 + 0x1d8]\n 15172: u8 [a0 + 0x1b] = a1\n 15175: a1 = u64 [s1 + 0x1d0]\n 15179: u8 [a0 + 0x1a] = a1\n 15182: a1 = u64 [s1 + 0x1c8]\n 15186: u8 [a0 + 0x19] = a1\n 15189: a1 = 0x20\n 15192: a0 = u64 [s1 + 0x238]\n 15196: ra = 0xf2\n 15200: jump @0\n      : @281 (gas: 1)\n 15203: jump @283 if a0 == 1970883132\n      : @282 (gas: 1)\n 15210: jump @460\n      : @283 (gas: 11)\n 15213: a0 = sp + 0xffffffffffffffe0\n 15216: a0 = a0 & 0xffffffffffffffe0\n 15219: u64 [s1 + 0x230] = a0\n 15223: sp = a0\n 15225: u64 [a0 + 24] = 0\n 15228: u64 [a0 + 16] = 0\n 15231: u64 [a0 + 8] = 0\n 15234: u64 [a0 + 0] = 0\n 15236: i32 a0 = a0 + 0\n 15238: ecalli 10 // 'value_transferred'\n 15240: fallthrough\n      : @284 (gas: 9)\n 15241: a3 = u64 [s1 + 0x230]\n 15245: a0 = u64 [a3 + 0x10]\n 15248: a1 = u64 [a3 + 0x18]\n 15251: a2 = u64 [a3 + 0x8]\n 15254: a3 = u64 [a3]\n 15256: a1 = a1 | a2\n 15259: a0 = a0 | a3\n 15262: a0 = a0 | a1\n 15265: jump @286 if a0 == 0\n      : @285 (gas: 1)\n 15268: jump @460\n      : @286 (gas: 5)\n 15271: a0 = u64 [s1 + 0x238]\n 15275: a0 = i32 [a0]\n 15277: a2 = s1 + 0x7ff\n 15281: a2 = a2 + 0x1b9\n 15285: jump @288 if a0 >u 3\n      : @287 (gas: 1)\n 15289: jump @460\n      : @288 (gas: 10)\n 15292: u64 [a2 + 736] = 0\n 15296: u64 [a2 + 728] = 0\n 15300: u64 [a2 + 720] = 0\n 15304: u64 [a2 + 712] = 0x2\n 15309: u64 [a2 + 608] = 0\n 15313: u64 [a2 + 600] = 0\n 15317: u64 [a2 + 592] = 0\n 15321: u64 [a2 + 584] = 0\n 15325: u32 [a2 + 744] = 0x20\n 15330: fallthrough\n      : @289 (gas: 22)\n 15331: a0 = s1 + 0x1000\n 15335: i32 a1 = a0 + 0xfffffffffffffc80\n 15339: a0 = s1 + 0x1000\n 15343: i32 a3 = a0 + 0xfffffffffffffc00\n 15347: a0 = s1 + 0x1000\n 15351: i32 a4 = a0 + 0xfffffffffffffca0\n 15355: a2 = 0xffffffffffffffff\n 15358: a0 = 0\n 15360: ecalli 5 // 'get_storage'\n 15362: a1 = s1 + 0x7ff\n 15366: a1 = a1 + 0x1b9\n 15370: a0 = u64 [a1 + 0x260]\n 15374: u64 [s1 + 0x220] = a0\n 15378: a0 = u64 [a1 + 0x258]\n 15382: u64 [s1 + 0x228] = a0\n 15386: a0 = u64 [a1 + 0x250]\n 15390: u64 [s1 + 0x230] = a0\n 15394: a0 = u64 [a1 + 0x248]\n 15398: u64 [s1 + 0x238] = a0\n 15402: a0 = 0x40\n 15405: a1 = 0x20\n 15408: ra = 128, jump @0\n      : @290 [@dyn 64] (gas: 100)\n 15414: a1 = u8 [a0 + 0x11]\n 15417: a2 = u8 [a0 + 0x10]\n 15420: a3 = u8 [a0 + 0x12]\n 15423: a4 = u8 [a0 + 0x13]\n 15426: a1 = a1 << 0x8\n 15429: a1 = a1 | a2\n 15432: a3 = a3 << 0x10\n 15435: a4 = a4 << 0x18\n 15438: a3 = a3 | a4\n 15441: a1 = a1 | a3\n 15444: a2 = u8 [a0 + 0x15]\n 15447: a3 = u8 [a0 + 0x14]\n 15450: a4 = u8 [a0 + 0x16]\n 15453: a5 = u8 [a0 + 0x17]\n 15456: a2 = a2 << 0x8\n 15459: a2 = a2 | a3\n 15462: a4 = a4 << 0x10\n 15465: a5 = a5 << 0x18\n 15468: a4 = a4 | a5\n 15471: a2 = a2 | a4\n 15474: a2 = a2 << 0x20\n 15477: t0 = a2 | a1\n 15480: a2 = u8 [a0 + 0x1]\n 15483: a3 = u8 [a0]\n 15485: a4 = u8 [a0 + 0x2]\n 15488: a5 = u8 [a0 + 0x3]\n 15491: a2 = a2 << 0x8\n 15494: a2 = a2 | a3\n 15497: a4 = a4 << 0x10\n 15500: a5 = a5 << 0x18\n 15503: a4 = a4 | a5\n 15506: a2 = a2 | a4\n 15509: a3 = u8 [a0 + 0x5]\n 15512: a4 = u8 [a0 + 0x4]\n 15515: a5 = u8 [a0 + 0x6]\n 15518: a1 = u8 [a0 + 0x7]\n 15521: a3 = a3 << 0x8\n 15524: a3 = a3 | a4\n 15527: a5 = a5 << 0x10\n 15530: a1 = a1 << 0x18\n 15533: a1 = a1 | a5\n 15536: a1 = a1 | a3\n 15539: a1 = a1 << 0x20\n 15542: t1 = a1 | a2\n 15545: a1 = u8 [a0 + 0x19]\n 15548: a3 = u8 [a0 + 0x18]\n 15551: a4 = u8 [a0 + 0x1a]\n 15554: a5 = u8 [a0 + 0x1b]\n 15557: a1 = a1 << 0x8\n 15560: a1 = a1 | a3\n 15563: a4 = a4 << 0x10\n 15566: a5 = a5 << 0x18\n 15569: a4 = a4 | a5\n 15572: a1 = a1 | a4\n 15575: a3 = u8 [a0 + 0x1d]\n 15578: a4 = u8 [a0 + 0x1c]\n 15581: a5 = u8 [a0 + 0x1e]\n 15584: a2 = u8 [a0 + 0x1f]\n 15587: a3 = a3 << 0x8\n 15590: a3 = a3 | a4\n 15593: a5 = a5 << 0x10\n 15596: a2 = a2 << 0x18\n 15599: a2 = a2 | a5\n 15602: a2 = a2 | a3\n 15605: a2 = a2 << 0x20\n 15608: a3 = a2 | a1\n 15611: a1 = u8 [a0 + 0x9]\n 15614: a2 = u8 [a0 + 0x8]\n 15617: a4 = u8 [a0 + 0xa]\n 15620: a5 = u8 [a0 + 0xb]\n 15623: a1 = a1 << 0x8\n 15626: a1 = a1 | a2\n 15629: a4 = a4 << 0x10\n 15632: a5 = a5 << 0x18\n 15635: a4 = a4 | a5\n 15638: a1 = a1 | a4\n 15641: a2 = u8 [a0 + 0xd]\n 15644: a4 = u8 [a0 + 0xc]\n 15647: a5 = u8 [a0 + 0xe]\n 15650: a0 = u8 [a0 + 0xf]\n 15653: a2 = a2 << 0x8\n 15656: a2 = a2 | a4\n 15659: a5 = a5 << 0x10\n 15662: a0 = a0 << 0x18\n 15665: a0 = a0 | a5\n 15668: a0 = a0 | a2\n 15671: a0 = a0 << 0x20\n 15674: a0 = a0 | a1\n 15677: a1 = reverse a0\n 15679: a0 = reverse a3\n 15681: a2 = reverse t1\n 15683: a3 = reverse t0\n 15685: a2 = a2 | a3\n 15688: a3 = a0 | a1\n 15691: a3 = a3 | a2\n 15694: a3 = a3 >> 0x20\n 15697: a1 = a1 | a2\n 15700: a1 = a1 << 0x20\n 15703: a1 = a1 | a3\n 15706: jump @309 if a1 != 0\n      : @291 (gas: 4)\n 15710: i32 a0 = a0 + 0\n 15712: u64 [s1 + 0x218] = a0\n 15716: a1 = 0x20\n 15719: ra = 130, jump @0\n      : @292 [@dyn 65] (gas: 72)\n 15725: a1 = u64 [s1 + 0x220]\n 15729: a1 = reverse a1\n 15731: a2 = u64 [s1 + 0x228]\n 15735: a2 = reverse a2\n 15737: a3 = u64 [s1 + 0x230]\n 15741: a3 = reverse a3\n 15743: a4 = u64 [s1 + 0x238]\n 15747: a4 = reverse a4\n 15749: a5 = a4 >> 0x38\n 15752: u8 [a0 + 0x1f] = a5\n 15755: a5 = a4 >> 0x30\n 15758: u8 [a0 + 0x1e] = a5\n 15761: a5 = a4 >> 0x28\n 15764: u8 [a0 + 0x1d] = a5\n 15767: a5 = a4 >> 0x20\n 15770: u8 [a0 + 0x1c] = a5\n 15773: a5 = a4 >> 0x18\n 15776: u8 [a0 + 0x1b] = a5\n 15779: a5 = a4 >> 0x10\n 15782: u8 [a0 + 0x1a] = a5\n 15785: a5 = a4 >> 0x8\n 15788: u8 [a0 + 0x19] = a5\n 15791: u8 [a0 + 0x18] = a4\n 15794: u8 [a0 + 0x10] = a3\n 15797: a4 = a3 >> 0x38\n 15800: u8 [a0 + 0x17] = a4\n 15803: a4 = a3 >> 0x30\n 15806: u8 [a0 + 0x16] = a4\n 15809: a4 = a3 >> 0x28\n 15812: u8 [a0 + 0x15] = a4\n 15815: a4 = a3 >> 0x20\n 15818: u8 [a0 + 0x14] = a4\n 15821: a4 = a3 >> 0x18\n 15824: u8 [a0 + 0x13] = a4\n 15827: a4 = a3 >> 0x10\n 15830: u8 [a0 + 0x12] = a4\n 15833: a3 = a3 >> 0x8\n 15836: u8 [a0 + 0x11] = a3\n 15839: u8 [a0 + 0x8] = a2\n 15842: a3 = a2 >> 0x38\n 15845: u8 [a0 + 0xf] = a3\n 15848: a3 = a2 >> 0x30\n 15851: u8 [a0 + 0xe] = a3\n 15854: a3 = a2 >> 0x28\n 15857: u8 [a0 + 0xd] = a3\n 15860: a3 = a2 >> 0x20\n 15863: u8 [a0 + 0xc] = a3\n 15866: a3 = a2 >> 0x18\n 15869: u8 [a0 + 0xb] = a3\n 15872: a3 = a2 >> 0x10\n 15875: u8 [a0 + 0xa] = a3\n 15878: a2 = a2 >> 0x8\n 15881: u8 [a0 + 0x9] = a2\n 15884: u8 [a0] = a1\n 15886: a2 = a1 >> 0x38\n 15889: u8 [a0 + 0x7] = a2\n 15892: a2 = a1 >> 0x30\n 15895: u8 [a0 + 0x6] = a2\n 15898: a2 = a1 >> 0x28\n 15901: u8 [a0 + 0x5] = a2\n 15904: a2 = a1 >> 0x20\n 15907: u8 [a0 + 0x4] = a2\n 15910: a2 = a1 >> 0x18\n 15913: u8 [a0 + 0x3] = a2\n 15916: a2 = a1 >> 0x10\n 15919: u8 [a0 + 0x2] = a2\n 15922: a1 = a1 >> 0x8\n 15925: u8 [a0 + 0x1] = a1\n 15928: a1 = 0x20\n 15931: a0 = u64 [s1 + 0x218]\n 15935: ra = 0xf2\n 15939: jump @0\n      : @293 (gas: 1)\n 15942: jump @295 if a0 == 2900276665\n      : @294 (gas: 1)\n 15949: jump @460\n      : @295 (gas: 11)\n 15952: a0 = sp + 0xffffffffffffffe0\n 15955: a0 = a0 & 0xffffffffffffffe0\n 15958: u64 [s1 + 0x230] = a0\n 15962: sp = a0\n 15964: u64 [a0 + 24] = 0\n 15967: u64 [a0 + 16] = 0\n 15970: u64 [a0 + 8] = 0\n 15973: u64 [a0 + 0] = 0\n 15975: i32 a0 = a0 + 0\n 15977: ecalli 10 // 'value_transferred'\n 15979: fallthrough\n      : @296 (gas: 9)\n 15980: a3 = u64 [s1 + 0x230]\n 15984: a0 = u64 [a3 + 0x10]\n 15987: a1 = u64 [a3 + 0x18]\n 15990: a2 = u64 [a3 + 0x8]\n 15993: a3 = u64 [a3]\n 15995: a1 = a1 | a2\n 15998: a0 = a0 | a3\n 16001: a0 = a0 | a1\n 16004: jump @298 if a0 == 0\n      : @297 (gas: 1)\n 16007: jump @460\n      : @298 (gas: 3)\n 16010: a0 = u64 [s1 + 0x238]\n 16014: a0 = i32 [a0]\n 16016: jump @300 if a0 >u 35\n      : @299 (gas: 1)\n 16020: jump @460\n      : @300 (gas: 14)\n 16023: a0 = s1 + 0x1000\n 16027: i32 a0 = a0 + 0xfffffffffffffbc0\n 16031: a1 = 0x4\n 16034: ecalli 1 // 'call_data_load'\n 16036: a0 = s1 + 0x7ff\n 16040: a0 = a0 + 0x1b9\n 16044: a1 = u64 [a0 + 0x208]\n 16048: u64 [s1 + 0x238] = a1\n 16052: a1 = u64 [a0 + 0x210]\n 16056: u64 [s1 + 0x230] = a1\n 16060: a1 = u64 [a0 + 0x218]\n 16064: u64 [s1 + 0x228] = a1\n 16068: a0 = u64 [a0 + 0x220]\n 16072: fallthrough\n      : @301 (gas: 4)\n 16073: u64 [s1 + 0x220] = a0\n 16077: a1 = 0x20\n 16080: a0 = 0\n 16082: ra = 132, jump @0\n      : @302 [@dyn 66] (gas: 71)\n 16088: a1 = u64 [s1 + 0x220]\n 16092: a1 = reverse a1\n 16094: a2 = u64 [s1 + 0x228]\n 16098: a2 = reverse a2\n 16100: a3 = u64 [s1 + 0x230]\n 16104: a3 = reverse a3\n 16106: a4 = u64 [s1 + 0x238]\n 16110: a4 = reverse a4\n 16112: a5 = a4 >> 0x38\n 16115: u8 [a0 + 0x1f] = a5\n 16118: a5 = a4 >> 0x30\n 16121: u8 [a0 + 0x1e] = a5\n 16124: a5 = a4 >> 0x28\n 16127: u8 [a0 + 0x1d] = a5\n 16130: a5 = a4 >> 0x20\n 16133: u8 [a0 + 0x1c] = a5\n 16136: a5 = a4 >> 0x18\n 16139: u8 [a0 + 0x1b] = a5\n 16142: a5 = a4 >> 0x10\n 16145: u8 [a0 + 0x1a] = a5\n 16148: a5 = a4 >> 0x8\n 16151: u8 [a0 + 0x19] = a5\n 16154: u8 [a0 + 0x18] = a4\n 16157: a4 = a3 >> 0x38\n 16160: u8 [a0 + 0x17] = a4\n 16163: a4 = a3 >> 0x30\n 16166: u8 [a0 + 0x16] = a4\n 16169: a4 = a3 >> 0x28\n 16172: u8 [a0 + 0x15] = a4\n 16175: a4 = a3 >> 0x20\n 16178: u8 [a0 + 0x14] = a4\n 16181: a4 = a3 >> 0x18\n 16184: u8 [a0 + 0x13] = a4\n 16187: a4 = a3 >> 0x10\n 16190: u8 [a0 + 0x12] = a4\n 16193: a4 = a3 >> 0x8\n 16196: u8 [a0 + 0x11] = a4\n 16199: u8 [a0 + 0x10] = a3\n 16202: a3 = a2 >> 0x38\n 16205: u8 [a0 + 0xf] = a3\n 16208: a3 = a2 >> 0x30\n 16211: u8 [a0 + 0xe] = a3\n 16214: a3 = a2 >> 0x28\n 16217: u8 [a0 + 0xd] = a3\n 16220: a3 = a2 >> 0x20\n 16223: u8 [a0 + 0xc] = a3\n 16226: a3 = a2 >> 0x18\n 16229: u8 [a0 + 0xb] = a3\n 16232: a3 = a2 >> 0x10\n 16235: u8 [a0 + 0xa] = a3\n 16238: a3 = a2 >> 0x8\n 16241: u8 [a0 + 0x9] = a3\n 16244: u8 [a0 + 0x8] = a2\n 16247: a2 = a1 >> 0x38\n 16250: u8 [a0 + 0x7] = a2\n 16253: a2 = a1 >> 0x30\n 16256: u8 [a0 + 0x6] = a2\n 16259: a2 = a1 >> 0x28\n 16262: u8 [a0 + 0x5] = a2\n 16265: a2 = a1 >> 0x20\n 16268: u8 [a0 + 0x4] = a2\n 16271: a2 = a1 >> 0x18\n 16274: u8 [a0 + 0x3] = a2\n 16277: a2 = a1 >> 0x10\n 16280: u8 [a0 + 0x2] = a2\n 16283: a2 = a1 >> 0x8\n 16286: u8 [a0 + 0x1] = a2\n 16289: u8 [a0] = a1\n 16291: a0 = 0x20\n 16294: a1 = 0x20\n 16297: ra = 134, jump @0\n      : @303 [@dyn 67] (gas: 2)\n 16303: a1 = 0x6\n 16306: fallthrough\n      : @304 (gas: 35)\n 16307: u8 [a0 + 0x1f] = a1\n 16310: u8 [a0 + 30] = 0\n 16313: u8 [a0 + 29] = 0\n 16316: u8 [a0 + 28] = 0\n 16319: u8 [a0 + 27] = 0\n 16322: u8 [a0 + 26] = 0\n 16325: u8 [a0 + 25] = 0\n 16328: u8 [a0 + 24] = 0\n 16331: u8 [a0 + 23] = 0\n 16334: u8 [a0 + 22] = 0\n 16337: u8 [a0 + 21] = 0\n 16340: u8 [a0 + 20] = 0\n 16343: u8 [a0 + 19] = 0\n 16346: u8 [a0 + 18] = 0\n 16349: u8 [a0 + 17] = 0\n 16352: u8 [a0 + 16] = 0\n 16355: u8 [a0 + 15] = 0\n 16358: u8 [a0 + 14] = 0\n 16361: u8 [a0 + 13] = 0\n 16364: u8 [a0 + 12] = 0\n 16367: u8 [a0 + 11] = 0\n 16370: u8 [a0 + 10] = 0\n 16373: u8 [a0 + 9] = 0\n 16376: u8 [a0 + 8] = 0\n 16379: u8 [a0 + 7] = 0\n 16382: u8 [a0 + 6] = 0\n 16385: u8 [a0 + 5] = 0\n 16388: u8 [a0 + 4] = 0\n 16391: u8 [a0 + 3] = 0\n 16394: u8 [a0 + 2] = 0\n 16397: u8 [a0 + 1] = 0\n 16400: u8 [a0 + 0] = 0\n 16402: a1 = 0x40\n 16405: a0 = 0\n 16407: ra = 136, jump @0\n      : @305 [@dyn 68] (gas: 29)\n 16413: a1 = sp + 0xffffffffffffffe0\n 16416: a1 = a1 & 0xffffffffffffffe0\n 16419: u64 [s1 + 0x238] = a1\n 16423: sp = a1\n 16425: i32 a0 = a0 + 0\n 16427: i32 a2 = a1 + 0\n 16429: a1 = 0x40\n 16432: ecalli 6 // 'hash_keccak_256'\n 16434: a3 = u64 [s1 + 0x238]\n 16438: a0 = u64 [a3 + 0x18]\n 16441: a1 = u64 [a3 + 0x10]\n 16444: a2 = u64 [a3 + 0x8]\n 16447: a3 = u64 [a3]\n 16449: a0 = reverse a0\n 16451: a1 = reverse a1\n 16453: a2 = reverse a2\n 16455: a3 = reverse a3\n 16457: a4 = s1 + 0x7ff\n 16461: a4 = a4 + 0x1b9\n 16465: u64 [a4 + 0x2e0] = a3\n 16469: u64 [a4 + 0x2d8] = a2\n 16473: u64 [a4 + 0x2d0] = a1\n 16477: u64 [a4 + 0x2c8] = a0\n 16481: u64 [a4 + 608] = 0\n 16485: u64 [a4 + 600] = 0\n 16489: u64 [a4 + 592] = 0\n 16493: u64 [a4 + 584] = 0\n 16497: u32 [a4 + 744] = 0x20\n 16502: fallthrough\n      : @306 (gas: 20)\n 16503: a0 = s1 + 0x1000\n 16507: i32 a1 = a0 + 0xfffffffffffffc80\n 16511: a0 = s1 + 0x1000\n 16515: i32 a3 = a0 + 0xfffffffffffffc00\n 16519: a0 = s1 + 0x1000\n 16523: i32 a4 = a0 + 0xfffffffffffffca0\n 16527: a2 = 0xffffffffffffffff\n 16530: a0 = 0\n 16532: ecalli 5 // 'get_storage'\n 16534: a1 = s1 + 0x7ff\n 16538: a1 = a1 + 0x1b9\n 16542: a0 = u64 [a1 + 0x258]\n 16546: u64 [s1 + 0x228] = a0\n 16550: a0 = u64 [a1 + 0x250]\n 16554: u64 [s1 + 0x230] = a0\n 16558: a0 = u64 [a1 + 0x248]\n 16562: u64 [s1 + 0x238] = a0\n 16566: a0 = 0x40\n 16569: a1 = 0x20\n 16572: ra = 138, jump @0\n      : @307 [@dyn 69] (gas: 100)\n 16578: a1 = u8 [a0 + 0x11]\n 16581: a2 = u8 [a0 + 0x10]\n 16584: a3 = u8 [a0 + 0x12]\n 16587: a4 = u8 [a0 + 0x13]\n 16590: a1 = a1 << 0x8\n 16593: a1 = a1 | a2\n 16596: a3 = a3 << 0x10\n 16599: a4 = a4 << 0x18\n 16602: a3 = a3 | a4\n 16605: a1 = a1 | a3\n 16608: a2 = u8 [a0 + 0x15]\n 16611: a3 = u8 [a0 + 0x14]\n 16614: a4 = u8 [a0 + 0x16]\n 16617: a5 = u8 [a0 + 0x17]\n 16620: a2 = a2 << 0x8\n 16623: a2 = a2 | a3\n 16626: a4 = a4 << 0x10\n 16629: a5 = a5 << 0x18\n 16632: a4 = a4 | a5\n 16635: a2 = a2 | a4\n 16638: a2 = a2 << 0x20\n 16641: t0 = a2 | a1\n 16644: a2 = u8 [a0 + 0x1]\n 16647: a3 = u8 [a0]\n 16649: a4 = u8 [a0 + 0x2]\n 16652: a5 = u8 [a0 + 0x3]\n 16655: a2 = a2 << 0x8\n 16658: a2 = a2 | a3\n 16661: a4 = a4 << 0x10\n 16664: a5 = a5 << 0x18\n 16667: a4 = a4 | a5\n 16670: a2 = a2 | a4\n 16673: a3 = u8 [a0 + 0x5]\n 16676: a4 = u8 [a0 + 0x4]\n 16679: a5 = u8 [a0 + 0x6]\n 16682: a1 = u8 [a0 + 0x7]\n 16685: a3 = a3 << 0x8\n 16688: a3 = a3 | a4\n 16691: a5 = a5 << 0x10\n 16694: a1 = a1 << 0x18\n 16697: a1 = a1 | a5\n 16700: a1 = a1 | a3\n 16703: a1 = a1 << 0x20\n 16706: t1 = a1 | a2\n 16709: a1 = u8 [a0 + 0x19]\n 16712: a3 = u8 [a0 + 0x18]\n 16715: a4 = u8 [a0 + 0x1a]\n 16718: a5 = u8 [a0 + 0x1b]\n 16721: a1 = a1 << 0x8\n 16724: a1 = a1 | a3\n 16727: a4 = a4 << 0x10\n 16730: a5 = a5 << 0x18\n 16733: a4 = a4 | a5\n 16736: a1 = a1 | a4\n 16739: a3 = u8 [a0 + 0x1d]\n 16742: a4 = u8 [a0 + 0x1c]\n 16745: a5 = u8 [a0 + 0x1e]\n 16748: a2 = u8 [a0 + 0x1f]\n 16751: a3 = a3 << 0x8\n 16754: a3 = a3 | a4\n 16757: a5 = a5 << 0x10\n 16760: a2 = a2 << 0x18\n 16763: a2 = a2 | a5\n 16766: a2 = a2 | a3\n 16769: a2 = a2 << 0x20\n 16772: a3 = a2 | a1\n 16775: a1 = u8 [a0 + 0x9]\n 16778: a2 = u8 [a0 + 0x8]\n 16781: a4 = u8 [a0 + 0xa]\n 16784: a5 = u8 [a0 + 0xb]\n 16787: a1 = a1 << 0x8\n 16790: a1 = a1 | a2\n 16793: a4 = a4 << 0x10\n 16796: a5 = a5 << 0x18\n 16799: a4 = a4 | a5\n 16802: a1 = a1 | a4\n 16805: a2 = u8 [a0 + 0xd]\n 16808: a4 = u8 [a0 + 0xc]\n 16811: a5 = u8 [a0 + 0xe]\n 16814: a0 = u8 [a0 + 0xf]\n 16817: a2 = a2 << 0x8\n 16820: a2 = a2 | a4\n 16823: a5 = a5 << 0x10\n 16826: a0 = a0 << 0x18\n 16829: a0 = a0 | a5\n 16832: a0 = a0 | a2\n 16835: a0 = a0 << 0x20\n 16838: a0 = a0 | a1\n 16841: a1 = reverse a0\n 16843: a0 = reverse a3\n 16845: a2 = reverse t1\n 16847: a3 = reverse t0\n 16849: a2 = a2 | a3\n 16852: a3 = a0 | a1\n 16855: a3 = a3 | a2\n 16858: a3 = a3 >> 0x20\n 16861: a1 = a1 | a2\n 16864: a1 = a1 << 0x20\n 16867: a1 = a1 | a3\n 16870: jump @309 if a1 != 0\n      : @308 (gas: 1)\n 16873: jump @463\n      : @309 (gas: 1)\n 16876: trap\n      : @310 (gas: 1)\n 16877: jump @312 if a0 == 117300739\n      : @311 (gas: 1)\n 16884: jump @460\n      : @312 (gas: 11)\n 16887: a0 = sp + 0xffffffffffffffe0\n 16890: a0 = a0 & 0xffffffffffffffe0\n 16893: u64 [s1 + 0x230] = a0\n 16897: sp = a0\n 16899: u64 [a0 + 24] = 0\n 16902: u64 [a0 + 16] = 0\n 16905: u64 [a0 + 8] = 0\n 16908: u64 [a0 + 0] = 0\n 16910: i32 a0 = a0 + 0\n 16912: ecalli 10 // 'value_transferred'\n 16914: fallthrough\n      : @313 (gas: 9)\n 16915: a3 = u64 [s1 + 0x230]\n 16919: a0 = u64 [a3 + 0x10]\n 16922: a1 = u64 [a3 + 0x18]\n 16925: a2 = u64 [a3 + 0x8]\n 16928: a3 = u64 [a3]\n 16930: a1 = a1 | a2\n 16933: a0 = a0 | a3\n 16936: a0 = a0 | a1\n 16939: jump @315 if a0 == 0\n      : @314 (gas: 1)\n 16942: jump @460\n      : @315 (gas: 3)\n 16945: a0 = u64 [s1 + 0x238]\n 16949: a0 = i32 [a0]\n 16951: jump @317 if a0 >u 3\n      : @316 (gas: 1)\n 16955: jump @460\n      : @317 (gas: 3)\n 16958: a0 = 0x40\n 16961: a1 = 0x20\n 16964: ra = 140, jump @0\n      : @318 [@dyn 70] (gas: 85)\n 16970: a1 = u8 [a0 + 0x18]\n 16973: u64 [s1 + 0x140] = a1\n 16977: a1 = u8 [a0 + 0x19]\n 16980: u64 [s1 + 0x120] = a1\n 16984: a1 = u8 [a0 + 0x1a]\n 16987: u64 [s1 + 0x130] = a1\n 16991: a1 = u8 [a0 + 0x1b]\n 16994: u64 [s1 + 0x128] = a1\n 16998: a1 = u8 [a0 + 0x1c]\n 17001: u64 [s1 + 0x158] = a1\n 17005: a1 = u8 [a0 + 0x1d]\n 17008: u64 [s1 + 0x138] = a1\n 17012: a1 = u8 [a0 + 0x1e]\n 17015: u64 [s1 + 0x150] = a1\n 17019: a1 = u8 [a0 + 0x1f]\n 17022: u64 [s1 + 0x148] = a1\n 17026: a1 = u8 [a0 + 0x10]\n 17029: u64 [s1 + 0x180] = a1\n 17033: a1 = u8 [a0 + 0x11]\n 17036: u64 [s1 + 0x160] = a1\n 17040: a1 = u8 [a0 + 0x12]\n 17043: u64 [s1 + 0x170] = a1\n 17047: a1 = u8 [a0 + 0x13]\n 17050: u64 [s1 + 0x168] = a1\n 17054: a1 = u8 [a0 + 0x14]\n 17057: u64 [s1 + 0x198] = a1\n 17061: a1 = u8 [a0 + 0x15]\n 17064: u64 [s1 + 0x178] = a1\n 17068: a1 = u8 [a0 + 0x16]\n 17071: u64 [s1 + 0x190] = a1\n 17075: a1 = u8 [a0 + 0x17]\n 17078: u64 [s1 + 0x188] = a1\n 17082: a1 = u8 [a0 + 0x8]\n 17085: u64 [s1 + 0x1e0] = a1\n 17089: a1 = u8 [a0 + 0x9]\n 17092: u64 [s1 + 0x1a0] = a1\n 17096: a1 = u8 [a0 + 0xa]\n 17099: u64 [s1 + 0x1b0] = a1\n 17103: a1 = u8 [a0 + 0xb]\n 17106: u64 [s1 + 0x1a8] = a1\n 17110: a1 = u8 [a0 + 0xc]\n 17113: u64 [s1 + 0x1f8] = a1\n 17117: a1 = u8 [a0 + 0xd]\n 17120: u64 [s1 + 0x1b8] = a1\n 17124: a1 = u8 [a0 + 0xe]\n 17127: u64 [s1 + 0x1f0] = a1\n 17131: a1 = u8 [a0 + 0xf]\n 17134: u64 [s1 + 0x1e8] = a1\n 17138: a1 = u8 [a0]\n 17140: u64 [s1 + 0x220] = a1\n 17144: a1 = u8 [a0 + 0x1]\n 17147: u64 [s1 + 0x200] = a1\n 17151: a1 = u8 [a0 + 0x2]\n 17154: u64 [s1 + 0x210] = a1\n 17158: a1 = u8 [a0 + 0x3]\n 17161: u64 [s1 + 0x208] = a1\n 17165: a1 = u8 [a0 + 0x4]\n 17168: u64 [s1 + 0x238] = a1\n 17172: a1 = u8 [a0 + 0x5]\n 17175: u64 [s1 + 0x218] = a1\n 17179: a1 = u8 [a0 + 0x6]\n 17182: u64 [s1 + 0x230] = a1\n 17186: a0 = u8 [a0 + 0x7]\n 17189: u64 [s1 + 0x228] = a0\n 17193: a1 = s1 + 0x7ff\n 17197: a1 = a1 + 0x1b9\n 17201: u32 [a1 + 744] = 0x20\n 17206: u64 [a1 + 736] = 0\n 17210: u64 [a1 + 728] = 0\n 17214: u64 [a1 + 720] = 0\n 17218: u64 [a1 + 712] = 0\n 17222: u64 [a1 + 608] = 0\n 17226: u64 [a1 + 600] = 0\n 17230: u64 [a1 + 592] = 0\n 17234: u64 [a1 + 584] = 0\n 17238: a0 = s1 + 0x1000\n 17242: i32 a1 = a0 + 0xfffffffffffffc80\n 17246: a0 = s1 + 0x1000\n 17250: i32 a3 = a0 + 0xfffffffffffffc00\n 17254: a0 = s1 + 0x1000\n 17258: i32 a4 = a0 + 0xfffffffffffffca0\n 17262: a2 = 0xffffffffffffffff\n 17265: a0 = 0\n 17267: ecalli 5 // 'get_storage'\n 17269: fallthrough\n      : @319 (gas: 36)\n 17270: a0 = s1 + 0x7ff\n 17274: a0 = a0 + 0x1b9\n 17278: t2 = u64 [a0 + 0x258]\n 17282: ra = u64 [a0 + 0x250]\n 17286: t1 = u64 [a0 + 0x260]\n 17290: a5 = u64 [a0 + 0x248]\n 17294: a0 = t2 << 0x3f\n 17297: a1 = ra >> 0x1\n 17300: a0 = a0 | a1\n 17303: a1 = t1 << 0x3f\n 17306: a2 = t2 >> 0x1\n 17309: a1 = a1 | a2\n 17312: a2 = ra << 0x3f\n 17315: a3 = a5 >> 0x1\n 17318: a4 = a3 | a2\n 17321: a2 = t1 >> 0x1\n 17324: u64 [s1 + 0x110] = a5\n 17328: a5 = a5 & 0x1\n 17331: a3 = -a5\n 17333: t0 = a3 & a1\n 17336: a1 = a3 & a0\n 17339: a2 = a2 & a3\n 17342: a0 = a4 & 0x7f\n 17345: u64 [s1 + 0x108] = a0\n 17349: a4 = a0 if a5 == 0\n 17352: u64 [s1 + 0x1d8] = a4\n 17356: a0 = a4 <u 0x20\n 17359: u64 [s1 + 0x1c8] = a1\n 17363: a0 = 0 if a1 != 0\n 17365: u64 [s1 + 0x1d0] = t0\n 17369: u64 [s1 + 0x1c0] = a2\n 17373: a1 = t0 | a2\n 17376: a0 = 0 if a1 != 0\n 17378: u64 [s1 + 0x118] = a5\n 17382: a1 = a5 <u 0x1\n 17385: jump @321 if a1 == a0\n      : @320 (gas: 1)\n 17388: jump @478\n      : @321 (gas: 100)\n 17391: a0 = u64 [s1 + 0x120]\n 17395: a0 = a0 << 0x8\n 17398: a1 = u64 [s1 + 0x140]\n 17402: a0 = a0 | a1\n 17405: a1 = u64 [s1 + 0x130]\n 17409: a1 = a1 << 0x10\n 17412: a2 = u64 [s1 + 0x128]\n 17416: a2 = a2 << 0x18\n 17419: a1 = a1 | a2\n 17422: a0 = a0 | a1\n 17425: a1 = u64 [s1 + 0x138]\n 17429: a1 = a1 << 0x8\n 17432: a2 = u64 [s1 + 0x158]\n 17436: a1 = a1 | a2\n 17439: a2 = u64 [s1 + 0x150]\n 17443: a2 = a2 << 0x10\n 17446: a3 = u64 [s1 + 0x148]\n 17450: a3 = a3 << 0x18\n 17453: a2 = a2 | a3\n 17456: a1 = a1 | a2\n 17459: a1 = a1 << 0x20\n 17462: t0 = a1 | a0\n 17465: a1 = u64 [s1 + 0x160]\n 17469: a1 = a1 << 0x8\n 17472: a0 = u64 [s1 + 0x180]\n 17476: a1 = a1 | a0\n 17479: a2 = u64 [s1 + 0x170]\n 17483: a2 = a2 << 0x10\n 17486: a3 = u64 [s1 + 0x168]\n 17490: a3 = a3 << 0x18\n 17493: a2 = a2 | a3\n 17496: a1 = a1 | a2\n 17499: a2 = u64 [s1 + 0x178]\n 17503: a2 = a2 << 0x8\n 17506: a0 = u64 [s1 + 0x198]\n 17510: a2 = a2 | a0\n 17513: a3 = u64 [s1 + 0x190]\n 17517: a3 = a3 << 0x10\n 17520: a4 = u64 [s1 + 0x188]\n 17524: a4 = a4 << 0x18\n 17527: a3 = a3 | a4\n 17530: a2 = a2 | a3\n 17533: a2 = a2 << 0x20\n 17536: a1 = a1 | a2\n 17539: a2 = u64 [s1 + 0x1a0]\n 17543: a2 = a2 << 0x8\n 17546: a0 = u64 [s1 + 0x1e0]\n 17550: a2 = a2 | a0\n 17553: a3 = u64 [s1 + 0x1b0]\n 17557: a3 = a3 << 0x10\n 17560: a4 = u64 [s1 + 0x1a8]\n 17564: a4 = a4 << 0x18\n 17567: a3 = a3 | a4\n 17570: a2 = a2 | a3\n 17573: a3 = u64 [s1 + 0x1b8]\n 17577: a3 = a3 << 0x8\n 17580: a0 = u64 [s1 + 0x1f8]\n 17584: a3 = a3 | a0\n 17587: a4 = u64 [s1 + 0x1f0]\n 17591: a4 = a4 << 0x10\n 17594: a5 = u64 [s1 + 0x1e8]\n 17598: a5 = a5 << 0x18\n 17601: a4 = a4 | a5\n 17604: a3 = a3 | a4\n 17607: a3 = a3 << 0x20\n 17610: a2 = a2 | a3\n 17613: a3 = u64 [s1 + 0x200]\n 17617: a3 = a3 << 0x8\n 17620: a0 = u64 [s1 + 0x220]\n 17624: a3 = a3 | a0\n 17627: a4 = u64 [s1 + 0x210]\n 17631: a4 = a4 << 0x10\n 17634: a5 = u64 [s1 + 0x208]\n 17638: a5 = a5 << 0x18\n 17641: a4 = a4 | a5\n 17644: a3 = a3 | a4\n 17647: a4 = u64 [s1 + 0x218]\n 17651: a4 = a4 << 0x8\n 17654: a0 = u64 [s1 + 0x238]\n 17658: a4 = a4 | a0\n 17661: a5 = u64 [s1 + 0x230]\n 17665: a5 = a5 << 0x10\n 17668: a0 = u64 [s1 + 0x228]\n 17672: a0 = a0 << 0x18\n 17675: a0 = a0 | a5\n 17678: a0 = a0 | a4\n 17681: a0 = a0 << 0x20\n 17684: a0 = a0 | a3\n 17687: a5 = reverse a0\n 17689: a4 = reverse a2\n 17691: a3 = reverse a1\n 17693: a2 = reverse t0\n 17695: a0 = a2 | a4\n 17698: a1 = a3 | a5\n 17701: a0 = a0 | a1\n 17704: a0 = a0 >> 0x20\n 17707: a1 = a1 | a4\n 17710: a1 = a1 << 0x20\n 17713: a0 = a0 | a1\n 17716: jump @309 if a0 != 0\n      : @322 (gas: 11)\n 17720: u64 [s1 + 0x220] = ra\n 17724: u64 [s1 + 0x228] = t2\n 17728: u64 [s1 + 0x230] = t1\n 17732: u64 [s1 + 0x178] = a5\n 17736: u64 [s1 + 0x180] = a4\n 17740: u64 [s1 + 0x188] = a3\n 17744: i32 a0 = a2 + 0\n 17746: a1 = 0x20\n 17749: u64 [s1 + 0x238] = a0\n 17753: u64 [s1 + 0x190] = a2\n 17757: ra = 142, jump @0\n      : @323 [@dyn 71] (gas: 70)\n 17763: a1 = u64 [s1 + 0x1d8]\n 17767: a1 = reverse a1\n 17769: a2 = a1 >> 0x38\n 17772: u8 [a0 + 0x1f] = a2\n 17775: a2 = a1 >> 0x30\n 17778: u8 [a0 + 0x1e] = a2\n 17781: a2 = a1 >> 0x28\n 17784: u8 [a0 + 0x1d] = a2\n 17787: a2 = a1 >> 0x20\n 17790: u8 [a0 + 0x1c] = a2\n 17793: a2 = a1 >> 0x18\n 17796: u8 [a0 + 0x1b] = a2\n 17799: a2 = a1 >> 0x10\n 17802: u8 [a0 + 0x1a] = a2\n 17805: a2 = a1 >> 0x8\n 17808: u8 [a0 + 0x19] = a2\n 17811: a2 = u64 [s1 + 0x1c8]\n 17815: a2 = reverse a2\n 17817: u8 [a0 + 0x18] = a1\n 17820: a1 = a2 >> 0x38\n 17823: u8 [a0 + 0x17] = a1\n 17826: a1 = a2 >> 0x30\n 17829: u8 [a0 + 0x16] = a1\n 17832: a1 = a2 >> 0x28\n 17835: u8 [a0 + 0x15] = a1\n 17838: a1 = a2 >> 0x20\n 17841: u8 [a0 + 0x14] = a1\n 17844: a1 = a2 >> 0x18\n 17847: u8 [a0 + 0x13] = a1\n 17850: a1 = a2 >> 0x10\n 17853: u8 [a0 + 0x12] = a1\n 17856: a1 = u64 [s1 + 0x1d0]\n 17860: a1 = reverse a1\n 17862: u8 [a0 + 0x10] = a2\n 17865: a2 = a2 >> 0x8\n 17868: u8 [a0 + 0x11] = a2\n 17871: a2 = a1 >> 0x38\n 17874: u8 [a0 + 0xf] = a2\n 17877: a2 = a1 >> 0x30\n 17880: u8 [a0 + 0xe] = a2\n 17883: a2 = a1 >> 0x28\n 17886: u8 [a0 + 0xd] = a2\n 17889: a2 = a1 >> 0x20\n 17892: u8 [a0 + 0xc] = a2\n 17895: a2 = a1 >> 0x18\n 17898: u8 [a0 + 0xb] = a2\n 17901: a2 = a1 >> 0x10\n 17904: u8 [a0 + 0xa] = a2\n 17907: a2 = u64 [s1 + 0x1c0]\n 17911: a2 = reverse a2\n 17913: u8 [a0 + 0x8] = a1\n 17916: a1 = a1 >> 0x8\n 17919: u8 [a0 + 0x9] = a1\n 17922: a1 = a2 >> 0x38\n 17925: u8 [a0 + 0x7] = a1\n 17928: a1 = a2 >> 0x30\n 17931: u8 [a0 + 0x6] = a1\n 17934: a1 = a2 >> 0x28\n 17937: u8 [a0 + 0x5] = a1\n 17940: a1 = a2 >> 0x20\n 17943: u8 [a0 + 0x4] = a1\n 17946: a1 = a2 >> 0x18\n 17949: u8 [a0 + 0x3] = a1\n 17952: a1 = a2 >> 0x10\n 17955: u8 [a0 + 0x2] = a1\n 17958: u8 [a0] = a2\n 17960: a2 = a2 >> 0x8\n 17963: u8 [a0 + 0x1] = a2\n 17966: a0 = u64 [s1 + 0x118]\n 17970: jump @325 if a0 == 0\n      : @324 (gas: 1)\n 17973: jump @371\n      : @325 (gas: 10)\n 17976: a0 = u64 [s1 + 0x180]\n 17980: a1 = u64 [s1 + 0x178]\n 17984: a0 = a0 | a1\n 17987: a1 = 0xffffffe0\n 17997: a2 = u64 [s1 + 0x190]\n 18001: a1 = a2 <u a1\n 18004: a2 = u64 [s1 + 0x188]\n 18008: a1 = 0 if a2 != 0\n 18010: a1 = 0 if a0 != 0\n 18012: jump @309 if a1 == 0\n      : @326 (gas: 7)\n 18016: a0 = u64 [s1 + 0x110]\n 18020: a0 = a0 & 0xffffffffffffff00\n 18024: u64 [s1 + 0x218] = a0\n 18028: a0 = u64 [s1 + 0x238]\n 18032: i32 a0 = a0 + 0x20\n 18035: a1 = 0x20\n 18038: ra = 144, jump @0\n      : @327 [@dyn 72] (gas: 74)\n 18044: t0 = 0\n 18046: t1 = 0\n 18048: u64 [s1 + 568] = 0\n 18052: a1 = u64 [s1 + 0x218]\n 18056: a3 = reverse a1\n 18058: a4 = a3 >> 0x30\n 18061: u8 [a0 + 0x1e] = a4\n 18064: a4 = a3 >> 0x28\n 18067: u8 [a0 + 0x1d] = a4\n 18070: a4 = a3 >> 0x20\n 18073: u8 [a0 + 0x1c] = a4\n 18076: a4 = a3 >> 0x18\n 18079: u8 [a0 + 0x1b] = a4\n 18082: a4 = a3 >> 0x10\n 18085: u8 [a0 + 0x1a] = a4\n 18088: a1 = u64 [s1 + 0x220]\n 18092: a4 = reverse a1\n 18094: u8 [a0 + 0x18] = a3\n 18097: a3 = a3 >> 0x8\n 18100: u8 [a0 + 0x19] = a3\n 18103: a3 = a4 >> 0x38\n 18106: u8 [a0 + 0x17] = a3\n 18109: a3 = a4 >> 0x30\n 18112: u8 [a0 + 0x16] = a3\n 18115: a3 = a4 >> 0x28\n 18118: u8 [a0 + 0x15] = a3\n 18121: a3 = a4 >> 0x20\n 18124: u8 [a0 + 0x14] = a3\n 18127: a3 = a4 >> 0x18\n 18130: u8 [a0 + 0x13] = a3\n 18133: a3 = a4 >> 0x10\n 18136: u8 [a0 + 0x12] = a3\n 18139: a1 = u64 [s1 + 0x228]\n 18143: a3 = reverse a1\n 18145: u8 [a0 + 0x10] = a4\n 18148: a4 = a4 >> 0x8\n 18151: u8 [a0 + 0x11] = a4\n 18154: a4 = a3 >> 0x38\n 18157: u8 [a0 + 0xf] = a4\n 18160: a4 = a3 >> 0x30\n 18163: u8 [a0 + 0xe] = a4\n 18166: a4 = a3 >> 0x28\n 18169: u8 [a0 + 0xd] = a4\n 18172: a4 = a3 >> 0x20\n 18175: u8 [a0 + 0xc] = a4\n 18178: a4 = a3 >> 0x18\n 18181: u8 [a0 + 0xb] = a4\n 18184: a4 = a3 >> 0x10\n 18187: u8 [a0 + 0xa] = a4\n 18190: a1 = u64 [s1 + 0x230]\n 18194: a4 = reverse a1\n 18196: u8 [a0 + 31] = 0\n 18199: u8 [a0 + 0x8] = a3\n 18202: a3 = a3 >> 0x8\n 18205: u8 [a0 + 0x9] = a3\n 18208: u8 [a0] = a4\n 18210: a3 = a4 >> 0x38\n 18213: u8 [a0 + 0x7] = a3\n 18216: a3 = a4 >> 0x30\n 18219: u8 [a0 + 0x6] = a3\n 18222: a3 = a4 >> 0x28\n 18225: u8 [a0 + 0x5] = a3\n 18228: a3 = a4 >> 0x20\n 18231: u8 [a0 + 0x4] = a3\n 18234: a3 = a4 >> 0x18\n 18237: u8 [a0 + 0x3] = a3\n 18240: a3 = a4 >> 0x10\n 18243: u8 [a0 + 0x2] = a3\n 18246: a4 = a4 >> 0x8\n 18249: u8 [a0 + 0x1] = a4\n 18252: a0 = u64 [s1 + 0x108]\n 18256: a0 = a0 >u 0\n 18258: ra = a0 << 0x5\n 18261: jump @412\n      : @328 (gas: 3)\n 18264: a0 = 0x40\n 18267: a1 = 0x20\n 18270: ra = 146, jump @0\n      : @329 [@dyn 73] (gas: 100)\n 18276: a1 = u8 [a0 + 0x11]\n 18279: a2 = u8 [a0 + 0x10]\n 18282: a3 = u8 [a0 + 0x12]\n 18285: a4 = u8 [a0 + 0x13]\n 18288: a1 = a1 << 0x8\n 18291: a1 = a1 | a2\n 18294: a3 = a3 << 0x10\n 18297: a4 = a4 << 0x18\n 18300: a3 = a3 | a4\n 18303: a1 = a1 | a3\n 18306: a2 = u8 [a0 + 0x15]\n 18309: a3 = u8 [a0 + 0x14]\n 18312: a4 = u8 [a0 + 0x16]\n 18315: a5 = u8 [a0 + 0x17]\n 18318: a2 = a2 << 0x8\n 18321: a2 = a2 | a3\n 18324: a4 = a4 << 0x10\n 18327: a5 = a5 << 0x18\n 18330: a4 = a4 | a5\n 18333: a2 = a2 | a4\n 18336: a2 = a2 << 0x20\n 18339: t0 = a2 | a1\n 18342: a2 = u8 [a0 + 0x1]\n 18345: a3 = u8 [a0]\n 18347: a4 = u8 [a0 + 0x2]\n 18350: a5 = u8 [a0 + 0x3]\n 18353: a2 = a2 << 0x8\n 18356: a2 = a2 | a3\n 18359: a4 = a4 << 0x10\n 18362: a5 = a5 << 0x18\n 18365: a4 = a4 | a5\n 18368: a2 = a2 | a4\n 18371: a3 = u8 [a0 + 0x5]\n 18374: a4 = u8 [a0 + 0x4]\n 18377: a5 = u8 [a0 + 0x6]\n 18380: a1 = u8 [a0 + 0x7]\n 18383: a3 = a3 << 0x8\n 18386: a3 = a3 | a4\n 18389: a5 = a5 << 0x10\n 18392: a1 = a1 << 0x18\n 18395: a1 = a1 | a5\n 18398: a1 = a1 | a3\n 18401: a1 = a1 << 0x20\n 18404: t1 = a1 | a2\n 18407: a1 = u8 [a0 + 0x19]\n 18410: a3 = u8 [a0 + 0x18]\n 18413: a4 = u8 [a0 + 0x1a]\n 18416: a5 = u8 [a0 + 0x1b]\n 18419: a1 = a1 << 0x8\n 18422: a1 = a1 | a3\n 18425: a4 = a4 << 0x10\n 18428: a5 = a5 << 0x18\n 18431: a4 = a4 | a5\n 18434: a1 = a1 | a4\n 18437: a3 = u8 [a0 + 0x1d]\n 18440: a4 = u8 [a0 + 0x1c]\n 18443: a5 = u8 [a0 + 0x1e]\n 18446: a2 = u8 [a0 + 0x1f]\n 18449: a3 = a3 << 0x8\n 18452: a3 = a3 | a4\n 18455: a5 = a5 << 0x10\n 18458: a2 = a2 << 0x18\n 18461: a2 = a2 | a5\n 18464: a2 = a2 | a3\n 18467: a2 = a2 << 0x20\n 18470: a3 = a2 | a1\n 18473: a1 = u8 [a0 + 0x9]\n 18476: a2 = u8 [a0 + 0x8]\n 18479: a4 = u8 [a0 + 0xa]\n 18482: a5 = u8 [a0 + 0xb]\n 18485: a1 = a1 << 0x8\n 18488: a1 = a1 | a2\n 18491: a4 = a4 << 0x10\n 18494: a5 = a5 << 0x18\n 18497: a4 = a4 | a5\n 18500: a1 = a1 | a4\n 18503: a2 = u8 [a0 + 0xd]\n 18506: a4 = u8 [a0 + 0xc]\n 18509: a5 = u8 [a0 + 0xe]\n 18512: a0 = u8 [a0 + 0xf]\n 18515: a2 = a2 << 0x8\n 18518: a2 = a2 | a4\n 18521: a5 = a5 << 0x10\n 18524: a0 = a0 << 0x18\n 18527: a0 = a0 | a5\n 18530: a0 = a0 | a2\n 18533: a0 = a0 << 0x20\n 18536: a0 = a0 | a1\n 18539: a4 = reverse a0\n 18541: a2 = reverse a3\n 18543: a5 = reverse t1\n 18545: a3 = reverse t0\n 18547: a0 = a3 | a5\n 18550: a1 = a2 | a4\n 18553: a1 = a1 | a0\n 18556: a1 = a1 >> 0x20\n 18559: a0 = a0 | a4\n 18562: a0 = a0 << 0x20\n 18565: a0 = a0 | a1\n 18568: jump @309 if a0 != 0\n      : @330 (gas: 8)\n 18572: i32 a0 = a2 + 0\n 18574: a1 = 0x20\n 18577: u64 [s1 + 0x218] = a0\n 18581: u64 [s1 + 0x238] = a2\n 18585: u64 [s1 + 0x230] = a3\n 18589: u64 [s1 + 0x228] = a4\n 18593: u64 [s1 + 0x220] = a5\n 18597: ra = 148, jump @0\n      : @331 [@dyn 74] (gas: 43)\n 18603: u8 [a0 + 31] = 0\n 18606: u8 [a0 + 30] = 0\n 18609: u8 [a0 + 29] = 0\n 18612: u8 [a0 + 28] = 0\n 18615: u8 [a0 + 27] = 0\n 18618: u8 [a0 + 26] = 0\n 18621: u8 [a0 + 25] = 0\n 18624: u8 [a0 + 24] = 0\n 18627: u8 [a0 + 23] = 0\n 18630: u8 [a0 + 22] = 0\n 18633: u8 [a0 + 21] = 0\n 18636: u8 [a0 + 20] = 0\n 18639: u8 [a0 + 19] = 0\n 18642: u8 [a0 + 18] = 0\n 18645: u8 [a0 + 17] = 0\n 18648: u8 [a0 + 16] = 0\n 18651: u8 [a0 + 15] = 0\n 18654: u8 [a0 + 14] = 0\n 18657: u8 [a0 + 13] = 0\n 18660: u8 [a0 + 12] = 0\n 18663: u8 [a0 + 11] = 0\n 18666: u8 [a0 + 10] = 0\n 18669: u8 [a0 + 9] = 0\n 18672: u8 [a0 + 8] = 0\n 18675: u8 [a0 + 7] = 0\n 18678: u8 [a0 + 6] = 0\n 18681: u8 [a0 + 5] = 0\n 18684: u8 [a0 + 3] = 0xa0\n 18689: u8 [a0 + 2] = 0x79\n 18693: u8 [a0 + 1] = 0xc3\n 18698: u8 [a0 + 0] = 0x8\n 18701: a1 = u64 [s1 + 0x228]\n 18705: a3 = u64 [s1 + 0x220]\n 18709: a3 = a3 | a1\n 18712: a4 = 0x100000000\n 18722: a1 = 0xfffffffc\n 18732: a2 = u64 [s1 + 0x238]\n 18736: a1 = a2 <u a1\n 18739: a2 = u64 [s1 + 0x230]\n 18743: a1 = 0 if a2 != 0\n 18745: a1 = 0 if a3 != 0\n 18747: u8 [a0 + 4] = 0\n 18750: jump @309 if a1 == 0\n      : @332 (gas: 6)\n 18754: a0 = u64 [s1 + 0x218]\n 18758: i32 a0 = a0 + 0x4\n 18761: a1 = 0x20\n 18764: u64 [s1 + 0x228] = a3\n 18768: u64 [s1 + 0x220] = a4\n 18772: ra = 150, jump @0\n      : @333 [@dyn 75] (gas: 41)\n 18778: a4 = u64 [s1 + 0x228]\n 18782: a3 = u64 [s1 + 0x230]\n 18786: a2 = u64 [s1 + 0x238]\n 18790: u8 [a0 + 31] = 0x20\n 18794: u8 [a0 + 30] = 0\n 18797: u8 [a0 + 29] = 0\n 18800: u8 [a0 + 28] = 0\n 18803: u8 [a0 + 27] = 0\n 18806: u8 [a0 + 26] = 0\n 18809: u8 [a0 + 25] = 0\n 18812: u8 [a0 + 24] = 0\n 18815: u8 [a0 + 23] = 0\n 18818: u8 [a0 + 22] = 0\n 18821: u8 [a0 + 21] = 0\n 18824: u8 [a0 + 20] = 0\n 18827: u8 [a0 + 19] = 0\n 18830: u8 [a0 + 18] = 0\n 18833: u8 [a0 + 17] = 0\n 18836: u8 [a0 + 16] = 0\n 18839: u8 [a0 + 15] = 0\n 18842: u8 [a0 + 14] = 0\n 18845: u8 [a0 + 13] = 0\n 18848: u8 [a0 + 12] = 0\n 18851: u8 [a0 + 11] = 0\n 18854: u8 [a0 + 10] = 0\n 18857: u8 [a0 + 9] = 0\n 18860: u8 [a0 + 8] = 0\n 18863: u8 [a0 + 7] = 0\n 18866: u8 [a0 + 6] = 0\n 18869: u8 [a0 + 5] = 0\n 18872: u8 [a0 + 4] = 0\n 18875: u8 [a0 + 3] = 0\n 18878: u8 [a0 + 2] = 0\n 18881: u8 [a0 + 1] = 0\n 18884: a1 = u64 [s1 + 0x220]\n 18888: a1 = a1 + 0xffffffffffffffdc\n 18891: a1 = a2 <u a1\n 18894: a1 = 0 if a3 != 0\n 18896: a1 = 0 if a4 != 0\n 18898: u8 [a0 + 0] = 0\n 18900: jump @309 if a1 == 0\n      : @334 (gas: 4)\n 18904: a0 = u64 [s1 + 0x218]\n 18908: i32 a0 = a0 + 0x24\n 18911: a1 = 0x20\n 18914: ra = 152, jump @0\n      : @335 [@dyn 76] (gas: 40)\n 18920: u8 [a0 + 31] = 0xe\n 18924: u8 [a0 + 30] = 0\n 18927: u8 [a0 + 29] = 0\n 18930: u8 [a0 + 28] = 0\n 18933: u8 [a0 + 27] = 0\n 18936: u8 [a0 + 26] = 0\n 18939: u8 [a0 + 25] = 0\n 18942: u8 [a0 + 24] = 0\n 18945: u8 [a0 + 23] = 0\n 18948: u8 [a0 + 22] = 0\n 18951: u8 [a0 + 21] = 0\n 18954: u8 [a0 + 20] = 0\n 18957: u8 [a0 + 19] = 0\n 18960: u8 [a0 + 18] = 0\n 18963: u8 [a0 + 17] = 0\n 18966: u8 [a0 + 16] = 0\n 18969: u8 [a0 + 15] = 0\n 18972: u8 [a0 + 14] = 0\n 18975: u8 [a0 + 13] = 0\n 18978: u8 [a0 + 12] = 0\n 18981: u8 [a0 + 11] = 0\n 18984: u8 [a0 + 10] = 0\n 18987: u8 [a0 + 9] = 0\n 18990: u8 [a0 + 8] = 0\n 18993: u8 [a0 + 7] = 0\n 18996: u8 [a0 + 6] = 0\n 18999: u8 [a0 + 5] = 0\n 19002: u8 [a0 + 4] = 0\n 19005: u8 [a0 + 3] = 0\n 19008: u8 [a0 + 2] = 0\n 19011: u8 [a0 + 1] = 0\n 19014: a1 = 0xffffffbc\n 19024: a2 = u64 [s1 + 0x238]\n 19028: a1 = a2 <u a1\n 19031: a2 = u64 [s1 + 0x230]\n 19035: a1 = 0 if a2 != 0\n 19037: a2 = u64 [s1 + 0x228]\n 19041: a1 = 0 if a2 != 0\n 19043: u8 [a0 + 0] = 0\n 19045: jump @309 if a1 == 0\n      : @336 (gas: 4)\n 19049: a0 = u64 [s1 + 0x218]\n 19053: i32 a0 = a0 + 0x44\n 19056: a1 = 0x20\n 19059: ra = 154, jump @0\n      : @337 [@dyn 77] (gas: 30)\n 19065: u8 [a0 + 31] = 0\n 19068: u8 [a0 + 30] = 0\n 19071: u8 [a0 + 29] = 0\n 19074: u8 [a0 + 28] = 0\n 19077: u8 [a0 + 27] = 0\n 19080: u8 [a0 + 26] = 0\n 19083: u8 [a0 + 25] = 0\n 19086: u8 [a0 + 24] = 0\n 19089: u8 [a0 + 23] = 0\n 19092: u8 [a0 + 22] = 0\n 19095: u8 [a0 + 21] = 0\n 19098: u8 [a0 + 20] = 0\n 19101: u8 [a0 + 19] = 0\n 19104: u8 [a0 + 18] = 0\n 19107: u8 [a0 + 17] = 0\n 19110: u8 [a0 + 16] = 0\n 19113: u8 [a0 + 15] = 0\n 19116: u8 [a0 + 14] = 0\n 19119: u8 [a0 + 13] = 0x64\n 19123: u8 [a0 + 12] = 0x65\n 19127: u8 [a0 + 11] = 0x7a\n 19131: u8 [a0 + 10] = 0x69\n 19135: u8 [a0 + 9] = 0x72\n 19139: u8 [a0 + 8] = 0x6f\n 19143: u8 [a0 + 7] = 0x68\n 19147: u8 [a0 + 6] = 0x74\n 19151: u8 [a0 + 5] = 0x75\n 19155: u8 [a0 + 4] = 0x61\n 19159: u8 [a0 + 3] = 0x20\n 19163: fallthrough\n      : @338 (gas: 4)\n 19164: u8 [a0 + 2] = 0x74\n 19168: u8 [a0 + 1] = 0x6f\n 19172: a1 = 0x4e\n 19175: jump @364\n      : @339 (gas: 3)\n 19178: a1 = 0x20\n 19181: a0 = 0\n 19183: ra = 156, jump @0\n      : @340 [@dyn 78] (gas: 75)\n 19189: a1 = u64 [s1 + 0x208]\n 19193: a4 = reverse a1\n 19195: a1 = u64 [s1 + 0x210]\n 19199: a5 = reverse a1\n 19201: a1 = u64 [s1 + 0x218]\n 19205: a3 = reverse a1\n 19207: a1 = u64 [s1 + 0x220]\n 19211: a2 = reverse a1\n 19213: u8 [a0 + 0x18] = a2\n 19216: a1 = a2 >> 0x38\n 19219: u8 [a0 + 0x1f] = a1\n 19222: a1 = a2 >> 0x30\n 19225: u8 [a0 + 0x1e] = a1\n 19228: a1 = a2 >> 0x28\n 19231: u8 [a0 + 0x1d] = a1\n 19234: a1 = a2 >> 0x20\n 19237: u8 [a0 + 0x1c] = a1\n 19240: a1 = a2 >> 0x18\n 19243: u8 [a0 + 0x1b] = a1\n 19246: a1 = a2 >> 0x10\n 19249: u8 [a0 + 0x1a] = a1\n 19252: u64 [s1 + 0x1f8] = a2\n 19256: a1 = a2 >> 0x8\n 19259: u8 [a0 + 0x19] = a1\n 19262: u8 [a0 + 0x10] = a3\n 19265: a1 = a3 >> 0x38\n 19268: u8 [a0 + 0x17] = a1\n 19271: a1 = a3 >> 0x30\n 19274: u8 [a0 + 0x16] = a1\n 19277: a1 = a3 >> 0x28\n 19280: u8 [a0 + 0x15] = a1\n 19283: a1 = a3 >> 0x20\n 19286: u8 [a0 + 0x14] = a1\n 19289: a1 = a3 >> 0x18\n 19292: u8 [a0 + 0x13] = a1\n 19295: a1 = a3 >> 0x10\n 19298: u8 [a0 + 0x12] = a1\n 19301: u64 [s1 + 0x1f0] = a3\n 19305: a1 = a3 >> 0x8\n 19308: u8 [a0 + 0x11] = a1\n 19311: u8 [a0 + 0x8] = a5\n 19314: a1 = a5 >> 0x38\n 19317: u8 [a0 + 0xf] = a1\n 19320: a1 = a5 >> 0x30\n 19323: u8 [a0 + 0xe] = a1\n 19326: a1 = a5 >> 0x28\n 19329: u8 [a0 + 0xd] = a1\n 19332: a1 = a5 >> 0x20\n 19335: u8 [a0 + 0xc] = a1\n 19338: a1 = a5 >> 0x18\n 19341: u8 [a0 + 0xb] = a1\n 19344: a1 = a5 >> 0x10\n 19347: u8 [a0 + 0xa] = a1\n 19350: u64 [s1 + 0x1e0] = a5\n 19354: a1 = a5 >> 0x8\n 19357: u8 [a0 + 0x9] = a1\n 19360: u8 [a0] = a4\n 19362: a1 = a4 >> 0x38\n 19365: u8 [a0 + 0x7] = a1\n 19368: a1 = a4 >> 0x30\n 19371: u8 [a0 + 0x6] = a1\n 19374: a1 = a4 >> 0x28\n 19377: u8 [a0 + 0x5] = a1\n 19380: a1 = a4 >> 0x20\n 19383: u8 [a0 + 0x4] = a1\n 19386: a1 = a4 >> 0x18\n 19389: u8 [a0 + 0x3] = a1\n 19392: a1 = a4 >> 0x10\n 19395: u8 [a0 + 0x2] = a1\n 19398: u64 [s1 + 0x1e8] = a4\n 19402: a1 = a4 >> 0x8\n 19405: u8 [a0 + 0x1] = a1\n 19408: a0 = 0x20\n 19411: a1 = 0x20\n 19414: ra = 158, jump @0\n      : @341 [@dyn 79] (gas: 35)\n 19420: u8 [a0 + 31] = 0x6\n 19424: u8 [a0 + 30] = 0\n 19427: u8 [a0 + 29] = 0\n 19430: u8 [a0 + 28] = 0\n 19433: u8 [a0 + 27] = 0\n 19436: u8 [a0 + 26] = 0\n 19439: u8 [a0 + 25] = 0\n 19442: u8 [a0 + 24] = 0\n 19445: u8 [a0 + 23] = 0\n 19448: u8 [a0 + 22] = 0\n 19451: u8 [a0 + 21] = 0\n 19454: u8 [a0 + 20] = 0\n 19457: u8 [a0 + 19] = 0\n 19460: u8 [a0 + 18] = 0\n 19463: u8 [a0 + 17] = 0\n 19466: u8 [a0 + 16] = 0\n 19469: u8 [a0 + 15] = 0\n 19472: u8 [a0 + 14] = 0\n 19475: u8 [a0 + 13] = 0\n 19478: u8 [a0 + 12] = 0\n 19481: u8 [a0 + 11] = 0\n 19484: u8 [a0 + 10] = 0\n 19487: u8 [a0 + 9] = 0\n 19490: u8 [a0 + 8] = 0\n 19493: u8 [a0 + 7] = 0\n 19496: u8 [a0 + 6] = 0\n 19499: u8 [a0 + 5] = 0\n 19502: u8 [a0 + 4] = 0\n 19505: u8 [a0 + 3] = 0\n 19508: u8 [a0 + 2] = 0\n 19511: u8 [a0 + 1] = 0\n 19514: u8 [a0 + 0] = 0\n 19516: a1 = 0x40\n 19519: a0 = 0\n 19521: ra = 160, jump @0\n      : @342 [@dyn 80] (gas: 69)\n 19527: a1 = sp + 0xffffffffffffffe0\n 19530: a1 = a1 & 0xffffffffffffffe0\n 19533: u64 [s1 + 0x1d8] = a1\n 19537: sp = a1\n 19539: i32 a0 = a0 + 0\n 19541: i32 a2 = a1 + 0\n 19543: a1 = 0x40\n 19546: ecalli 6 // 'hash_keccak_256'\n 19548: a3 = u64 [s1 + 0x1d8]\n 19552: a0 = u64 [a3 + 0x18]\n 19555: a1 = u64 [a3 + 0x10]\n 19558: a2 = u64 [a3 + 0x8]\n 19561: a3 = u64 [a3]\n 19563: a0 = reverse a0\n 19565: a1 = reverse a1\n 19567: a2 = reverse a2\n 19569: a3 = reverse a3\n 19571: a4 = s1 + 0x7ff\n 19575: a4 = a4 + 0x1b9\n 19579: u64 [a4 + 0x2e0] = a3\n 19583: a3 = s1 + 0x7ff\n 19587: a3 = a3 + 0x1b9\n 19591: u64 [a3 + 0x2d8] = a2\n 19595: a2 = s1 + 0x7ff\n 19599: a2 = a2 + 0x1b9\n 19603: u64 [a2 + 0x2d0] = a1\n 19607: a1 = s1 + 0x7ff\n 19611: a1 = a1 + 0x1b9\n 19615: u64 [a1 + 0x2c8] = a0\n 19619: a0 = s1 + 0x7ff\n 19623: a0 = a0 + 0x1b9\n 19627: u64 [a0 + 608] = 0\n 19631: a0 = s1 + 0x7ff\n 19635: a0 = a0 + 0x1b9\n 19639: u64 [a0 + 600] = 0\n 19643: a0 = s1 + 0x7ff\n 19647: a0 = a0 + 0x1b9\n 19651: u64 [a0 + 592] = 0\n 19655: a0 = s1 + 0x7ff\n 19659: a0 = a0 + 0x1b9\n 19663: u64 [a0 + 584] = 0\n 19667: a0 = s1 + 0x7ff\n 19671: a0 = a0 + 0x1b9\n 19675: u32 [a0 + 744] = 0x20\n 19680: a0 = s1 + 0x1000\n 19684: i32 a1 = a0 + 0xfffffffffffffc80\n 19688: a0 = s1 + 0x1000\n 19692: i32 a3 = a0 + 0xfffffffffffffc00\n 19696: a0 = s1 + 0x1000\n 19700: i32 a4 = a0 + 0xfffffffffffffca0\n 19704: a2 = 0xffffffffffffffff\n 19707: a0 = 0\n 19709: ecalli 5 // 'get_storage'\n 19711: a0 = s1 + 0x7ff\n 19715: a0 = a0 + 0x1b9\n 19719: a0 = u64 [a0 + 0x250]\n 19723: u64 [s1 + 0x1d8] = a0\n 19727: a0 = s1 + 0x7ff\n 19731: a0 = a0 + 0x1b9\n 19735: a0 = u64 [a0 + 0x248]\n 19739: u64 [s1 + 0x1b0] = a0\n 19743: a0 = s1 + 0x7ff\n 19747: a0 = a0 + 0x1b9\n 19751: a0 = u32 [a0 + 0x258]\n 19755: u64 [s1 + 0x1a8] = a0\n 19759: a0 = s1 + 0x1000\n 19763: i32 a0 = a0 + 0xfffffffffffffb40\n 19767: ecalli 3 // 'caller'\n 19769: fallthrough\n      : @343 (gas: 24)\n 19770: a5 = s1 + 0x7ff\n 19774: a5 = a5 + 0x1b9\n 19778: a0 = u64 [a5 + 0x190]\n 19782: a1 = u64 [a5 + 0x188]\n 19786: a2 = i32 [a5 + 0x198]\n 19790: a0 = reverse a0\n 19792: a3 = a0 >> 0x20\n 19795: a1 = reverse a1\n 19797: a4 = a1 << 0x20\n 19800: a3 = a3 | a4\n 19803: a0 = a0 << 0x20\n 19806: a2 = reverse a2\n 19808: a2 = a2 >> 0x20\n 19811: a0 = a0 | a2\n 19814: a1 = a1 >> 0x20\n 19817: a2 = u64 [s1 + 0x1a8]\n 19821: a1 = a1 ^ a2\n 19824: a2 = u64 [s1 + 0x1b0]\n 19828: a0 = a0 ^ a2\n 19831: a0 = a0 | a1\n 19834: a1 = u64 [s1 + 0x1d8]\n 19838: a1 = a1 ^ a3\n 19841: a0 = a0 | a1\n 19844: jump @376 if a0 != 0\n      : @344 (gas: 3)\n 19848: a1 = 0x20\n 19851: a0 = 0\n 19853: ra = 162, jump @0\n      : @345 [@dyn 81] (gas: 95)\n 19859: a3 = u64 [s1 + 0x1e0]\n 19863: u8 [a0 + 0x8] = a3\n 19866: a1 = u64 [s1 + 0x1e8]\n 19870: a2 = a1 >> 0x38\n 19873: u64 [s1 + 0x1b0] = a2\n 19877: u8 [a0 + 0x7] = a2\n 19880: a2 = a1 >> 0x30\n 19883: u64 [s1 + 0x1a8] = a2\n 19887: u8 [a0 + 0x6] = a2\n 19890: a2 = a1 >> 0x28\n 19893: u64 [s1 + 0x1a0] = a2\n 19897: u8 [a0 + 0x5] = a2\n 19900: a2 = a1 >> 0x20\n 19903: u64 [s1 + 0x198] = a2\n 19907: u8 [a0 + 0x4] = a2\n 19910: a2 = a1 >> 0x18\n 19913: u64 [s1 + 0x190] = a2\n 19917: u8 [a0 + 0x3] = a2\n 19920: a2 = a1 >> 0x10\n 19923: u64 [s1 + 0x188] = a2\n 19927: u8 [a0 + 0x2] = a2\n 19930: a2 = a1 >> 0x8\n 19933: u64 [s1 + 0x180] = a2\n 19937: u8 [a0 + 0x1] = a2\n 19940: u8 [a0] = a1\n 19942: a2 = u64 [s1 + 0x1f0]\n 19946: u8 [a0 + 0x10] = a2\n 19949: a1 = a3 >> 0x38\n 19952: u64 [s1 + 0x178] = a1\n 19956: u8 [a0 + 0xf] = a1\n 19959: a1 = a3 >> 0x30\n 19962: u64 [s1 + 0x170] = a1\n 19966: u8 [a0 + 0xe] = a1\n 19969: a1 = a3 >> 0x28\n 19972: u64 [s1 + 0x168] = a1\n 19976: u8 [a0 + 0xd] = a1\n 19979: a1 = a3 >> 0x20\n 19982: u64 [s1 + 0x160] = a1\n 19986: u8 [a0 + 0xc] = a1\n 19989: a1 = a3 >> 0x18\n 19992: u64 [s1 + 0x158] = a1\n 19996: u8 [a0 + 0xb] = a1\n 19999: a1 = a3 >> 0x10\n 20002: u64 [s1 + 0x150] = a1\n 20006: u8 [a0 + 0xa] = a1\n 20009: a3 = a3 >> 0x8\n 20012: u64 [s1 + 0x148] = a3\n 20016: u8 [a0 + 0x9] = a3\n 20019: a1 = u64 [s1 + 0x1f8]\n 20023: u8 [a0 + 0x18] = a1\n 20026: a3 = a2 >> 0x38\n 20029: u64 [s1 + 0x140] = a3\n 20033: u8 [a0 + 0x17] = a3\n 20036: a3 = a2 >> 0x30\n 20039: u64 [s1 + 0x138] = a3\n 20043: u8 [a0 + 0x16] = a3\n 20046: a3 = a2 >> 0x28\n 20049: u64 [s1 + 0x130] = a3\n 20053: u8 [a0 + 0x15] = a3\n 20056: a3 = a2 >> 0x20\n 20059: u64 [s1 + 0x128] = a3\n 20063: u8 [a0 + 0x14] = a3\n 20066: a3 = a2 >> 0x18\n 20069: u64 [s1 + 0x120] = a3\n 20073: u8 [a0 + 0x13] = a3\n 20076: a3 = a2 >> 0x10\n 20079: u64 [s1 + 0x118] = a3\n 20083: u8 [a0 + 0x12] = a3\n 20086: a2 = a2 >> 0x8\n 20089: u64 [s1 + 0x110] = a2\n 20093: u8 [a0 + 0x11] = a2\n 20096: a2 = a1 >> 0x38\n 20099: u64 [s1 + 0x108] = a2\n 20103: u8 [a0 + 0x1f] = a2\n 20106: a2 = a1 >> 0x30\n 20109: u64 [s1 + 0x100] = a2\n 20113: u8 [a0 + 0x1e] = a2\n 20116: a2 = a1 >> 0x28\n 20119: u64 [s1 + 0xf8] = a2\n 20123: u8 [a0 + 0x1d] = a2\n 20126: a2 = a1 >> 0x20\n 20129: u64 [s1 + 0xf0] = a2\n 20133: u8 [a0 + 0x1c] = a2\n 20136: a2 = a1 >> 0x18\n 20139: u64 [s1 + 0xe8] = a2\n 20143: u8 [a0 + 0x1b] = a2\n 20146: a2 = a1 >> 0x10\n 20149: u64 [s1 + 0xe0] = a2\n 20153: u8 [a0 + 0x1a] = a2\n 20156: a1 = a1 >> 0x8\n 20159: u64 [s1 + 0xd8] = a1\n 20163: u8 [a0 + 0x19] = a1\n 20166: a0 = 0x20\n 20169: a1 = 0x20\n 20172: ra = 164, jump @0\n      : @346 [@dyn 82] (gas: 35)\n 20178: u8 [a0 + 31] = 0x3\n 20182: u8 [a0 + 30] = 0\n 20185: u8 [a0 + 29] = 0\n 20188: u8 [a0 + 28] = 0\n 20191: u8 [a0 + 27] = 0\n 20194: u8 [a0 + 26] = 0\n 20197: u8 [a0 + 25] = 0\n 20200: u8 [a0 + 24] = 0\n 20203: u8 [a0 + 23] = 0\n 20206: u8 [a0 + 22] = 0\n 20209: u8 [a0 + 21] = 0\n 20212: u8 [a0 + 20] = 0\n 20215: u8 [a0 + 19] = 0\n 20218: u8 [a0 + 18] = 0\n 20221: u8 [a0 + 17] = 0\n 20224: u8 [a0 + 16] = 0\n 20227: u8 [a0 + 15] = 0\n 20230: u8 [a0 + 14] = 0\n 20233: u8 [a0 + 13] = 0\n 20236: u8 [a0 + 12] = 0\n 20239: u8 [a0 + 11] = 0\n 20242: u8 [a0 + 10] = 0\n 20245: u8 [a0 + 9] = 0\n 20248: u8 [a0 + 8] = 0\n 20251: u8 [a0 + 7] = 0\n 20254: u8 [a0 + 6] = 0\n 20257: u8 [a0 + 5] = 0\n 20260: u8 [a0 + 4] = 0\n 20263: u8 [a0 + 3] = 0\n 20266: u8 [a0 + 2] = 0\n 20269: u8 [a0 + 1] = 0\n 20272: u8 [a0 + 0] = 0\n 20274: a1 = 0x40\n 20277: a0 = 0\n 20279: ra = 166, jump @0\n      : @347 [@dyn 83] (gas: 38)\n 20285: a1 = sp + 0xffffffffffffffe0\n 20288: a1 = a1 & 0xffffffffffffffe0\n 20291: u64 [s1 + 0x1d8] = a1\n 20295: sp = a1\n 20297: i32 a0 = a0 + 0\n 20299: i32 a2 = a1 + 0\n 20301: a1 = 0x40\n 20304: ecalli 6 // 'hash_keccak_256'\n 20306: a3 = u64 [s1 + 0x1d8]\n 20310: a0 = u64 [a3 + 0x18]\n 20313: a1 = u64 [a3 + 0x10]\n 20316: a2 = u64 [a3 + 0x8]\n 20319: a3 = u64 [a3]\n 20321: a0 = reverse a0\n 20323: a1 = reverse a1\n 20325: a2 = reverse a2\n 20327: a3 = reverse a3\n 20329: a4 = s1 + 0x7ff\n 20333: a4 = a4 + 0x1b9\n 20337: u64 [a4 + 0x2e0] = a3\n 20341: u64 [a4 + 0x2d8] = a2\n 20345: u64 [a4 + 0x2d0] = a1\n 20349: u64 [a4 + 0x2c8] = a0\n 20353: u64 [a4 + 608] = 0\n 20357: u64 [a4 + 600] = 0\n 20361: u64 [a4 + 592] = 0\n 20365: u64 [a4 + 584] = 0\n 20369: u32 [a4 + 744] = 0x20\n 20374: a0 = s1 + 0x1000\n 20378: i32 a1 = a0 + 0xfffffffffffffc80\n 20382: a0 = s1 + 0x1000\n 20386: i32 a3 = a0 + 0xfffffffffffffc00\n 20390: a0 = s1 + 0x1000\n 20394: i32 a4 = a0 + 0xfffffffffffffca0\n 20398: a2 = 0xffffffffffffffff\n 20401: a0 = 0\n 20403: ecalli 5 // 'get_storage'\n 20405: fallthrough\n      : @348 (gas: 16)\n 20406: a2 = s1 + 0x7ff\n 20410: a2 = a2 + 0x1b9\n 20414: a0 = u32 [a2 + 0x258]\n 20418: a1 = u64 [a2 + 0x248]\n 20422: a2 = u64 [a2 + 0x250]\n 20426: a3 = u64 [s1 + 0x238]\n 20430: a0 = a0 ^ a3\n 20433: a4 = u64 [s1 + 0x230]\n 20437: a1 = a1 ^ a4\n 20440: a0 = a0 | a1\n 20443: a5 = u64 [s1 + 0x228]\n 20447: a1 = a2 ^ a5\n 20450: a2 = u64 [s1 + 0x200]\n 20454: a1 = a1 | a2\n 20457: a0 = a0 | a1\n 20460: jump @350 if a0 != 0\n      : @349 (gas: 1)\n 20463: jump @480\n      : @350 (gas: 3)\n 20466: a0 = 0x40\n 20469: a1 = 0x20\n 20472: ra = 168, jump @0\n      : @351 [@dyn 84] (gas: 100)\n 20478: a1 = u8 [a0 + 0x11]\n 20481: a2 = u8 [a0 + 0x10]\n 20484: a3 = u8 [a0 + 0x12]\n 20487: a4 = u8 [a0 + 0x13]\n 20490: a1 = a1 << 0x8\n 20493: a1 = a1 | a2\n 20496: a3 = a3 << 0x10\n 20499: a4 = a4 << 0x18\n 20502: a3 = a3 | a4\n 20505: a1 = a1 | a3\n 20508: a2 = u8 [a0 + 0x15]\n 20511: a3 = u8 [a0 + 0x14]\n 20514: a4 = u8 [a0 + 0x16]\n 20517: a5 = u8 [a0 + 0x17]\n 20520: a2 = a2 << 0x8\n 20523: a2 = a2 | a3\n 20526: a4 = a4 << 0x10\n 20529: a5 = a5 << 0x18\n 20532: a4 = a4 | a5\n 20535: a2 = a2 | a4\n 20538: a2 = a2 << 0x20\n 20541: t0 = a2 | a1\n 20544: a2 = u8 [a0 + 0x1]\n 20547: a3 = u8 [a0]\n 20549: a4 = u8 [a0 + 0x2]\n 20552: a5 = u8 [a0 + 0x3]\n 20555: a2 = a2 << 0x8\n 20558: a2 = a2 | a3\n 20561: a4 = a4 << 0x10\n 20564: a5 = a5 << 0x18\n 20567: a4 = a4 | a5\n 20570: a2 = a2 | a4\n 20573: a3 = u8 [a0 + 0x5]\n 20576: a4 = u8 [a0 + 0x4]\n 20579: a5 = u8 [a0 + 0x6]\n 20582: a1 = u8 [a0 + 0x7]\n 20585: a3 = a3 << 0x8\n 20588: a3 = a3 | a4\n 20591: a5 = a5 << 0x10\n 20594: a1 = a1 << 0x18\n 20597: a1 = a1 | a5\n 20600: a1 = a1 | a3\n 20603: a1 = a1 << 0x20\n 20606: t1 = a1 | a2\n 20609: a1 = u8 [a0 + 0x19]\n 20612: a3 = u8 [a0 + 0x18]\n 20615: a4 = u8 [a0 + 0x1a]\n 20618: a5 = u8 [a0 + 0x1b]\n 20621: a1 = a1 << 0x8\n 20624: a1 = a1 | a3\n 20627: a4 = a4 << 0x10\n 20630: a5 = a5 << 0x18\n 20633: a4 = a4 | a5\n 20636: a1 = a1 | a4\n 20639: a3 = u8 [a0 + 0x1d]\n 20642: a4 = u8 [a0 + 0x1c]\n 20645: a5 = u8 [a0 + 0x1e]\n 20648: a2 = u8 [a0 + 0x1f]\n 20651: a3 = a3 << 0x8\n 20654: a3 = a3 | a4\n 20657: a5 = a5 << 0x10\n 20660: a2 = a2 << 0x18\n 20663: a2 = a2 | a5\n 20666: a2 = a2 | a3\n 20669: a2 = a2 << 0x20\n 20672: a3 = a2 | a1\n 20675: a1 = u8 [a0 + 0x9]\n 20678: a2 = u8 [a0 + 0x8]\n 20681: a4 = u8 [a0 + 0xa]\n 20684: a5 = u8 [a0 + 0xb]\n 20687: a1 = a1 << 0x8\n 20690: a1 = a1 | a2\n 20693: a4 = a4 << 0x10\n 20696: a5 = a5 << 0x18\n 20699: a4 = a4 | a5\n 20702: a1 = a1 | a4\n 20705: a2 = u8 [a0 + 0xd]\n 20708: a4 = u8 [a0 + 0xc]\n 20711: a5 = u8 [a0 + 0xe]\n 20714: a0 = u8 [a0 + 0xf]\n 20717: a2 = a2 << 0x8\n 20720: a2 = a2 | a4\n 20723: a5 = a5 << 0x10\n 20726: a0 = a0 << 0x18\n 20729: a0 = a0 | a5\n 20732: a0 = a0 | a2\n 20735: a0 = a0 << 0x20\n 20738: a0 = a0 | a1\n 20741: a4 = reverse a0\n 20743: a2 = reverse a3\n 20745: a5 = reverse t1\n 20747: a3 = reverse t0\n 20749: a0 = a3 | a5\n 20752: a1 = a2 | a4\n 20755: a1 = a1 | a0\n 20758: a1 = a1 >> 0x20\n 20761: a0 = a0 | a4\n 20764: a0 = a0 << 0x20\n 20767: a0 = a0 | a1\n 20770: jump @353 if a0 == 0\n      : @352 (gas: 1)\n 20773: jump @309\n      : @353 (gas: 8)\n 20776: i32 a0 = a2 + 0\n 20778: a1 = 0x20\n 20781: u64 [s1 + 0x218] = a0\n 20785: u64 [s1 + 0x238] = a2\n 20789: u64 [s1 + 0x230] = a3\n 20793: u64 [s1 + 0x228] = a4\n 20797: u64 [s1 + 0x220] = a5\n 20801: ra = 170, jump @0\n      : @354 [@dyn 85] (gas: 43)\n 20807: u8 [a0 + 31] = 0\n 20810: u8 [a0 + 30] = 0\n 20813: u8 [a0 + 29] = 0\n 20816: u8 [a0 + 28] = 0\n 20819: u8 [a0 + 27] = 0\n 20822: u8 [a0 + 26] = 0\n 20825: u8 [a0 + 25] = 0\n 20828: u8 [a0 + 24] = 0\n 20831: u8 [a0 + 23] = 0\n 20834: u8 [a0 + 22] = 0\n 20837: u8 [a0 + 21] = 0\n 20840: u8 [a0 + 20] = 0\n 20843: u8 [a0 + 19] = 0\n 20846: u8 [a0 + 18] = 0\n 20849: u8 [a0 + 17] = 0\n 20852: u8 [a0 + 16] = 0\n 20855: u8 [a0 + 15] = 0\n 20858: u8 [a0 + 14] = 0\n 20861: u8 [a0 + 13] = 0\n 20864: u8 [a0 + 12] = 0\n 20867: u8 [a0 + 11] = 0\n 20870: u8 [a0 + 10] = 0\n 20873: u8 [a0 + 9] = 0\n 20876: u8 [a0 + 8] = 0\n 20879: u8 [a0 + 7] = 0\n 20882: u8 [a0 + 6] = 0\n 20885: u8 [a0 + 5] = 0\n 20888: u8 [a0 + 3] = 0xa0\n 20893: u8 [a0 + 2] = 0x79\n 20897: u8 [a0 + 1] = 0xc3\n 20902: u8 [a0 + 0] = 0x8\n 20905: a1 = u64 [s1 + 0x228]\n 20909: a3 = u64 [s1 + 0x220]\n 20913: a3 = a3 | a1\n 20916: a4 = 0x100000000\n 20926: a1 = 0xfffffffc\n 20936: a2 = u64 [s1 + 0x238]\n 20940: a1 = a2 <u a1\n 20943: a2 = u64 [s1 + 0x230]\n 20947: a1 = 0 if a2 != 0\n 20949: a1 = 0 if a3 != 0\n 20951: u8 [a0 + 4] = 0\n 20954: jump @356 if a1 != 0\n      : @355 (gas: 1)\n 20957: jump @309\n      : @356 (gas: 6)\n 20960: a0 = u64 [s1 + 0x218]\n 20964: i32 a0 = a0 + 0x4\n 20967: a1 = 0x20\n 20970: u64 [s1 + 0x228] = a3\n 20974: u64 [s1 + 0x220] = a4\n 20978: ra = 172, jump @0\n      : @357 [@dyn 86] (gas: 41)\n 20984: a4 = u64 [s1 + 0x228]\n 20988: a3 = u64 [s1 + 0x230]\n 20992: a2 = u64 [s1 + 0x238]\n 20996: u8 [a0 + 31] = 0x20\n 21000: u8 [a0 + 30] = 0\n 21003: u8 [a0 + 29] = 0\n 21006: u8 [a0 + 28] = 0\n 21009: u8 [a0 + 27] = 0\n 21012: u8 [a0 + 26] = 0\n 21015: u8 [a0 + 25] = 0\n 21018: u8 [a0 + 24] = 0\n 21021: u8 [a0 + 23] = 0\n 21024: u8 [a0 + 22] = 0\n 21027: u8 [a0 + 21] = 0\n 21030: u8 [a0 + 20] = 0\n 21033: u8 [a0 + 19] = 0\n 21036: u8 [a0 + 18] = 0\n 21039: u8 [a0 + 17] = 0\n 21042: u8 [a0 + 16] = 0\n 21045: u8 [a0 + 15] = 0\n 21048: u8 [a0 + 14] = 0\n 21051: u8 [a0 + 13] = 0\n 21054: u8 [a0 + 12] = 0\n 21057: u8 [a0 + 11] = 0\n 21060: u8 [a0 + 10] = 0\n 21063: u8 [a0 + 9] = 0\n 21066: u8 [a0 + 8] = 0\n 21069: u8 [a0 + 7] = 0\n 21072: u8 [a0 + 6] = 0\n 21075: u8 [a0 + 5] = 0\n 21078: u8 [a0 + 4] = 0\n 21081: u8 [a0 + 3] = 0\n 21084: u8 [a0 + 2] = 0\n 21087: u8 [a0 + 1] = 0\n 21090: a1 = u64 [s1 + 0x220]\n 21094: a1 = a1 + 0xffffffffffffffdc\n 21097: a1 = a2 <u a1\n 21100: a1 = 0 if a3 != 0\n 21102: a1 = 0 if a4 != 0\n 21104: u8 [a0 + 0] = 0\n 21106: jump @359 if a1 != 0\n      : @358 (gas: 1)\n 21109: jump @309\n      : @359 (gas: 4)\n 21112: a0 = u64 [s1 + 0x218]\n 21116: i32 a0 = a0 + 0x24\n 21119: a1 = 0x20\n 21122: ra = 174, jump @0\n      : @360 [@dyn 87] (gas: 40)\n 21128: u8 [a0 + 31] = 0xd\n 21132: u8 [a0 + 30] = 0\n 21135: u8 [a0 + 29] = 0\n 21138: u8 [a0 + 28] = 0\n 21141: u8 [a0 + 27] = 0\n 21144: u8 [a0 + 26] = 0\n 21147: u8 [a0 + 25] = 0\n 21150: u8 [a0 + 24] = 0\n 21153: u8 [a0 + 23] = 0\n 21156: u8 [a0 + 22] = 0\n 21159: u8 [a0 + 21] = 0\n 21162: u8 [a0 + 20] = 0\n 21165: u8 [a0 + 19] = 0\n 21168: u8 [a0 + 18] = 0\n 21171: u8 [a0 + 17] = 0\n 21174: u8 [a0 + 16] = 0\n 21177: u8 [a0 + 15] = 0\n 21180: u8 [a0 + 14] = 0\n 21183: u8 [a0 + 13] = 0\n 21186: u8 [a0 + 12] = 0\n 21189: u8 [a0 + 11] = 0\n 21192: u8 [a0 + 10] = 0\n 21195: u8 [a0 + 9] = 0\n 21198: u8 [a0 + 8] = 0\n 21201: u8 [a0 + 7] = 0\n 21204: u8 [a0 + 6] = 0\n 21207: u8 [a0 + 5] = 0\n 21210: u8 [a0 + 4] = 0\n 21213: u8 [a0 + 3] = 0\n 21216: u8 [a0 + 2] = 0\n 21219: u8 [a0 + 1] = 0\n 21222: a1 = 0xffffffbc\n 21232: a2 = u64 [s1 + 0x238]\n 21236: a1 = a2 <u a1\n 21239: a2 = u64 [s1 + 0x230]\n 21243: a1 = 0 if a2 != 0\n 21245: a2 = u64 [s1 + 0x228]\n 21249: a1 = 0 if a2 != 0\n 21251: u8 [a0 + 0] = 0\n 21253: jump @362 if a1 != 0\n      : @361 (gas: 1)\n 21256: jump @309\n      : @362 (gas: 4)\n 21259: a0 = u64 [s1 + 0x218]\n 21263: i32 a0 = a0 + 0x44\n 21266: a1 = 0x20\n 21269: ra = 176, jump @0\n      : @363 [@dyn 88] (gas: 33)\n 21275: u8 [a0 + 31] = 0\n 21278: u8 [a0 + 30] = 0\n 21281: u8 [a0 + 29] = 0\n 21284: u8 [a0 + 28] = 0\n 21287: u8 [a0 + 27] = 0\n 21290: u8 [a0 + 26] = 0\n 21293: u8 [a0 + 25] = 0\n 21296: u8 [a0 + 24] = 0\n 21299: u8 [a0 + 23] = 0\n 21302: u8 [a0 + 22] = 0\n 21305: u8 [a0 + 21] = 0\n 21308: u8 [a0 + 20] = 0\n 21311: u8 [a0 + 19] = 0\n 21314: u8 [a0 + 18] = 0\n 21317: u8 [a0 + 17] = 0\n 21320: u8 [a0 + 16] = 0\n 21323: u8 [a0 + 15] = 0\n 21326: u8 [a0 + 14] = 0\n 21329: u8 [a0 + 13] = 0\n 21332: u8 [a0 + 12] = 0x72\n 21336: u8 [a0 + 11] = 0x65\n 21340: u8 [a0 + 10] = 0x6e\n 21344: u8 [a0 + 9] = 0x77\n 21348: u8 [a0 + 8] = 0x6f\n 21352: u8 [a0 + 7] = 0x20\n 21356: u8 [a0 + 6] = 0x64\n 21360: u8 [a0 + 5] = 0x69\n 21364: u8 [a0 + 4] = 0x6c\n 21368: u8 [a0 + 3] = 0x61\n 21372: u8 [a0 + 2] = 0x76\n 21376: u8 [a0 + 1] = 0x6e\n 21380: a1 = 0x49\n 21383: fallthrough\n      : @364 (gas: 4)\n 21384: u8 [a0] = a1\n 21386: a1 = 0x64\n 21389: a0 = u64 [s1 + 0x218]\n 21393: ra = 178, jump @0\n      : @365 [@dyn 89] (gas: 5)\n 21399: i32 a1 = a0 + 0\n 21401: a0 = 0x1\n 21404: a2 = 0x64\n 21407: ecalli 7 // 'seal_return'\n 21409: fallthrough\n      : @366 (gas: 3)\n 21410: a1 = 0x20\n 21413: a0 = 0\n 21415: ra = 180, jump @0\n      : @367 [@dyn 90] (gas: 35)\n 21421: u8 [a0 + 31] = 0x1\n 21425: u8 [a0 + 30] = 0\n 21428: u8 [a0 + 29] = 0\n 21431: u8 [a0 + 28] = 0\n 21434: u8 [a0 + 27] = 0\n 21437: u8 [a0 + 26] = 0\n 21440: u8 [a0 + 25] = 0\n 21443: u8 [a0 + 24] = 0\n 21446: u8 [a0 + 23] = 0\n 21449: u8 [a0 + 22] = 0\n 21452: u8 [a0 + 21] = 0\n 21455: u8 [a0 + 20] = 0\n 21458: u8 [a0 + 19] = 0\n 21461: u8 [a0 + 18] = 0\n 21464: u8 [a0 + 17] = 0\n 21467: u8 [a0 + 16] = 0\n 21470: u8 [a0 + 15] = 0\n 21473: u8 [a0 + 14] = 0\n 21476: u8 [a0 + 13] = 0\n 21479: u8 [a0 + 12] = 0\n 21482: u8 [a0 + 11] = 0\n 21485: u8 [a0 + 10] = 0\n 21488: u8 [a0 + 9] = 0\n 21491: u8 [a0 + 8] = 0\n 21494: u8 [a0 + 7] = 0\n 21497: u8 [a0 + 6] = 0\n 21500: u8 [a0 + 5] = 0\n 21503: u8 [a0 + 4] = 0\n 21506: u8 [a0 + 3] = 0\n 21509: u8 [a0 + 2] = 0\n 21512: u8 [a0 + 1] = 0\n 21515: u8 [a0 + 0] = 0\n 21517: a1 = 0x20\n 21520: a0 = 0\n 21522: ra = 182, jump @0\n      : @368 [@dyn 91] (gas: 9)\n 21528: a1 = sp + 0xffffffffffffffe0\n 21531: a1 = a1 & 0xffffffffffffffe0\n 21534: sp = a1\n 21536: i32 a0 = a0 + 0\n 21538: u64 [s1 + 0x218] = a1\n 21542: i32 a2 = a1 + 0\n 21544: a1 = 0x20\n 21547: ecalli 6 // 'hash_keccak_256'\n 21549: fallthrough\n      : @369 (gas: 9)\n 21550: a0 = u64 [s1 + 0x110]\n 21554: a0 = a0 <u 0x2\n 21557: a1 = u64 [s1 + 0x220]\n 21561: a0 = 0 if a1 != 0\n 21563: a1 = u64 [s1 + 0x230]\n 21567: a2 = u64 [s1 + 0x228]\n 21571: a1 = a1 | a2\n 21574: a0 = 0 if a1 != 0\n 21576: jump @390 if a0 == 0\n      : @370 (gas: 5)\n 21580: ra = 0\n 21582: t0 = 0\n 21584: t1 = 0\n 21586: u64 [s1 + 568] = 0\n 21590: jump @396\n      : @371 (gas: 3)\n 21593: a1 = 0x20\n 21596: a0 = 0\n 21598: ra = 184, jump @0\n      : @372 [@dyn 92] (gas: 35)\n 21604: u8 [a0 + 31] = 0\n 21607: u8 [a0 + 30] = 0\n 21610: u8 [a0 + 29] = 0\n 21613: u8 [a0 + 28] = 0\n 21616: u8 [a0 + 27] = 0\n 21619: u8 [a0 + 26] = 0\n 21622: u8 [a0 + 25] = 0\n 21625: u8 [a0 + 24] = 0\n 21628: u8 [a0 + 23] = 0\n 21631: u8 [a0 + 22] = 0\n 21634: u8 [a0 + 21] = 0\n 21637: u8 [a0 + 20] = 0\n 21640: u8 [a0 + 19] = 0\n 21643: u8 [a0 + 18] = 0\n 21646: u8 [a0 + 17] = 0\n 21649: u8 [a0 + 16] = 0\n 21652: u8 [a0 + 15] = 0\n 21655: u8 [a0 + 14] = 0\n 21658: u8 [a0 + 13] = 0\n 21661: u8 [a0 + 12] = 0\n 21664: u8 [a0 + 11] = 0\n 21667: u8 [a0 + 10] = 0\n 21670: u8 [a0 + 9] = 0\n 21673: u8 [a0 + 8] = 0\n 21676: u8 [a0 + 7] = 0\n 21679: u8 [a0 + 6] = 0\n 21682: u8 [a0 + 5] = 0\n 21685: u8 [a0 + 4] = 0\n 21688: u8 [a0 + 3] = 0\n 21691: u8 [a0 + 2] = 0\n 21694: u8 [a0 + 1] = 0\n 21697: u8 [a0 + 0] = 0\n 21699: a1 = 0x20\n 21702: a0 = 0\n 21704: ra = 186, jump @0\n      : @373 [@dyn 93] (gas: 9)\n 21710: a1 = sp + 0xffffffffffffffe0\n 21713: a1 = a1 & 0xffffffffffffffe0\n 21716: sp = a1\n 21718: i32 a0 = a0 + 0\n 21720: u64 [s1 + 0x218] = a1\n 21724: i32 a2 = a1 + 0\n 21726: a1 = 0x20\n 21729: ecalli 6 // 'hash_keccak_256'\n 21731: fallthrough\n      : @374 (gas: 9)\n 21732: a0 = u64 [s1 + 0x110]\n 21736: a0 = a0 <u 0x2\n 21739: a1 = u64 [s1 + 0x220]\n 21743: a0 = 0 if a1 != 0\n 21745: a1 = u64 [s1 + 0x230]\n 21749: a2 = u64 [s1 + 0x228]\n 21753: a1 = a1 | a2\n 21756: a0 = 0 if a1 != 0\n 21758: jump @406 if a0 == 0\n      : @375 (gas: 5)\n 21762: ra = 0\n 21764: t0 = 0\n 21766: t1 = 0\n 21768: u64 [s1 + 568] = 0\n 21772: jump @412\n      : @376 (gas: 3)\n 21775: a0 = 0x40\n 21778: a1 = 0x20\n 21781: ra = 188, jump @0\n      : @377 [@dyn 94] (gas: 100)\n 21787: a1 = u8 [a0 + 0x11]\n 21790: a2 = u8 [a0 + 0x10]\n 21793: a3 = u8 [a0 + 0x12]\n 21796: a4 = u8 [a0 + 0x13]\n 21799: a1 = a1 << 0x8\n 21802: a1 = a1 | a2\n 21805: a3 = a3 << 0x10\n 21808: a4 = a4 << 0x18\n 21811: a3 = a3 | a4\n 21814: a1 = a1 | a3\n 21817: a2 = u8 [a0 + 0x15]\n 21820: a3 = u8 [a0 + 0x14]\n 21823: a4 = u8 [a0 + 0x16]\n 21826: a5 = u8 [a0 + 0x17]\n 21829: a2 = a2 << 0x8\n 21832: a2 = a2 | a3\n 21835: a4 = a4 << 0x10\n 21838: a5 = a5 << 0x18\n 21841: a4 = a4 | a5\n 21844: a2 = a2 | a4\n 21847: a2 = a2 << 0x20\n 21850: t0 = a2 | a1\n 21853: a2 = u8 [a0 + 0x1]\n 21856: a3 = u8 [a0]\n 21858: a4 = u8 [a0 + 0x2]\n 21861: a5 = u8 [a0 + 0x3]\n 21864: a2 = a2 << 0x8\n 21867: a2 = a2 | a3\n 21870: a4 = a4 << 0x10\n 21873: a5 = a5 << 0x18\n 21876: a4 = a4 | a5\n 21879: a2 = a2 | a4\n 21882: a3 = u8 [a0 + 0x5]\n 21885: a4 = u8 [a0 + 0x4]\n 21888: a5 = u8 [a0 + 0x6]\n 21891: a1 = u8 [a0 + 0x7]\n 21894: a3 = a3 << 0x8\n 21897: a3 = a3 | a4\n 21900: a5 = a5 << 0x10\n 21903: a1 = a1 << 0x18\n 21906: a1 = a1 | a5\n 21909: a1 = a1 | a3\n 21912: a1 = a1 << 0x20\n 21915: t1 = a1 | a2\n 21918: a1 = u8 [a0 + 0x19]\n 21921: a3 = u8 [a0 + 0x18]\n 21924: a4 = u8 [a0 + 0x1a]\n 21927: a5 = u8 [a0 + 0x1b]\n 21930: a1 = a1 << 0x8\n 21933: a1 = a1 | a3\n 21936: a4 = a4 << 0x10\n 21939: a5 = a5 << 0x18\n 21942: a4 = a4 | a5\n 21945: a1 = a1 | a4\n 21948: a3 = u8 [a0 + 0x1d]\n 21951: a4 = u8 [a0 + 0x1c]\n 21954: a5 = u8 [a0 + 0x1e]\n 21957: a2 = u8 [a0 + 0x1f]\n 21960: a3 = a3 << 0x8\n 21963: a3 = a3 | a4\n 21966: a5 = a5 << 0x10\n 21969: a2 = a2 << 0x18\n 21972: a2 = a2 | a5\n 21975: a2 = a2 | a3\n 21978: a2 = a2 << 0x20\n 21981: a3 = a2 | a1\n 21984: a1 = u8 [a0 + 0x9]\n 21987: a2 = u8 [a0 + 0x8]\n 21990: a4 = u8 [a0 + 0xa]\n 21993: a5 = u8 [a0 + 0xb]\n 21996: a1 = a1 << 0x8\n 21999: a1 = a1 | a2\n 22002: a4 = a4 << 0x10\n 22005: a5 = a5 << 0x18\n 22008: a4 = a4 | a5\n 22011: a1 = a1 | a4\n 22014: a2 = u8 [a0 + 0xd]\n 22017: a4 = u8 [a0 + 0xc]\n 22020: a5 = u8 [a0 + 0xe]\n 22023: a0 = u8 [a0 + 0xf]\n 22026: a2 = a2 << 0x8\n 22029: a2 = a2 | a4\n 22032: a5 = a5 << 0x10\n 22035: a0 = a0 << 0x18\n 22038: a0 = a0 | a5\n 22041: a0 = a0 | a2\n 22044: a0 = a0 << 0x20\n 22047: a0 = a0 | a1\n 22050: a4 = reverse a0\n 22052: a2 = reverse a3\n 22054: a5 = reverse t1\n 22056: a3 = reverse t0\n 22058: a0 = a3 | a5\n 22061: a1 = a2 | a4\n 22064: a1 = a1 | a0\n 22067: a1 = a1 >> 0x20\n 22070: a0 = a0 | a4\n 22073: a0 = a0 << 0x20\n 22076: a0 = a0 | a1\n 22079: jump @379 if a0 == 0\n      : @378 (gas: 1)\n 22082: jump @309\n      : @379 (gas: 8)\n 22085: i32 a0 = a2 + 0\n 22087: a1 = 0x20\n 22090: u64 [s1 + 0x218] = a0\n 22094: u64 [s1 + 0x238] = a2\n 22098: u64 [s1 + 0x230] = a3\n 22102: u64 [s1 + 0x228] = a4\n 22106: u64 [s1 + 0x220] = a5\n 22110: ra = 190, jump @0\n      : @380 [@dyn 95] (gas: 43)\n 22116: u8 [a0 + 31] = 0\n 22119: u8 [a0 + 30] = 0\n 22122: u8 [a0 + 29] = 0\n 22125: u8 [a0 + 28] = 0\n 22128: u8 [a0 + 27] = 0\n 22131: u8 [a0 + 26] = 0\n 22134: u8 [a0 + 25] = 0\n 22137: u8 [a0 + 24] = 0\n 22140: u8 [a0 + 23] = 0\n 22143: u8 [a0 + 22] = 0\n 22146: u8 [a0 + 21] = 0\n 22149: u8 [a0 + 20] = 0\n 22152: u8 [a0 + 19] = 0\n 22155: u8 [a0 + 18] = 0\n 22158: u8 [a0 + 17] = 0\n 22161: u8 [a0 + 16] = 0\n 22164: u8 [a0 + 15] = 0\n 22167: u8 [a0 + 14] = 0\n 22170: u8 [a0 + 13] = 0\n 22173: u8 [a0 + 12] = 0\n 22176: u8 [a0 + 11] = 0\n 22179: u8 [a0 + 10] = 0\n 22182: u8 [a0 + 9] = 0\n 22185: u8 [a0 + 8] = 0\n 22188: u8 [a0 + 7] = 0\n 22191: u8 [a0 + 6] = 0\n 22194: u8 [a0 + 5] = 0\n 22197: u8 [a0 + 3] = 0xa0\n 22202: u8 [a0 + 2] = 0x79\n 22206: u8 [a0 + 1] = 0xc3\n 22211: u8 [a0 + 0] = 0x8\n 22214: a1 = u64 [s1 + 0x228]\n 22218: a3 = u64 [s1 + 0x220]\n 22222: a3 = a3 | a1\n 22225: a4 = 0x100000000\n 22235: a1 = 0xfffffffc\n 22245: a2 = u64 [s1 + 0x238]\n 22249: a1 = a2 <u a1\n 22252: a2 = u64 [s1 + 0x230]\n 22256: a1 = 0 if a2 != 0\n 22258: a1 = 0 if a3 != 0\n 22260: u8 [a0 + 4] = 0\n 22263: jump @382 if a1 != 0\n      : @381 (gas: 1)\n 22266: jump @309\n      : @382 (gas: 6)\n 22269: a0 = u64 [s1 + 0x218]\n 22273: i32 a0 = a0 + 0x4\n 22276: a1 = 0x20\n 22279: u64 [s1 + 0x228] = a3\n 22283: u64 [s1 + 0x220] = a4\n 22287: ra = 192, jump @0\n      : @383 [@dyn 96] (gas: 41)\n 22293: a4 = u64 [s1 + 0x228]\n 22297: a3 = u64 [s1 + 0x230]\n 22301: a2 = u64 [s1 + 0x238]\n 22305: u8 [a0 + 31] = 0x20\n 22309: u8 [a0 + 30] = 0\n 22312: u8 [a0 + 29] = 0\n 22315: u8 [a0 + 28] = 0\n 22318: u8 [a0 + 27] = 0\n 22321: u8 [a0 + 26] = 0\n 22324: u8 [a0 + 25] = 0\n 22327: u8 [a0 + 24] = 0\n 22330: u8 [a0 + 23] = 0\n 22333: u8 [a0 + 22] = 0\n 22336: u8 [a0 + 21] = 0\n 22339: u8 [a0 + 20] = 0\n 22342: u8 [a0 + 19] = 0\n 22345: u8 [a0 + 18] = 0\n 22348: u8 [a0 + 17] = 0\n 22351: u8 [a0 + 16] = 0\n 22354: u8 [a0 + 15] = 0\n 22357: u8 [a0 + 14] = 0\n 22360: u8 [a0 + 13] = 0\n 22363: u8 [a0 + 12] = 0\n 22366: u8 [a0 + 11] = 0\n 22369: u8 [a0 + 10] = 0\n 22372: u8 [a0 + 9] = 0\n 22375: u8 [a0 + 8] = 0\n 22378: u8 [a0 + 7] = 0\n 22381: u8 [a0 + 6] = 0\n 22384: u8 [a0 + 5] = 0\n 22387: u8 [a0 + 4] = 0\n 22390: u8 [a0 + 3] = 0\n 22393: u8 [a0 + 2] = 0\n 22396: u8 [a0 + 1] = 0\n 22399: a1 = u64 [s1 + 0x220]\n 22403: a1 = a1 + 0xffffffffffffffdc\n 22406: a1 = a2 <u a1\n 22409: a1 = 0 if a3 != 0\n 22411: a1 = 0 if a4 != 0\n 22413: u8 [a0 + 0] = 0\n 22415: jump @385 if a1 != 0\n      : @384 (gas: 1)\n 22418: jump @309\n      : @385 (gas: 4)\n 22421: a0 = u64 [s1 + 0x218]\n 22425: i32 a0 = a0 + 0x24\n 22428: a1 = 0x20\n 22431: ra = 194, jump @0\n      : @386 [@dyn 97] (gas: 40)\n 22437: u8 [a0 + 31] = 0xb\n 22441: u8 [a0 + 30] = 0\n 22444: u8 [a0 + 29] = 0\n 22447: u8 [a0 + 28] = 0\n 22450: u8 [a0 + 27] = 0\n 22453: u8 [a0 + 26] = 0\n 22456: u8 [a0 + 25] = 0\n 22459: u8 [a0 + 24] = 0\n 22462: u8 [a0 + 23] = 0\n 22465: u8 [a0 + 22] = 0\n 22468: u8 [a0 + 21] = 0\n 22471: u8 [a0 + 20] = 0\n 22474: u8 [a0 + 19] = 0\n 22477: u8 [a0 + 18] = 0\n 22480: u8 [a0 + 17] = 0\n 22483: u8 [a0 + 16] = 0\n 22486: u8 [a0 + 15] = 0\n 22489: u8 [a0 + 14] = 0\n 22492: u8 [a0 + 13] = 0\n 22495: u8 [a0 + 12] = 0\n 22498: u8 [a0 + 11] = 0\n 22501: u8 [a0 + 10] = 0\n 22504: u8 [a0 + 9] = 0\n 22507: u8 [a0 + 8] = 0\n 22510: u8 [a0 + 7] = 0\n 22513: u8 [a0 + 6] = 0\n 22516: u8 [a0 + 5] = 0\n 22519: u8 [a0 + 4] = 0\n 22522: u8 [a0 + 3] = 0\n 22525: u8 [a0 + 2] = 0\n 22528: u8 [a0 + 1] = 0\n 22531: a1 = 0xffffffbc\n 22541: a2 = u64 [s1 + 0x238]\n 22545: a1 = a2 <u a1\n 22548: a2 = u64 [s1 + 0x230]\n 22552: a1 = 0 if a2 != 0\n 22554: a2 = u64 [s1 + 0x228]\n 22558: a1 = 0 if a2 != 0\n 22560: u8 [a0 + 0] = 0\n 22562: jump @388 if a1 != 0\n      : @387 (gas: 1)\n 22565: jump @309\n      : @388 (gas: 4)\n 22568: a0 = u64 [s1 + 0x218]\n 22572: i32 a0 = a0 + 0x44\n 22575: a1 = 0x20\n 22578: ra = 196, jump @0\n      : @389 [@dyn 98] (gas: 30)\n 22584: u8 [a0 + 31] = 0\n 22587: u8 [a0 + 30] = 0\n 22590: u8 [a0 + 29] = 0\n 22593: u8 [a0 + 28] = 0\n 22596: u8 [a0 + 27] = 0\n 22599: u8 [a0 + 26] = 0\n 22602: u8 [a0 + 25] = 0\n 22605: u8 [a0 + 24] = 0\n 22608: u8 [a0 + 23] = 0\n 22611: u8 [a0 + 22] = 0\n 22614: u8 [a0 + 21] = 0\n 22617: u8 [a0 + 20] = 0\n 22620: u8 [a0 + 19] = 0\n 22623: u8 [a0 + 18] = 0\n 22626: u8 [a0 + 17] = 0\n 22629: u8 [a0 + 16] = 0\n 22632: u8 [a0 + 15] = 0\n 22635: u8 [a0 + 14] = 0\n 22638: u8 [a0 + 13] = 0\n 22641: u8 [a0 + 12] = 0\n 22644: u8 [a0 + 11] = 0\n 22647: u8 [a0 + 10] = 0x64\n 22651: u8 [a0 + 9] = 0x65\n 22655: u8 [a0 + 8] = 0x77\n 22659: u8 [a0 + 7] = 0x6f\n 22663: u8 [a0 + 6] = 0x6c\n 22667: u8 [a0 + 5] = 0x6c\n 22671: u8 [a0 + 4] = 0x61\n 22675: u8 [a0 + 3] = 0x20\n 22679: jump @338\n      : @390 (gas: 33)\n 22682: u64 [s1 + 552] = 0\n 22686: u64 [s1 + 544] = 0\n 22690: u64 [s1 + 560] = 0\n 22694: u64 [s1 + 568] = 0\n 22698: a0 = u64 [s1 + 0x218]\n 22702: a4 = u64 [a0]\n 22704: a1 = u64 [s1 + 0x190]\n 22708: a2 = a1 + 0x20\n 22711: u64 [s1 + 0x1b8] = a2\n 22715: a1 = a2 <u a1\n 22718: a2 = u64 [s1 + 0x188]\n 22722: a3 = a2 + a1\n 22725: u64 [s1 + 0x1b0] = a3\n 22729: a3 = a3 <u a2\n 22732: a3 = a1 if a1 == 0\n 22735: a1 = u64 [a0 + 0x8]\n 22738: a2 = u64 [a0 + 0x10]\n 22741: a0 = u64 [a0 + 0x18]\n 22744: a5 = reverse a4\n 22746: a4 = reverse a1\n 22748: a2 = reverse a2\n 22750: t2 = reverse a0\n 22752: a0 = u64 [s1 + 0x180]\n 22756: a3 = a3 + a0\n 22759: u64 [s1 + 0x1a8] = a3\n 22763: a0 = a3 <u a0\n 22766: a1 = u64 [s1 + 0x178]\n 22770: a0 = a0 + a1\n 22773: u64 [s1 + 0x1a0] = a0\n 22777: a0 = s1 + 0x1000\n 22781: i32 a0 = a0 + 0xfffffffffffffc80\n 22785: u64 [s1 + 0x198] = a0\n 22789: fallthrough\n      : @391 (gas: 24)\n 22790: a1 = s1 + 0x7ff\n 22794: a1 = a1 + 0x1b9\n 22798: u64 [s1 + 0x200] = a4\n 22802: u64 [a1 + 0x2d8] = a4\n 22806: u64 [s1 + 0x210] = a2\n 22810: u64 [a1 + 0x2d0] = a2\n 22814: u64 [s1 + 0x208] = t2\n 22818: u64 [a1 + 0x2c8] = t2\n 22822: u64 [s1 + 0x218] = a5\n 22826: u64 [a1 + 0x2e0] = a5\n 22830: u64 [a1 + 608] = 0\n 22834: u64 [a1 + 600] = 0\n 22838: u64 [a1 + 592] = 0\n 22842: u64 [a1 + 584] = 0\n 22846: u32 [a1 + 744] = 0x20\n 22851: a0 = s1 + 0x1000\n 22855: i32 a3 = a0 + 0xfffffffffffffc00\n 22859: a0 = s1 + 0x1000\n 22863: i32 a4 = a0 + 0xfffffffffffffca0\n 22867: a2 = 0xffffffffffffffff\n 22870: a0 = 0\n 22872: a1 = u64 [s1 + 0x198]\n 22876: ecalli 5 // 'get_storage'\n 22878: fallthrough\n      : @392 (gas: 30)\n 22879: a1 = u64 [s1 + 0x1b8]\n 22883: a0 = u64 [s1 + 0x228]\n 22887: a0 = a0 + a1\n 22890: a1 = a0 <u a1\n 22893: a4 = u64 [s1 + 0x1b0]\n 22897: a2 = u64 [s1 + 0x220]\n 22901: a2 = a2 + a4\n 22904: a2 = a2 + a1\n 22907: a3 = a2 ^ a4\n 22910: a4 = a2 <u a4\n 22913: a4 = a1 if a3 == 0\n 22916: a3 = u64 [s1 + 0x1a8]\n 22920: a1 = u64 [s1 + 0x230]\n 22924: a1 = a1 + a3\n 22927: t0 = a1 <u a3\n 22930: a5 = u64 [s1 + 0x238]\n 22934: a3 = u64 [s1 + 0x1a0]\n 22938: a5 = a5 + a3\n 22941: a3 = a5 + t0\n 22944: a4 = a4 + a1\n 22947: a1 = a4 <u a1\n 22950: a1 = a1 + a3\n 22953: a1 = a1 | a2\n 22956: a2 = a0 | a4\n 22959: a2 = a2 | a1\n 22962: a1 = a1 | a4\n 22965: a2 = a2 >> 0x20\n 22968: a1 = a1 << 0x20\n 22971: a1 = a1 | a2\n 22974: jump @394 if a1 == 0\n      : @393 (gas: 1)\n 22977: jump @309\n      : @394 (gas: 13)\n 22980: a1 = s1 + 0x7ff\n 22984: a1 = a1 + 0x1b9\n 22988: a2 = u64 [a1 + 0x260]\n 22992: u64 [s1 + 0x1f0] = a2\n 22996: a2 = u64 [a1 + 0x258]\n 23000: u64 [s1 + 0x1f8] = a2\n 23004: a2 = u64 [a1 + 0x250]\n 23008: u64 [s1 + 0x1e8] = a2\n 23012: a1 = u64 [a1 + 0x248]\n 23016: u64 [s1 + 0x1e0] = a1\n 23020: i32 a0 = a0 + 0\n 23022: a1 = 0x20\n 23025: ra = 198, jump @0\n      : @395 [@dyn 99] (gas: 114)\n 23031: a1 = u64 [s1 + 0x1e0]\n 23035: a1 = reverse a1\n 23037: a2 = a1 >> 0x38\n 23040: u8 [a0 + 0x1f] = a2\n 23043: a2 = a1 >> 0x30\n 23046: u8 [a0 + 0x1e] = a2\n 23049: a2 = a1 >> 0x28\n 23052: u8 [a0 + 0x1d] = a2\n 23055: a2 = a1 >> 0x20\n 23058: u8 [a0 + 0x1c] = a2\n 23061: a2 = a1 >> 0x18\n 23064: u8 [a0 + 0x1b] = a2\n 23067: a2 = a1 >> 0x10\n 23070: u8 [a0 + 0x1a] = a2\n 23073: a2 = a1 >> 0x8\n 23076: u8 [a0 + 0x19] = a2\n 23079: a2 = u64 [s1 + 0x1e8]\n 23083: a2 = reverse a2\n 23085: u8 [a0 + 0x18] = a1\n 23088: a1 = a2 >> 0x38\n 23091: u8 [a0 + 0x17] = a1\n 23094: a1 = a2 >> 0x30\n 23097: u8 [a0 + 0x16] = a1\n 23100: a1 = a2 >> 0x28\n 23103: u8 [a0 + 0x15] = a1\n 23106: a1 = a2 >> 0x20\n 23109: u8 [a0 + 0x14] = a1\n 23112: a1 = a2 >> 0x18\n 23115: u8 [a0 + 0x13] = a1\n 23118: a1 = a2 >> 0x10\n 23121: u8 [a0 + 0x12] = a1\n 23124: a1 = u64 [s1 + 0x1f0]\n 23128: a1 = reverse a1\n 23130: a3 = u64 [s1 + 0x1f8]\n 23134: a3 = reverse a3\n 23136: u8 [a0 + 0x10] = a2\n 23139: a2 = a2 >> 0x8\n 23142: u8 [a0 + 0x11] = a2\n 23145: u8 [a0 + 0x8] = a3\n 23148: a2 = a3 >> 0x38\n 23151: u8 [a0 + 0xf] = a2\n 23154: a2 = a3 >> 0x30\n 23157: u8 [a0 + 0xe] = a2\n 23160: a2 = a3 >> 0x28\n 23163: u8 [a0 + 0xd] = a2\n 23166: a2 = a3 >> 0x20\n 23169: u8 [a0 + 0xc] = a2\n 23172: a2 = a3 >> 0x18\n 23175: u8 [a0 + 0xb] = a2\n 23178: a2 = a3 >> 0x10\n 23181: u8 [a0 + 0xa] = a2\n 23184: a3 = a3 >> 0x8\n 23187: u8 [a0 + 0x9] = a3\n 23190: u8 [a0] = a1\n 23192: a2 = a1 >> 0x38\n 23195: u8 [a0 + 0x7] = a2\n 23198: a2 = a1 >> 0x30\n 23201: u8 [a0 + 0x6] = a2\n 23204: a2 = a1 >> 0x28\n 23207: u8 [a0 + 0x5] = a2\n 23210: a2 = a1 >> 0x20\n 23213: u8 [a0 + 0x4] = a2\n 23216: a2 = a1 >> 0x18\n 23219: u8 [a0 + 0x3] = a2\n 23222: a2 = a1 >> 0x10\n 23225: u8 [a0 + 0x2] = a2\n 23228: a1 = a1 >> 0x8\n 23231: u8 [a0 + 0x1] = a1\n 23234: t2 = u64 [s1 + 0x208]\n 23238: t2 = t2 + 0x1\n 23241: a0 = t2 <u 0x1\n 23244: a2 = u64 [s1 + 0x210]\n 23248: a2 = a2 + a0\n 23251: a0 = u64 [s1 + 0x228]\n 23255: ra = a0 + 0x20\n 23258: a1 = ra <u a0\n 23261: a0 = u64 [s1 + 0x220]\n 23265: t0 = a0 + a1\n 23268: a3 = t0 <u a0\n 23271: a3 = a1 if a1 == 0\n 23274: a0 = u64 [s1 + 0x230]\n 23278: t1 = a0 + a3\n 23281: a3 = t1 <u a0\n 23284: a4 = u64 [s1 + 0x238]\n 23288: a4 = a4 + a3\n 23291: a0 = u64 [s1 + 0x1d0]\n 23295: a1 = t1 <u a0\n 23298: u64 [s1 + 0x230] = a1\n 23302: a1 = u64 [s1 + 0x1d8]\n 23306: a5 = ra <u a1\n 23309: a3 = u64 [s1 + 0x1c8]\n 23313: a1 = t0 ^ a3\n 23316: a3 = t0 <u a3\n 23319: a3 = a5 if a1 == 0\n 23322: a5 = u64 [s1 + 0x1c0]\n 23326: a1 = a4 ^ a5\n 23329: u64 [s1 + 0x238] = a4\n 23333: a5 = a4 <u a5\n 23336: a4 = u64 [s1 + 0x230]\n 23340: a5 = a4 if a1 == 0\n 23343: a4 = t1 ^ a0\n 23346: a1 = a1 | a4\n 23349: a4 = t2 | a2\n 23352: a4 = a4 <u 0x1\n 23355: a0 = u64 [s1 + 0x200]\n 23359: a4 = a4 + a0\n 23362: a0 = a4 <u a0\n 23365: a3 = a5 if a1 != 0\n 23368: a5 = u64 [s1 + 0x218]\n 23372: a5 = a5 + a0\n 23375: u64 [s1 + 0x228] = ra\n 23379: u64 [s1 + 0x220] = t0\n 23383: u64 [s1 + 0x230] = t1\n 23387: jump @391 if a3 != 0\n      : @396 (gas: 38)\n 23391: a3 = ra + 0x3f\n 23394: a0 = a3 <u ra\n 23397: a4 = t0 + a0\n 23400: a1 = a4 <u t0\n 23403: a1 = a0 if a0 == 0\n 23406: t2 = t1 + a1\n 23409: a0 = t2 <u t1\n 23412: a2 = u64 [s1 + 0x238]\n 23416: a0 = a0 + a2\n 23419: a3 = a3 & 0xffffffffffffffe0\n 23422: t0 = u64 [s1 + 0x190]\n 23426: a1 = a3 + t0\n 23429: u64 [s1 + 0x230] = a1\n 23433: a2 = a1 <u a3\n 23436: t1 = u64 [s1 + 0x188]\n 23440: a3 = a4 + t1\n 23443: a5 = a3 + a2\n 23446: a3 = a5 ^ a4\n 23449: a4 = a5 <u a4\n 23452: a4 = a2 if a3 == 0\n 23455: ra = u64 [s1 + 0x180]\n 23459: a1 = t2 + ra\n 23462: a2 = a1 + a4\n 23465: a3 = a2 <u a1\n 23468: a1 = a1 <u t2\n 23471: a4 = u64 [s1 + 0x178]\n 23475: a0 = a0 + a4\n 23478: a0 = a0 + a1\n 23481: a3 = a3 + a0\n 23484: a0 = a3 >u 0\n 23486: a1 = a2 >u 0\n 23488: a1 = a0 if a3 != 0\n 23491: u64 [s1 + 0x238] = a2\n 23495: u64 [s1 + 0x228] = a3\n 23499: a0 = a2 | a3\n 23502: a2 = a5 >u 0\n 23504: a2 = a1 if a0 != 0\n 23507: jump @398 if a2 == 0\n      : @397 (gas: 1)\n 23510: jump @505\n      : @398 (gas: 15)\n 23513: a0 = u64 [s1 + 0x230]\n 23517: a0 = a0 <u t0\n 23520: a1 = a5 ^ t1\n 23523: a2 = a5 <u t1\n 23526: a2 = a0 if a1 == 0\n 23529: a0 = u64 [s1 + 0x238]\n 23533: t2 = a0 <u ra\n 23536: a3 = u64 [s1 + 0x228]\n 23540: a1 = a3 ^ a4\n 23543: a3 = a3 <u a4\n 23546: a3 = t2 if a1 == 0\n 23549: a0 = a0 ^ ra\n 23552: a0 = a0 | a1\n 23555: a3 = a2 if a0 == 0\n 23558: jump @400 if a3 == 0\n      : @399 (gas: 1)\n 23561: jump @505\n      : @400 (gas: 4)\n 23564: a0 = 0x40\n 23567: a1 = 0x20\n 23570: u64 [s1 + 0x220] = a5\n 23574: ra = 200, jump @0\n      : @401 [@dyn 100] (gas: 71)\n 23580: a1 = u64 [s1 + 0x228]\n 23584: a1 = reverse a1\n 23586: a2 = u64 [s1 + 0x238]\n 23590: a2 = reverse a2\n 23592: a3 = u64 [s1 + 0x220]\n 23596: a3 = reverse a3\n 23598: a4 = u64 [s1 + 0x230]\n 23602: a4 = reverse a4\n 23604: u8 [a0 + 0x18] = a4\n 23607: a5 = a4 >> 0x38\n 23610: u8 [a0 + 0x1f] = a5\n 23613: a5 = a4 >> 0x30\n 23616: u8 [a0 + 0x1e] = a5\n 23619: a5 = a4 >> 0x28\n 23622: u8 [a0 + 0x1d] = a5\n 23625: a5 = a4 >> 0x20\n 23628: u8 [a0 + 0x1c] = a5\n 23631: a5 = a4 >> 0x18\n 23634: u8 [a0 + 0x1b] = a5\n 23637: a5 = a4 >> 0x10\n 23640: u8 [a0 + 0x1a] = a5\n 23643: a4 = a4 >> 0x8\n 23646: u8 [a0 + 0x19] = a4\n 23649: u8 [a0 + 0x10] = a3\n 23652: a4 = a3 >> 0x38\n 23655: u8 [a0 + 0x17] = a4\n 23658: a4 = a3 >> 0x30\n 23661: u8 [a0 + 0x16] = a4\n 23664: a4 = a3 >> 0x28\n 23667: u8 [a0 + 0x15] = a4\n 23670: a4 = a3 >> 0x20\n 23673: u8 [a0 + 0x14] = a4\n 23676: a4 = a3 >> 0x18\n 23679: u8 [a0 + 0x13] = a4\n 23682: a4 = a3 >> 0x10\n 23685: u8 [a0 + 0x12] = a4\n 23688: a3 = a3 >> 0x8\n 23691: u8 [a0 + 0x11] = a3\n 23694: u8 [a0 + 0x8] = a2\n 23697: a3 = a2 >> 0x38\n 23700: u8 [a0 + 0xf] = a3\n 23703: a3 = a2 >> 0x30\n 23706: u8 [a0 + 0xe] = a3\n 23709: a3 = a2 >> 0x28\n 23712: u8 [a0 + 0xd] = a3\n 23715: a3 = a2 >> 0x20\n 23718: u8 [a0 + 0xc] = a3\n 23721: a3 = a2 >> 0x18\n 23724: u8 [a0 + 0xb] = a3\n 23727: a3 = a2 >> 0x10\n 23730: u8 [a0 + 0xa] = a3\n 23733: a2 = a2 >> 0x8\n 23736: u8 [a0 + 0x9] = a2\n 23739: u8 [a0] = a1\n 23741: a2 = a1 >> 0x38\n 23744: u8 [a0 + 0x7] = a2\n 23747: a2 = a1 >> 0x30\n 23750: u8 [a0 + 0x6] = a2\n 23753: a2 = a1 >> 0x28\n 23756: u8 [a0 + 0x5] = a2\n 23759: a2 = a1 >> 0x20\n 23762: u8 [a0 + 0x4] = a2\n 23765: a2 = a1 >> 0x18\n 23768: u8 [a0 + 0x3] = a2\n 23771: a2 = a1 >> 0x10\n 23774: u8 [a0 + 0x2] = a2\n 23777: a1 = a1 >> 0x8\n 23780: u8 [a0 + 0x1] = a1\n 23783: a0 = 0x40\n 23786: a1 = 0x20\n 23789: ra = 202, jump @0\n      : @402 [@dyn 101] (gas: 117)\n 23795: a1 = u8 [a0 + 0x1]\n 23798: a2 = u8 [a0]\n 23800: a3 = u8 [a0 + 0x2]\n 23803: a4 = u8 [a0 + 0x3]\n 23806: a1 = a1 << 0x8\n 23809: a1 = a1 | a2\n 23812: a3 = a3 << 0x10\n 23815: a4 = a4 << 0x18\n 23818: a3 = a3 | a4\n 23821: a1 = a1 | a3\n 23824: a2 = u8 [a0 + 0x5]\n 23827: a3 = u8 [a0 + 0x4]\n 23830: a4 = u8 [a0 + 0x6]\n 23833: a5 = u8 [a0 + 0x7]\n 23836: a2 = a2 << 0x8\n 23839: a2 = a2 | a3\n 23842: a4 = a4 << 0x10\n 23845: a5 = a5 << 0x18\n 23848: a4 = a4 | a5\n 23851: a2 = a2 | a4\n 23854: a2 = a2 << 0x20\n 23857: t0 = a2 | a1\n 23860: a2 = u8 [a0 + 0x9]\n 23863: a3 = u8 [a0 + 0x8]\n 23866: a4 = u8 [a0 + 0xa]\n 23869: a5 = u8 [a0 + 0xb]\n 23872: a2 = a2 << 0x8\n 23875: a2 = a2 | a3\n 23878: a4 = a4 << 0x10\n 23881: a5 = a5 << 0x18\n 23884: a4 = a4 | a5\n 23887: a2 = a2 | a4\n 23890: a3 = u8 [a0 + 0xd]\n 23893: a4 = u8 [a0 + 0xc]\n 23896: a5 = u8 [a0 + 0xe]\n 23899: a1 = u8 [a0 + 0xf]\n 23902: a3 = a3 << 0x8\n 23905: a3 = a3 | a4\n 23908: a5 = a5 << 0x10\n 23911: a1 = a1 << 0x18\n 23914: a1 = a1 | a5\n 23917: a1 = a1 | a3\n 23920: a1 = a1 << 0x20\n 23923: t1 = a1 | a2\n 23926: a1 = u8 [a0 + 0x11]\n 23929: a3 = u8 [a0 + 0x10]\n 23932: a4 = u8 [a0 + 0x12]\n 23935: a5 = u8 [a0 + 0x13]\n 23938: a1 = a1 << 0x8\n 23941: a1 = a1 | a3\n 23944: a4 = a4 << 0x10\n 23947: a5 = a5 << 0x18\n 23950: a4 = a4 | a5\n 23953: a1 = a1 | a4\n 23956: a3 = u8 [a0 + 0x15]\n 23959: a4 = u8 [a0 + 0x14]\n 23962: a5 = u8 [a0 + 0x16]\n 23965: a2 = u8 [a0 + 0x17]\n 23968: a3 = a3 << 0x8\n 23971: a3 = a3 | a4\n 23974: a5 = a5 << 0x10\n 23977: a2 = a2 << 0x18\n 23980: a2 = a2 | a5\n 23983: a2 = a2 | a3\n 23986: a2 = a2 << 0x20\n 23989: a3 = a2 | a1\n 23992: a1 = u8 [a0 + 0x19]\n 23995: a2 = u8 [a0 + 0x18]\n 23998: a4 = u8 [a0 + 0x1a]\n 24001: a5 = u8 [a0 + 0x1b]\n 24004: a1 = a1 << 0x8\n 24007: a1 = a1 | a2\n 24010: a4 = a4 << 0x10\n 24013: a5 = a5 << 0x18\n 24016: a4 = a4 | a5\n 24019: a1 = a1 | a4\n 24022: a2 = u8 [a0 + 0x1d]\n 24025: a4 = u8 [a0 + 0x1c]\n 24028: a5 = u8 [a0 + 0x1e]\n 24031: a0 = u8 [a0 + 0x1f]\n 24034: a2 = a2 << 0x8\n 24037: a2 = a2 | a4\n 24040: a5 = a5 << 0x10\n 24043: a0 = a0 << 0x18\n 24046: a0 = a0 | a5\n 24049: a0 = a0 | a2\n 24052: a0 = a0 << 0x20\n 24055: a0 = a0 | a1\n 24058: a4 = reverse a0\n 24060: u64 [s1 + 0x220] = a4\n 24064: a2 = reverse a3\n 24066: u64 [s1 + 0x228] = a2\n 24070: a1 = reverse t1\n 24072: u64 [s1 + 0x230] = a1\n 24076: a5 = reverse t0\n 24078: u64 [s1 + 0x238] = a5\n 24082: a3 = s1 + 0x7ff\n 24086: a3 = a3 + 0x1b9\n 24090: a0 = u64 [s1 + 0x178]\n 24094: u64 [a3 + 0x40] = a0\n 24097: a0 = u64 [s1 + 0x180]\n 24101: u64 [a3 + 0x38] = a0\n 24104: a0 = u64 [s1 + 0x188]\n 24108: u64 [a3 + 0x30] = a0\n 24111: a0 = u64 [s1 + 0x190]\n 24115: u64 [a3 + 0x28] = a0\n 24118: u64 [a3 + 0x60] = a5\n 24121: u64 [a3 + 0x58] = a1\n 24124: u64 [a3 + 0x50] = a2\n 24127: a0 = s1 + 0x7ff\n 24131: a0 = a0 + 0x221\n 24135: a1 = s1 + 0x7ff\n 24139: a1 = a1 + 0x201\n 24143: a2 = s1 + 0x7ff\n 24147: a2 = a2 + 0x1e1\n 24151: u64 [a3 + 0x48] = a4\n 24154: ra = 204, jump @515\n      : @403 [@dyn 102] (gas: 12)\n 24160: a4 = u64 [s1 + 0x228]\n 24164: a2 = u64 [s1 + 0x220]\n 24168: a0 = u64 [s1 + 0x238]\n 24172: a0 = a0 | a4\n 24175: a3 = u64 [s1 + 0x230]\n 24179: a1 = a2 | a3\n 24182: a1 = a1 | a0\n 24185: a1 = a1 >> 0x20\n 24188: a0 = a0 | a3\n 24191: a0 = a0 << 0x20\n 24194: a0 = a0 | a1\n 24197: jump @405 if a0 == 0\n      : @404 (gas: 1)\n 24200: jump @309\n      : @405 (gas: 9)\n 24203: t0 = a3\n 24205: a1 = s1 + 0x7ff\n 24209: a1 = a1 + 0x1b9\n 24213: a0 = u64 [a1 + 0x70]\n 24216: a3 = u64 [a1 + 0x80]\n 24220: u64 [s1 + 0x218] = a3\n 24224: t1 = u64 [a1 + 0x68]\n 24227: a3 = u64 [a1 + 0x78]\n 24230: jump @422\n      : @406 (gas: 33)\n 24233: u64 [s1 + 552] = 0\n 24237: u64 [s1 + 544] = 0\n 24241: u64 [s1 + 560] = 0\n 24245: u64 [s1 + 568] = 0\n 24249: a0 = u64 [s1 + 0x218]\n 24253: a4 = u64 [a0]\n 24255: a1 = u64 [s1 + 0x190]\n 24259: a2 = a1 + 0x20\n 24262: u64 [s1 + 0x1b8] = a2\n 24266: a1 = a2 <u a1\n 24269: a2 = u64 [s1 + 0x188]\n 24273: a3 = a2 + a1\n 24276: u64 [s1 + 0x1b0] = a3\n 24280: a3 = a3 <u a2\n 24283: a3 = a1 if a1 == 0\n 24286: a1 = u64 [a0 + 0x8]\n 24289: a2 = u64 [a0 + 0x10]\n 24292: a0 = u64 [a0 + 0x18]\n 24295: a5 = reverse a4\n 24297: a4 = reverse a1\n 24299: a2 = reverse a2\n 24301: t2 = reverse a0\n 24303: a0 = u64 [s1 + 0x180]\n 24307: a3 = a3 + a0\n 24310: u64 [s1 + 0x1a8] = a3\n 24314: a0 = a3 <u a0\n 24317: a1 = u64 [s1 + 0x178]\n 24321: a0 = a0 + a1\n 24324: u64 [s1 + 0x1a0] = a0\n 24328: a0 = s1 + 0x1000\n 24332: i32 a0 = a0 + 0xfffffffffffffc80\n 24336: u64 [s1 + 0x198] = a0\n 24340: fallthrough\n      : @407 (gas: 24)\n 24341: a1 = s1 + 0x7ff\n 24345: a1 = a1 + 0x1b9\n 24349: u64 [s1 + 0x200] = a4\n 24353: u64 [a1 + 0x2d8] = a4\n 24357: u64 [s1 + 0x210] = a2\n 24361: u64 [a1 + 0x2d0] = a2\n 24365: u64 [s1 + 0x208] = t2\n 24369: u64 [a1 + 0x2c8] = t2\n 24373: u64 [s1 + 0x218] = a5\n 24377: u64 [a1 + 0x2e0] = a5\n 24381: u64 [a1 + 608] = 0\n 24385: u64 [a1 + 600] = 0\n 24389: u64 [a1 + 592] = 0\n 24393: u64 [a1 + 584] = 0\n 24397: u32 [a1 + 744] = 0x20\n 24402: a0 = s1 + 0x1000\n 24406: i32 a3 = a0 + 0xfffffffffffffc00\n 24410: a0 = s1 + 0x1000\n 24414: i32 a4 = a0 + 0xfffffffffffffca0\n 24418: a2 = 0xffffffffffffffff\n 24421: a0 = 0\n 24423: a1 = u64 [s1 + 0x198]\n 24427: ecalli 5 // 'get_storage'\n 24429: fallthrough\n      : @408 (gas: 30)\n 24430: a1 = u64 [s1 + 0x1b8]\n 24434: a0 = u64 [s1 + 0x228]\n 24438: a0 = a0 + a1\n 24441: a1 = a0 <u a1\n 24444: a4 = u64 [s1 + 0x1b0]\n 24448: a2 = u64 [s1 + 0x220]\n 24452: a2 = a2 + a4\n 24455: a2 = a2 + a1\n 24458: a3 = a2 ^ a4\n 24461: a4 = a2 <u a4\n 24464: a4 = a1 if a3 == 0\n 24467: a3 = u64 [s1 + 0x1a8]\n 24471: a1 = u64 [s1 + 0x230]\n 24475: a1 = a1 + a3\n 24478: t0 = a1 <u a3\n 24481: a5 = u64 [s1 + 0x238]\n 24485: a3 = u64 [s1 + 0x1a0]\n 24489: a5 = a5 + a3\n 24492: a3 = a5 + t0\n 24495: a4 = a4 + a1\n 24498: a1 = a4 <u a1\n 24501: a1 = a1 + a3\n 24504: a1 = a1 | a2\n 24507: a2 = a0 | a4\n 24510: a2 = a2 | a1\n 24513: a1 = a1 | a4\n 24516: a2 = a2 >> 0x20\n 24519: a1 = a1 << 0x20\n 24522: a1 = a1 | a2\n 24525: jump @410 if a1 == 0\n      : @409 (gas: 1)\n 24528: jump @309\n      : @410 (gas: 13)\n 24531: a1 = s1 + 0x7ff\n 24535: a1 = a1 + 0x1b9\n 24539: a2 = u64 [a1 + 0x260]\n 24543: u64 [s1 + 0x1f0] = a2\n 24547: a2 = u64 [a1 + 0x258]\n 24551: u64 [s1 + 0x1f8] = a2\n 24555: a2 = u64 [a1 + 0x250]\n 24559: u64 [s1 + 0x1e8] = a2\n 24563: a1 = u64 [a1 + 0x248]\n 24567: u64 [s1 + 0x1e0] = a1\n 24571: i32 a0 = a0 + 0\n 24573: a1 = 0x20\n 24576: ra = 206, jump @0\n      : @411 [@dyn 103] (gas: 114)\n 24582: a1 = u64 [s1 + 0x1e0]\n 24586: a1 = reverse a1\n 24588: a2 = a1 >> 0x38\n 24591: u8 [a0 + 0x1f] = a2\n 24594: a2 = a1 >> 0x30\n 24597: u8 [a0 + 0x1e] = a2\n 24600: a2 = a1 >> 0x28\n 24603: u8 [a0 + 0x1d] = a2\n 24606: a2 = a1 >> 0x20\n 24609: u8 [a0 + 0x1c] = a2\n 24612: a2 = a1 >> 0x18\n 24615: u8 [a0 + 0x1b] = a2\n 24618: a2 = a1 >> 0x10\n 24621: u8 [a0 + 0x1a] = a2\n 24624: a2 = a1 >> 0x8\n 24627: u8 [a0 + 0x19] = a2\n 24630: a2 = u64 [s1 + 0x1e8]\n 24634: a2 = reverse a2\n 24636: u8 [a0 + 0x18] = a1\n 24639: a1 = a2 >> 0x38\n 24642: u8 [a0 + 0x17] = a1\n 24645: a1 = a2 >> 0x30\n 24648: u8 [a0 + 0x16] = a1\n 24651: a1 = a2 >> 0x28\n 24654: u8 [a0 + 0x15] = a1\n 24657: a1 = a2 >> 0x20\n 24660: u8 [a0 + 0x14] = a1\n 24663: a1 = a2 >> 0x18\n 24666: u8 [a0 + 0x13] = a1\n 24669: a1 = a2 >> 0x10\n 24672: u8 [a0 + 0x12] = a1\n 24675: a1 = u64 [s1 + 0x1f0]\n 24679: a1 = reverse a1\n 24681: a3 = u64 [s1 + 0x1f8]\n 24685: a3 = reverse a3\n 24687: u8 [a0 + 0x10] = a2\n 24690: a2 = a2 >> 0x8\n 24693: u8 [a0 + 0x11] = a2\n 24696: u8 [a0 + 0x8] = a3\n 24699: a2 = a3 >> 0x38\n 24702: u8 [a0 + 0xf] = a2\n 24705: a2 = a3 >> 0x30\n 24708: u8 [a0 + 0xe] = a2\n 24711: a2 = a3 >> 0x28\n 24714: u8 [a0 + 0xd] = a2\n 24717: a2 = a3 >> 0x20\n 24720: u8 [a0 + 0xc] = a2\n 24723: a2 = a3 >> 0x18\n 24726: u8 [a0 + 0xb] = a2\n 24729: a2 = a3 >> 0x10\n 24732: u8 [a0 + 0xa] = a2\n 24735: a3 = a3 >> 0x8\n 24738: u8 [a0 + 0x9] = a3\n 24741: u8 [a0] = a1\n 24743: a2 = a1 >> 0x38\n 24746: u8 [a0 + 0x7] = a2\n 24749: a2 = a1 >> 0x30\n 24752: u8 [a0 + 0x6] = a2\n 24755: a2 = a1 >> 0x28\n 24758: u8 [a0 + 0x5] = a2\n 24761: a2 = a1 >> 0x20\n 24764: u8 [a0 + 0x4] = a2\n 24767: a2 = a1 >> 0x18\n 24770: u8 [a0 + 0x3] = a2\n 24773: a2 = a1 >> 0x10\n 24776: u8 [a0 + 0x2] = a2\n 24779: a1 = a1 >> 0x8\n 24782: u8 [a0 + 0x1] = a1\n 24785: t2 = u64 [s1 + 0x208]\n 24789: t2 = t2 + 0x1\n 24792: a0 = t2 <u 0x1\n 24795: a2 = u64 [s1 + 0x210]\n 24799: a2 = a2 + a0\n 24802: a0 = u64 [s1 + 0x228]\n 24806: ra = a0 + 0x20\n 24809: a1 = ra <u a0\n 24812: a0 = u64 [s1 + 0x220]\n 24816: t0 = a0 + a1\n 24819: a3 = t0 <u a0\n 24822: a3 = a1 if a1 == 0\n 24825: a0 = u64 [s1 + 0x230]\n 24829: t1 = a0 + a3\n 24832: a3 = t1 <u a0\n 24835: a4 = u64 [s1 + 0x238]\n 24839: a4 = a4 + a3\n 24842: a0 = u64 [s1 + 0x1d0]\n 24846: a1 = t1 <u a0\n 24849: u64 [s1 + 0x230] = a1\n 24853: a1 = u64 [s1 + 0x1d8]\n 24857: a5 = ra <u a1\n 24860: a3 = u64 [s1 + 0x1c8]\n 24864: a1 = t0 ^ a3\n 24867: a3 = t0 <u a3\n 24870: a3 = a5 if a1 == 0\n 24873: a5 = u64 [s1 + 0x1c0]\n 24877: a1 = a4 ^ a5\n 24880: u64 [s1 + 0x238] = a4\n 24884: a5 = a4 <u a5\n 24887: a4 = u64 [s1 + 0x230]\n 24891: a5 = a4 if a1 == 0\n 24894: a4 = t1 ^ a0\n 24897: a1 = a1 | a4\n 24900: a4 = t2 | a2\n 24903: a4 = a4 <u 0x1\n 24906: a0 = u64 [s1 + 0x200]\n 24910: a4 = a4 + a0\n 24913: a0 = a4 <u a0\n 24916: a3 = a5 if a1 != 0\n 24919: a5 = u64 [s1 + 0x218]\n 24923: a5 = a5 + a0\n 24926: u64 [s1 + 0x228] = ra\n 24930: u64 [s1 + 0x220] = t0\n 24934: u64 [s1 + 0x230] = t1\n 24938: jump @407 if a3 != 0\n      : @412 (gas: 38)\n 24942: a3 = ra + 0x3f\n 24945: a0 = a3 <u ra\n 24948: a4 = t0 + a0\n 24951: a1 = a4 <u t0\n 24954: a1 = a0 if a0 == 0\n 24957: t2 = t1 + a1\n 24960: a0 = t2 <u t1\n 24963: a2 = u64 [s1 + 0x238]\n 24967: a0 = a0 + a2\n 24970: a3 = a3 & 0xffffffffffffffe0\n 24973: t0 = u64 [s1 + 0x190]\n 24977: a1 = a3 + t0\n 24980: u64 [s1 + 0x230] = a1\n 24984: a2 = a1 <u a3\n 24987: t1 = u64 [s1 + 0x188]\n 24991: a3 = a4 + t1\n 24994: a5 = a3 + a2\n 24997: a3 = a5 ^ a4\n 25000: a4 = a5 <u a4\n 25003: a4 = a2 if a3 == 0\n 25006: ra = u64 [s1 + 0x180]\n 25010: a1 = t2 + ra\n 25013: a2 = a1 + a4\n 25016: a3 = a2 <u a1\n 25019: a1 = a1 <u t2\n 25022: a4 = u64 [s1 + 0x178]\n 25026: a0 = a0 + a4\n 25029: a0 = a0 + a1\n 25032: a3 = a3 + a0\n 25035: a0 = a3 >u 0\n 25037: a1 = a2 >u 0\n 25039: a1 = a0 if a3 != 0\n 25042: u64 [s1 + 0x238] = a2\n 25046: u64 [s1 + 0x228] = a3\n 25050: a0 = a2 | a3\n 25053: a2 = a5 >u 0\n 25055: a2 = a1 if a0 != 0\n 25058: jump @414 if a2 == 0\n      : @413 (gas: 1)\n 25061: jump @507\n      : @414 (gas: 15)\n 25064: a0 = u64 [s1 + 0x230]\n 25068: a0 = a0 <u t0\n 25071: a1 = a5 ^ t1\n 25074: a2 = a5 <u t1\n 25077: a2 = a0 if a1 == 0\n 25080: a0 = u64 [s1 + 0x238]\n 25084: t2 = a0 <u ra\n 25087: a3 = u64 [s1 + 0x228]\n 25091: a1 = a3 ^ a4\n 25094: a3 = a3 <u a4\n 25097: a3 = t2 if a1 == 0\n 25100: a0 = a0 ^ ra\n 25103: a0 = a0 | a1\n 25106: a3 = a2 if a0 == 0\n 25109: jump @416 if a3 == 0\n      : @415 (gas: 1)\n 25112: jump @507\n      : @416 (gas: 4)\n 25115: a0 = 0x40\n 25118: a1 = 0x20\n 25121: u64 [s1 + 0x220] = a5\n 25125: ra = 208, jump @0\n      : @417 [@dyn 104] (gas: 71)\n 25131: a1 = u64 [s1 + 0x228]\n 25135: a1 = reverse a1\n 25137: a2 = u64 [s1 + 0x238]\n 25141: a2 = reverse a2\n 25143: a3 = u64 [s1 + 0x220]\n 25147: a3 = reverse a3\n 25149: a4 = u64 [s1 + 0x230]\n 25153: a4 = reverse a4\n 25155: u8 [a0 + 0x18] = a4\n 25158: a5 = a4 >> 0x38\n 25161: u8 [a0 + 0x1f] = a5\n 25164: a5 = a4 >> 0x30\n 25167: u8 [a0 + 0x1e] = a5\n 25170: a5 = a4 >> 0x28\n 25173: u8 [a0 + 0x1d] = a5\n 25176: a5 = a4 >> 0x20\n 25179: u8 [a0 + 0x1c] = a5\n 25182: a5 = a4 >> 0x18\n 25185: u8 [a0 + 0x1b] = a5\n 25188: a5 = a4 >> 0x10\n 25191: u8 [a0 + 0x1a] = a5\n 25194: a4 = a4 >> 0x8\n 25197: u8 [a0 + 0x19] = a4\n 25200: u8 [a0 + 0x10] = a3\n 25203: a4 = a3 >> 0x38\n 25206: u8 [a0 + 0x17] = a4\n 25209: a4 = a3 >> 0x30\n 25212: u8 [a0 + 0x16] = a4\n 25215: a4 = a3 >> 0x28\n 25218: u8 [a0 + 0x15] = a4\n 25221: a4 = a3 >> 0x20\n 25224: u8 [a0 + 0x14] = a4\n 25227: a4 = a3 >> 0x18\n 25230: u8 [a0 + 0x13] = a4\n 25233: a4 = a3 >> 0x10\n 25236: u8 [a0 + 0x12] = a4\n 25239: a3 = a3 >> 0x8\n 25242: u8 [a0 + 0x11] = a3\n 25245: u8 [a0 + 0x8] = a2\n 25248: a3 = a2 >> 0x38\n 25251: u8 [a0 + 0xf] = a3\n 25254: a3 = a2 >> 0x30\n 25257: u8 [a0 + 0xe] = a3\n 25260: a3 = a2 >> 0x28\n 25263: u8 [a0 + 0xd] = a3\n 25266: a3 = a2 >> 0x20\n 25269: u8 [a0 + 0xc] = a3\n 25272: a3 = a2 >> 0x18\n 25275: u8 [a0 + 0xb] = a3\n 25278: a3 = a2 >> 0x10\n 25281: u8 [a0 + 0xa] = a3\n 25284: a2 = a2 >> 0x8\n 25287: u8 [a0 + 0x9] = a2\n 25290: u8 [a0] = a1\n 25292: a2 = a1 >> 0x38\n 25295: u8 [a0 + 0x7] = a2\n 25298: a2 = a1 >> 0x30\n 25301: u8 [a0 + 0x6] = a2\n 25304: a2 = a1 >> 0x28\n 25307: u8 [a0 + 0x5] = a2\n 25310: a2 = a1 >> 0x20\n 25313: u8 [a0 + 0x4] = a2\n 25316: a2 = a1 >> 0x18\n 25319: u8 [a0 + 0x3] = a2\n 25322: a2 = a1 >> 0x10\n 25325: u8 [a0 + 0x2] = a2\n 25328: a1 = a1 >> 0x8\n 25331: u8 [a0 + 0x1] = a1\n 25334: a0 = 0x40\n 25337: a1 = 0x20\n 25340: ra = 210, jump @0\n      : @418 [@dyn 105] (gas: 112)\n 25346: a1 = u8 [a0 + 0x1]\n 25349: a2 = u8 [a0]\n 25351: a3 = u8 [a0 + 0x2]\n 25354: a4 = u8 [a0 + 0x3]\n 25357: a1 = a1 << 0x8\n 25360: a1 = a1 | a2\n 25363: a3 = a3 << 0x10\n 25366: a4 = a4 << 0x18\n 25369: a3 = a3 | a4\n 25372: a1 = a1 | a3\n 25375: a2 = u8 [a0 + 0x5]\n 25378: a3 = u8 [a0 + 0x4]\n 25381: a4 = u8 [a0 + 0x6]\n 25384: a5 = u8 [a0 + 0x7]\n 25387: a2 = a2 << 0x8\n 25390: a2 = a2 | a3\n 25393: a4 = a4 << 0x10\n 25396: a5 = a5 << 0x18\n 25399: a4 = a4 | a5\n 25402: a2 = a2 | a4\n 25405: a2 = a2 << 0x20\n 25408: t0 = a2 | a1\n 25411: a2 = u8 [a0 + 0x9]\n 25414: a3 = u8 [a0 + 0x8]\n 25417: a4 = u8 [a0 + 0xa]\n 25420: a5 = u8 [a0 + 0xb]\n 25423: a2 = a2 << 0x8\n 25426: a2 = a2 | a3\n 25429: a4 = a4 << 0x10\n 25432: a5 = a5 << 0x18\n 25435: a4 = a4 | a5\n 25438: a2 = a2 | a4\n 25441: a3 = u8 [a0 + 0xd]\n 25444: a4 = u8 [a0 + 0xc]\n 25447: a5 = u8 [a0 + 0xe]\n 25450: a1 = u8 [a0 + 0xf]\n 25453: a3 = a3 << 0x8\n 25456: a3 = a3 | a4\n 25459: a5 = a5 << 0x10\n 25462: a1 = a1 << 0x18\n 25465: a1 = a1 | a5\n 25468: a1 = a1 | a3\n 25471: a1 = a1 << 0x20\n 25474: t1 = a1 | a2\n 25477: a1 = u8 [a0 + 0x11]\n 25480: a3 = u8 [a0 + 0x10]\n 25483: a4 = u8 [a0 + 0x12]\n 25486: a5 = u8 [a0 + 0x13]\n 25489: a1 = a1 << 0x8\n 25492: a1 = a1 | a3\n 25495: a4 = a4 << 0x10\n 25498: a5 = a5 << 0x18\n 25501: a4 = a4 | a5\n 25504: a1 = a1 | a4\n 25507: a3 = u8 [a0 + 0x15]\n 25510: a4 = u8 [a0 + 0x14]\n 25513: a5 = u8 [a0 + 0x16]\n 25516: a2 = u8 [a0 + 0x17]\n 25519: a3 = a3 << 0x8\n 25522: a3 = a3 | a4\n 25525: a5 = a5 << 0x10\n 25528: a2 = a2 << 0x18\n 25531: a2 = a2 | a5\n 25534: a2 = a2 | a3\n 25537: a2 = a2 << 0x20\n 25540: a3 = a2 | a1\n 25543: a1 = u8 [a0 + 0x19]\n 25546: a2 = u8 [a0 + 0x18]\n 25549: a4 = u8 [a0 + 0x1a]\n 25552: a5 = u8 [a0 + 0x1b]\n 25555: a1 = a1 << 0x8\n 25558: a1 = a1 | a2\n 25561: a4 = a4 << 0x10\n 25564: a5 = a5 << 0x18\n 25567: a4 = a4 | a5\n 25570: a1 = a1 | a4\n 25573: a2 = u8 [a0 + 0x1d]\n 25576: a4 = u8 [a0 + 0x1c]\n 25579: a5 = u8 [a0 + 0x1e]\n 25582: a0 = u8 [a0 + 0x1f]\n 25585: a2 = a2 << 0x8\n 25588: a2 = a2 | a4\n 25591: a5 = a5 << 0x10\n 25594: a0 = a0 << 0x18\n 25597: a0 = a0 | a5\n 25600: a0 = a0 | a2\n 25603: a0 = a0 << 0x20\n 25606: a0 = a0 | a1\n 25609: a4 = reverse a0\n 25611: u64 [s1 + 0x220] = a4\n 25615: a2 = reverse a3\n 25617: u64 [s1 + 0x228] = a2\n 25621: a1 = reverse t1\n 25623: u64 [s1 + 0x230] = a1\n 25627: a3 = reverse t0\n 25629: u64 [s1 + 0x238] = a3\n 25633: a0 = u64 [s1 + 0x178]\n 25637: u64 [s1 + 0x2d8] = a0\n 25641: a0 = u64 [s1 + 0x180]\n 25645: u64 [s1 + 0x2d0] = a0\n 25649: a0 = u64 [s1 + 0x188]\n 25653: u64 [s1 + 0x2c8] = a0\n 25657: a0 = u64 [s1 + 0x190]\n 25661: u64 [s1 + 0x2c0] = a0\n 25665: u64 [s1 + 0x2f8] = a3\n 25669: u64 [s1 + 0x2f0] = a1\n 25673: u64 [s1 + 0x2e8] = a2\n 25677: a0 = s1 + 0x300\n 25681: a1 = s1 + 0x2e0\n 25685: a2 = s1 + 0x2c0\n 25689: u64 [s1 + 0x2e0] = a4\n 25693: ra = 212, jump @515\n      : @419 [@dyn 106] (gas: 12)\n 25699: a4 = u64 [s1 + 0x228]\n 25703: a2 = u64 [s1 + 0x220]\n 25707: a0 = u64 [s1 + 0x238]\n 25711: a0 = a0 | a4\n 25714: a3 = u64 [s1 + 0x230]\n 25718: a1 = a2 | a3\n 25721: a1 = a1 | a0\n 25724: a1 = a1 >> 0x20\n 25727: a0 = a0 | a3\n 25730: a0 = a0 << 0x20\n 25733: a0 = a0 | a1\n 25736: jump @421 if a0 == 0\n      : @420 (gas: 1)\n 25739: jump @309\n      : @421 (gas: 7)\n 25742: t0 = a3\n 25744: a0 = u64 [s1 + 0x308]\n 25748: a1 = u64 [s1 + 0x318]\n 25752: u64 [s1 + 0x218] = a1\n 25756: t1 = u64 [s1 + 0x300]\n 25760: a3 = u64 [s1 + 0x310]\n 25764: fallthrough\n      : @422 (gas: 26)\n 25765: t2 = a0 ^ a4\n 25768: a5 = a0 <u a4\n 25771: ra = t1 <u a2\n 25774: a5 = ra if t2 == 0\n 25777: a1 = a3 - t0\n 25780: t2 = a1 - a5\n 25783: a1 = a1 <u a5\n 25786: u64 [s1 + 0x210] = a1\n 25790: a3 = a3 <u t0\n 25793: a5 = u64 [s1 + 0x238]\n 25797: a1 = u64 [s1 + 0x218]\n 25801: a5 = a1 - a5\n 25804: a5 = a5 - a3\n 25807: a1 = u64 [s1 + 0x210]\n 25811: a5 = a5 - a1\n 25814: a0 = a0 - a4\n 25817: a0 = a0 - ra\n 25820: a1 = t1 - a2\n 25823: a0 = a0 | a5\n 25826: a3 = a1 | t2\n 25829: a3 = a3 | a0\n 25832: a0 = a0 | t2\n 25835: a3 = a3 >> 0x20\n 25838: a0 = a0 << 0x20\n 25841: a0 = a0 | a3\n 25844: jump @424 if a0 == 0\n      : @423 (gas: 1)\n 25847: jump @309\n      : @424 (gas: 4)\n 25850: i32 a0 = a2 + 0\n 25852: i32 a1 = a1 + 0\n 25854: u64 [s1 + 0x238] = a1\n 25858: ra = 214, jump @0\n      : @425 [@dyn 107] (gas: 5)\n 25864: i32 a1 = a0 + 0\n 25866: a0 = 0\n 25868: a2 = u64 [s1 + 0x238]\n 25872: ecalli 7 // 'seal_return'\n 25874: fallthrough\n      : @426 (gas: 20)\n 25875: a5 = 0\n 25877: a2 = 0\n 25879: t0 = 0\n 25881: a3 = 0\n 25883: ra = 0\n 25885: t1 = 0\n 25887: t2 = 0\n 25889: a1 = 0\n 25891: a0 = 0xffffffff\n 25901: u64 [s1 + 0xa0] = a0\n 25905: a0 = s1 + 0x1000\n 25909: i32 a0 = a0 + 0xfffffffffffffc80\n 25913: u64 [s1 + 0x98] = a0\n 25917: a0 = s1 + 0x1000\n 25921: i32 a0 = a0 + 0xfffffffffffffc00\n 25925: u64 [s1 + 0x90] = a0\n 25929: a0 = s1 + 0x1000\n 25933: i32 a0 = a0 + 0xfffffffffffffca0\n 25937: u64 [s1 + 0x88] = a0\n 25941: jump @430\n      : @427 (gas: 9)\n 25944: ra = u64 [s1 + 0x1e8]\n 25948: t2 = u64 [s1 + 0x200]\n 25952: t1 = u64 [s1 + 0x1f8]\n 25956: a1 = u64 [s1 + 0x1f0]\n 25960: a5 = u64 [s1 + 0x238]\n 25964: a2 = u64 [s1 + 0x230]\n 25968: a3 = u64 [s1 + 0x228]\n 25972: a4 = u64 [s1 + 0x220]\n 25976: fallthrough\n      : @428 (gas: 31)\n 25977: u64 [s1 + 0x210] = t1\n 25981: u64 [s1 + 0x208] = a1\n 25985: u64 [s1 + 0x218] = t2\n 25989: a5 = a5 + 0x1\n 25992: a0 = a5 <u 0x1\n 25995: a2 = a2 + a0\n 25998: a0 = a5 | a2\n 26001: a0 = a0 <u 0x1\n 26004: a0 = a0 + a4\n 26007: a1 = a0 <u a4\n 26010: a3 = a3 + a1\n 26013: a1 = u64 [s1 + 0xa8]\n 26017: t0 = a5 <u a1\n 26020: a4 = u64 [s1 + 0xb0]\n 26024: a1 = a2 ^ a4\n 26027: t2 = a2 <u a4\n 26030: t2 = t0 if a1 == 0\n 26033: a1 = u64 [s1 + 0xb8]\n 26037: t0 = a0 <u a1\n 26040: a4 = u64 [s1 + 0xc0]\n 26044: t1 = a3 ^ a4\n 26047: a4 = a3 <u a4\n 26050: a4 = t0 if t1 == 0\n 26053: a1 = a1 ^ a0\n 26056: a1 = a1 | t1\n 26059: a4 = t2 if a1 == 0\n 26062: t0 = a0\n 26064: t1 = u64 [s1 + 0x218]\n 26068: t2 = u64 [s1 + 0x210]\n 26072: a1 = u64 [s1 + 0x208]\n 26076: jump @430 if a4 != 0\n      : @429 (gas: 1)\n 26079: jump @213\n      : @430 (gas: 11)\n 26082: u64 [s1 + 0x230] = a2\n 26086: u64 [s1 + 0x238] = a5\n 26090: u64 [s1 + 0x220] = t0\n 26094: u64 [s1 + 0x228] = a3\n 26098: u64 [s1 + 0x1e8] = ra\n 26102: u64 [s1 + 0x1f0] = a1\n 26106: u64 [s1 + 0x1f8] = t2\n 26110: u64 [s1 + 0x200] = t1\n 26114: a1 = 0x20\n 26117: a0 = 0\n 26119: ra = 216, jump @0\n      : @431 [@dyn 108] (gas: 103)\n 26125: a1 = u64 [s1 + 0x230]\n 26129: a3 = reverse a1\n 26131: a1 = u64 [s1 + 0x238]\n 26135: a2 = reverse a1\n 26137: u8 [a0 + 0x18] = a2\n 26140: a1 = a2 >> 0x38\n 26143: u64 [s1 + 0x1d8] = a1\n 26147: u8 [a0 + 0x1f] = a1\n 26150: a1 = a2 >> 0x30\n 26153: u64 [s1 + 0x1d0] = a1\n 26157: u8 [a0 + 0x1e] = a1\n 26160: a1 = a2 >> 0x28\n 26163: u64 [s1 + 0x1c8] = a1\n 26167: u8 [a0 + 0x1d] = a1\n 26170: a1 = a2 >> 0x20\n 26173: u64 [s1 + 0x1c0] = a1\n 26177: u8 [a0 + 0x1c] = a1\n 26180: a1 = a2 >> 0x18\n 26183: u64 [s1 + 0x1b8] = a1\n 26187: u8 [a0 + 0x1b] = a1\n 26190: a1 = a2 >> 0x10\n 26193: u64 [s1 + 0x1b0] = a1\n 26197: u8 [a0 + 0x1a] = a1\n 26200: u64 [s1 + 0x1a8] = a2\n 26204: a1 = a2 >> 0x8\n 26207: u64 [s1 + 0x1e0] = a1\n 26211: u8 [a0 + 0x19] = a1\n 26214: u8 [a0 + 0x10] = a3\n 26217: a1 = a3 >> 0x38\n 26220: u64 [s1 + 0x198] = a1\n 26224: u8 [a0 + 0x17] = a1\n 26227: a1 = a3 >> 0x30\n 26230: u64 [s1 + 0x190] = a1\n 26234: u8 [a0 + 0x16] = a1\n 26237: a1 = a3 >> 0x28\n 26240: u64 [s1 + 0x188] = a1\n 26244: u8 [a0 + 0x15] = a1\n 26247: a1 = a3 >> 0x20\n 26250: u64 [s1 + 0x180] = a1\n 26254: u8 [a0 + 0x14] = a1\n 26257: a1 = a3 >> 0x18\n 26260: u64 [s1 + 0x178] = a1\n 26264: u8 [a0 + 0x13] = a1\n 26267: a1 = a3 >> 0x10\n 26270: u64 [s1 + 0x170] = a1\n 26274: u8 [a0 + 0x12] = a1\n 26277: u64 [s1 + 0x1a0] = a3\n 26281: a3 = a3 >> 0x8\n 26284: u64 [s1 + 0x168] = a3\n 26288: u8 [a0 + 0x11] = a3\n 26291: a1 = u64 [s1 + 0x220]\n 26295: a1 = reverse a1\n 26297: u8 [a0 + 0x8] = a1\n 26300: a2 = a1 >> 0x38\n 26303: u64 [s1 + 0x150] = a2\n 26307: u8 [a0 + 0xf] = a2\n 26310: a2 = a1 >> 0x30\n 26313: u64 [s1 + 0x148] = a2\n 26317: u8 [a0 + 0xe] = a2\n 26320: a2 = a1 >> 0x28\n 26323: u64 [s1 + 0x140] = a2\n 26327: u8 [a0 + 0xd] = a2\n 26330: a2 = a1 >> 0x20\n 26333: u64 [s1 + 0x138] = a2\n 26337: u8 [a0 + 0xc] = a2\n 26340: a2 = a1 >> 0x18\n 26343: u64 [s1 + 0x130] = a2\n 26347: u8 [a0 + 0xb] = a2\n 26350: a2 = a1 >> 0x10\n 26353: u64 [s1 + 0x128] = a2\n 26357: u8 [a0 + 0xa] = a2\n 26360: u64 [s1 + 0x160] = a1\n 26364: a1 = a1 >> 0x8\n 26367: u64 [s1 + 0x120] = a1\n 26371: u8 [a0 + 0x9] = a1\n 26374: a1 = u64 [s1 + 0x228]\n 26378: a1 = reverse a1\n 26380: u8 [a0] = a1\n 26382: a2 = a1 >> 0x38\n 26385: u64 [s1 + 0x118] = a2\n 26389: u8 [a0 + 0x7] = a2\n 26392: a2 = a1 >> 0x30\n 26395: u64 [s1 + 0x110] = a2\n 26399: u8 [a0 + 0x6] = a2\n 26402: a2 = a1 >> 0x28\n 26405: u64 [s1 + 0x108] = a2\n 26409: u8 [a0 + 0x5] = a2\n 26412: a2 = a1 >> 0x20\n 26415: u64 [s1 + 0x100] = a2\n 26419: u8 [a0 + 0x4] = a2\n 26422: a2 = a1 >> 0x18\n 26425: u64 [s1 + 0xf8] = a2\n 26429: u8 [a0 + 0x3] = a2\n 26432: a2 = a1 >> 0x10\n 26435: u64 [s1 + 0xf0] = a2\n 26439: u8 [a0 + 0x2] = a2\n 26442: u64 [s1 + 0x158] = a1\n 26446: a1 = a1 >> 0x8\n 26449: u64 [s1 + 0xe8] = a1\n 26453: u8 [a0 + 0x1] = a1\n 26456: a0 = 0x20\n 26459: a1 = 0x20\n 26462: ra = 218, jump @0\n      : @432 [@dyn 109] (gas: 35)\n 26468: u8 [a0 + 31] = 0x3\n 26472: u8 [a0 + 30] = 0\n 26475: u8 [a0 + 29] = 0\n 26478: u8 [a0 + 28] = 0\n 26481: u8 [a0 + 27] = 0\n 26484: u8 [a0 + 26] = 0\n 26487: u8 [a0 + 25] = 0\n 26490: u8 [a0 + 24] = 0\n 26493: u8 [a0 + 23] = 0\n 26496: u8 [a0 + 22] = 0\n 26499: u8 [a0 + 21] = 0\n 26502: u8 [a0 + 20] = 0\n 26505: u8 [a0 + 19] = 0\n 26508: u8 [a0 + 18] = 0\n 26511: u8 [a0 + 17] = 0\n 26514: u8 [a0 + 16] = 0\n 26517: u8 [a0 + 15] = 0\n 26520: u8 [a0 + 14] = 0\n 26523: u8 [a0 + 13] = 0\n 26526: u8 [a0 + 12] = 0\n 26529: u8 [a0 + 11] = 0\n 26532: u8 [a0 + 10] = 0\n 26535: u8 [a0 + 9] = 0\n 26538: u8 [a0 + 8] = 0\n 26541: u8 [a0 + 7] = 0\n 26544: u8 [a0 + 6] = 0\n 26547: u8 [a0 + 5] = 0\n 26550: u8 [a0 + 4] = 0\n 26553: u8 [a0 + 3] = 0\n 26556: u8 [a0 + 2] = 0\n 26559: u8 [a0 + 1] = 0\n 26562: u8 [a0 + 0] = 0\n 26564: a1 = 0x40\n 26567: a0 = 0\n 26569: ra = 220, jump @0\n      : @433 [@dyn 110] (gas: 35)\n 26575: a1 = sp + 0xffffffffffffffe0\n 26578: a1 = a1 & 0xffffffffffffffe0\n 26581: u64 [s1 + 0x218] = a1\n 26585: sp = a1\n 26587: i32 a0 = a0 + 0\n 26589: i32 a2 = a1 + 0\n 26591: a1 = 0x40\n 26594: ecalli 6 // 'hash_keccak_256'\n 26596: a3 = u64 [s1 + 0x218]\n 26600: a0 = u64 [a3 + 0x18]\n 26603: a1 = u64 [a3 + 0x10]\n 26606: a2 = u64 [a3 + 0x8]\n 26609: a3 = u64 [a3]\n 26611: a0 = reverse a0\n 26613: a1 = reverse a1\n 26615: a2 = reverse a2\n 26617: a3 = reverse a3\n 26619: a4 = s1 + 0x7ff\n 26623: a4 = a4 + 0x1b9\n 26627: u64 [a4 + 0x2e0] = a3\n 26631: u64 [a4 + 0x2d8] = a2\n 26635: u64 [a4 + 0x2d0] = a1\n 26639: u64 [a4 + 0x2c8] = a0\n 26643: u64 [a4 + 608] = 0\n 26647: u64 [a4 + 600] = 0\n 26651: u64 [a4 + 592] = 0\n 26655: u64 [a4 + 584] = 0\n 26659: u32 [a4 + 744] = 0x20\n 26664: a2 = 0xffffffffffffffff\n 26667: a0 = 0\n 26669: a1 = u64 [s1 + 0x98]\n 26673: a3 = u64 [s1 + 0x90]\n 26677: a4 = u64 [s1 + 0x88]\n 26681: ecalli 5 // 'get_storage'\n 26683: fallthrough\n      : @434 (gas: 20)\n 26684: a2 = s1 + 0x7ff\n 26688: a2 = a2 + 0x1b9\n 26692: a0 = u64 [a2 + 0x250]\n 26696: a1 = u64 [a2 + 0x248]\n 26700: a2 = u64 [a2 + 0x258]\n 26704: a0 = a0 & 0xffffffffffffffff\n 26707: a1 = a1 & 0xffffffffffffffff\n 26710: a3 = u64 [s1 + 0xa0]\n 26714: a2 = a2 & a3\n 26717: a3 = u64 [s1 + 0xe0]\n 26721: a2 = a2 ^ a3\n 26724: a3 = u64 [s1 + 0xc8]\n 26728: a1 = a1 ^ a3\n 26731: a1 = a1 | a2\n 26734: a2 = u64 [s1 + 0xd0]\n 26738: a0 = a0 ^ a2\n 26741: a2 = u64 [s1 + 0xd8]\n 26745: a0 = a0 | a2\n 26748: a0 = a0 | a1\n 26751: jump @427 if a0 != 0\n      : @435 (gas: 20)\n 26755: a1 = u64 [s1 + 0x1e8]\n 26759: a1 = a1 + 0x1\n 26762: a0 = a1 <u 0x1\n 26765: a2 = u64 [s1 + 0x200]\n 26769: a2 = a2 + a0\n 26772: a0 = a1 | a2\n 26775: a0 = a0 <u 0x1\n 26778: a4 = u64 [s1 + 0x1f8]\n 26782: a3 = a4 + a0\n 26785: a0 = a3 <u a4\n 26788: a4 = u64 [s1 + 0x1f0]\n 26792: a0 = a0 + a4\n 26795: u64 [s1 + 0x218] = a2\n 26799: u64 [s1 + 0x208] = a0\n 26803: a0 = a0 | a2\n 26806: u64 [s1 + 0x80] = a1\n 26810: u64 [s1 + 0x210] = a3\n 26814: a1 = a1 | a3\n 26817: a0 = a0 | a1\n 26820: jump @454 if a0 == 0\n      : @436 (gas: 3)\n 26824: a1 = 0x20\n 26827: a0 = u64 [s1 + 0x38]\n 26830: ra = 222, jump @0\n      : @437 [@dyn 111] (gas: 108)\n 26836: a1 = u8 [a0 + 0x1]\n 26839: a2 = u8 [a0]\n 26841: a3 = u8 [a0 + 0x2]\n 26844: a4 = u8 [a0 + 0x3]\n 26847: a1 = a1 << 0x8\n 26850: a1 = a1 | a2\n 26853: a3 = a3 << 0x10\n 26856: a4 = a4 << 0x18\n 26859: a3 = a3 | a4\n 26862: a1 = a1 | a3\n 26865: a2 = u8 [a0 + 0x5]\n 26868: a3 = u8 [a0 + 0x4]\n 26871: a4 = u8 [a0 + 0x6]\n 26874: a5 = u8 [a0 + 0x7]\n 26877: a2 = a2 << 0x8\n 26880: a2 = a2 | a3\n 26883: a4 = a4 << 0x10\n 26886: a5 = a5 << 0x18\n 26889: a4 = a4 | a5\n 26892: a2 = a2 | a4\n 26895: a2 = a2 << 0x20\n 26898: t0 = a2 | a1\n 26901: a2 = u8 [a0 + 0x9]\n 26904: a3 = u8 [a0 + 0x8]\n 26907: a4 = u8 [a0 + 0xa]\n 26910: a5 = u8 [a0 + 0xb]\n 26913: a2 = a2 << 0x8\n 26916: a2 = a2 | a3\n 26919: a4 = a4 << 0x10\n 26922: a5 = a5 << 0x18\n 26925: a4 = a4 | a5\n 26928: a2 = a2 | a4\n 26931: a3 = u8 [a0 + 0xd]\n 26934: a4 = u8 [a0 + 0xc]\n 26937: a5 = u8 [a0 + 0xe]\n 26940: a1 = u8 [a0 + 0xf]\n 26943: a3 = a3 << 0x8\n 26946: a3 = a3 | a4\n 26949: a5 = a5 << 0x10\n 26952: a1 = a1 << 0x18\n 26955: a1 = a1 | a5\n 26958: a1 = a1 | a3\n 26961: a1 = a1 << 0x20\n 26964: t1 = a1 | a2\n 26967: a1 = u8 [a0 + 0x11]\n 26970: a3 = u8 [a0 + 0x10]\n 26973: a4 = u8 [a0 + 0x12]\n 26976: a5 = u8 [a0 + 0x13]\n 26979: a1 = a1 << 0x8\n 26982: a1 = a1 | a3\n 26985: a4 = a4 << 0x10\n 26988: a5 = a5 << 0x18\n 26991: a4 = a4 | a5\n 26994: a1 = a1 | a4\n 26997: a3 = u8 [a0 + 0x15]\n 27000: a4 = u8 [a0 + 0x14]\n 27003: a5 = u8 [a0 + 0x16]\n 27006: a2 = u8 [a0 + 0x17]\n 27009: a3 = a3 << 0x8\n 27012: a3 = a3 | a4\n 27015: a5 = a5 << 0x10\n 27018: a2 = a2 << 0x18\n 27021: a2 = a2 | a5\n 27024: a2 = a2 | a3\n 27027: a2 = a2 << 0x20\n 27030: a3 = a2 | a1\n 27033: a1 = u8 [a0 + 0x19]\n 27036: a2 = u8 [a0 + 0x18]\n 27039: a4 = u8 [a0 + 0x1a]\n 27042: a5 = u8 [a0 + 0x1b]\n 27045: a1 = a1 << 0x8\n 27048: a1 = a1 | a2\n 27051: a4 = a4 << 0x10\n 27054: a5 = a5 << 0x18\n 27057: a4 = a4 | a5\n 27060: a1 = a1 | a4\n 27063: a2 = u8 [a0 + 0x1d]\n 27066: a4 = u8 [a0 + 0x1c]\n 27069: a5 = u8 [a0 + 0x1e]\n 27072: a0 = u8 [a0 + 0x1f]\n 27075: a2 = a2 << 0x8\n 27078: a2 = a2 | a4\n 27081: a5 = a5 << 0x10\n 27084: a0 = a0 << 0x18\n 27087: a0 = a0 | a5\n 27090: a0 = a0 | a2\n 27093: a0 = a0 << 0x20\n 27096: a0 = a0 | a1\n 27099: a0 = reverse a0\n 27101: a1 = reverse a3\n 27103: t2 = reverse t1\n 27105: a4 = reverse t0\n 27107: a5 = u64 [s1 + 0x200]\n 27111: a3 = a5 ^ a1\n 27114: a1 = a5 <u a1\n 27117: t0 = u64 [s1 + 0x1e8]\n 27121: a0 = t0 <u a0\n 27124: a0 = a1 if a3 != 0\n 27127: a3 = u64 [s1 + 0x1f0]\n 27131: a1 = a3 ^ a4\n 27134: a2 = a3 <u a4\n 27137: t1 = u64 [s1 + 0x1f8]\n 27141: a4 = t1 <u t2\n 27144: a4 = a2 if a1 != 0\n 27147: a2 = t1 ^ t2\n 27150: a1 = a1 | a2\n 27153: a0 = a4 if a1 != 0\n 27156: jump @456 if a0 == 0\n      : @438 (gas: 36)\n 27160: a0 = t0 >> 0x3b\n 27163: a1 = a5 << 0x5\n 27166: a1 = a1 | a0\n 27169: a0 = t0 << 0x5\n 27172: a2 = u64 [s1 + 0x68]\n 27175: a0 = a0 + a2\n 27178: a2 = a0 <u a2\n 27181: a4 = u64 [s1 + 0x60]\n 27184: a1 = a1 + a4\n 27187: a1 = a1 + a2\n 27190: t0 = a1 ^ a4\n 27193: a4 = a1 <u a4\n 27196: a4 = a2 if t0 == 0\n 27199: a2 = t1 >> 0x3b\n 27202: a3 = a3 << 0x5\n 27205: t0 = a3 | a2\n 27208: a3 = a5 >> 0x3b\n 27211: a5 = t1 << 0x5\n 27214: a3 = a3 | a5\n 27217: a2 = u64 [s1 + 0x70]\n 27220: a3 = a3 + a2\n 27223: a5 = a3 <u a2\n 27226: a2 = u64 [s1 + 0x78]\n 27229: a2 = a2 + t0\n 27232: a2 = a2 + a5\n 27235: a4 = a4 + a3\n 27238: a3 = a4 <u a3\n 27241: a2 = a2 + a3\n 27244: a1 = a1 | a2\n 27247: a2 = a0 | a4\n 27250: a2 = a2 | a1\n 27253: a1 = a1 | a4\n 27256: a2 = a2 >> 0x20\n 27259: a1 = a1 << 0x20\n 27262: a1 = a1 | a2\n 27265: jump @440 if a1 == 0\n      : @439 (gas: 1)\n 27268: jump @309\n      : @440 (gas: 3)\n 27271: i32 a0 = a0 + 0\n 27273: a1 = 0x20\n 27276: ra = 224, jump @0\n      : @441 [@dyn 112] (gas: 84)\n 27282: a1 = u64 [s1 + 0x1a0]\n 27286: u8 [a0 + 0x10] = a1\n 27289: a1 = u64 [s1 + 0x150]\n 27293: u8 [a0 + 0xf] = a1\n 27296: a1 = u64 [s1 + 0x148]\n 27300: u8 [a0 + 0xe] = a1\n 27303: a1 = u64 [s1 + 0x140]\n 27307: u8 [a0 + 0xd] = a1\n 27310: a1 = u64 [s1 + 0x138]\n 27314: u8 [a0 + 0xc] = a1\n 27317: a1 = u64 [s1 + 0x130]\n 27321: u8 [a0 + 0xb] = a1\n 27324: a1 = u64 [s1 + 0x128]\n 27328: u8 [a0 + 0xa] = a1\n 27331: a1 = u64 [s1 + 0x120]\n 27335: u8 [a0 + 0x9] = a1\n 27338: a1 = u64 [s1 + 0x160]\n 27342: u8 [a0 + 0x8] = a1\n 27345: a1 = u64 [s1 + 0x118]\n 27349: u8 [a0 + 0x7] = a1\n 27352: a1 = u64 [s1 + 0x110]\n 27356: u8 [a0 + 0x6] = a1\n 27359: a1 = u64 [s1 + 0x108]\n 27363: u8 [a0 + 0x5] = a1\n 27366: a1 = u64 [s1 + 0x100]\n 27370: u8 [a0 + 0x4] = a1\n 27373: a1 = u64 [s1 + 0xf8]\n 27377: u8 [a0 + 0x3] = a1\n 27380: a1 = u64 [s1 + 0xf0]\n 27384: u8 [a0 + 0x2] = a1\n 27387: a1 = u64 [s1 + 0xe8]\n 27391: u8 [a0 + 0x1] = a1\n 27394: a1 = u64 [s1 + 0x158]\n 27398: u8 [a0] = a1\n 27400: a1 = u64 [s1 + 0x1a8]\n 27404: u8 [a0 + 0x18] = a1\n 27407: a1 = u64 [s1 + 0x198]\n 27411: u8 [a0 + 0x17] = a1\n 27414: a1 = u64 [s1 + 0x190]\n 27418: u8 [a0 + 0x16] = a1\n 27421: a1 = u64 [s1 + 0x188]\n 27425: u8 [a0 + 0x15] = a1\n 27428: a1 = u64 [s1 + 0x180]\n 27432: u8 [a0 + 0x14] = a1\n 27435: a1 = u64 [s1 + 0x178]\n 27439: u8 [a0 + 0x13] = a1\n 27442: a1 = u64 [s1 + 0x170]\n 27446: u8 [a0 + 0x12] = a1\n 27449: a1 = u64 [s1 + 0x168]\n 27453: u8 [a0 + 0x11] = a1\n 27456: a1 = u64 [s1 + 0x1d8]\n 27460: u8 [a0 + 0x1f] = a1\n 27463: a1 = u64 [s1 + 0x1d0]\n 27467: u8 [a0 + 0x1e] = a1\n 27470: a1 = u64 [s1 + 0x1c8]\n 27474: u8 [a0 + 0x1d] = a1\n 27477: a1 = u64 [s1 + 0x1c0]\n 27481: u8 [a0 + 0x1c] = a1\n 27484: a1 = u64 [s1 + 0x1b8]\n 27488: u8 [a0 + 0x1b] = a1\n 27491: a1 = u64 [s1 + 0x1b0]\n 27495: u8 [a0 + 0x1a] = a1\n 27498: a1 = u64 [s1 + 0x40]\n 27501: ra = u64 [s1 + 0x80]\n 27505: a1 = ra ^ a1\n 27508: a2 = u64 [s1 + 0x50]\n 27511: t1 = u64 [s1 + 0x210]\n 27515: a2 = t1 ^ a2\n 27518: a4 = a1 | a2\n 27521: a2 = u64 [s1 + 0x48]\n 27524: t2 = u64 [s1 + 0x218]\n 27528: a2 = t2 ^ a2\n 27531: a3 = u64 [s1 + 0x58]\n 27534: a1 = u64 [s1 + 0x208]\n 27538: a3 = a3 ^ a1\n 27541: a2 = a2 | a3\n 27544: t0 = a4 | a2\n 27547: a2 = u64 [s1 + 0x1e0]\n 27551: u8 [a0 + 0x19] = a2\n 27554: a5 = u64 [s1 + 0x238]\n 27558: a2 = u64 [s1 + 0x230]\n 27562: a3 = u64 [s1 + 0x228]\n 27566: a4 = u64 [s1 + 0x220]\n 27570: jump @428 if t0 != 0\n      : @442 (gas: 1)\n 27574: jump @213\n      : @443 (gas: 266)\n 27577: a0 = reverse a5\n 27579: a1 = reverse a4\n 27581: ra = 0x1\n 27584: a2 = a1\n 27586: a2 = ra if a0 == 0\n 27589: a3 = maxu(a1, ra)\n 27592: a3 = a2 if a0 != 0\n 27595: a2 = u64 [s1 + 0x218]\n 27599: a5 = reverse a2\n 27601: u64 [s1 + 0x208] = a5\n 27605: a2 = reverse t2\n 27607: u64 [s1 + 0x200] = a2\n 27611: u64 [s1 + 0x220] = t0\n 27615: t0 = a2 >u 0\n 27617: a4 = a5 >u 0\n 27619: a4 = t0 if a5 == 0\n 27622: a1 = ra if a4 == 0\n 27625: a5 = a5 | a2\n 27628: a1 = a3 if a5 == 0\n 27631: u64 [s1 + 0x210] = a1\n 27635: a1 = a0\n 27637: a1 = 0 if a4 == 0\n 27639: a1 = a0 if a5 == 0\n 27642: u64 [s1 + 0x1f8] = a1\n 27646: a1 = 0x100000000\n 27656: ra = u64 [s1 + 0x68]\n 27659: a0 = ra\n 27661: a4 = u64 [s1 + 0x60]\n 27664: a0 = a1 if a4 == 0\n 27667: a2 = maxu(ra, a1)\n 27670: a2 = a0 if a4 != 0\n 27673: a0 = u64 [s1 + 0x70]\n 27676: t0 = a0 >u 0\n 27678: a5 = u64 [s1 + 0x78]\n 27681: a3 = a5 >u 0\n 27683: a3 = t0 if a5 == 0\n 27686: t0 = t1\n 27688: t1 = u64 [s1 + 0x230]\n 27692: t2 = ra\n 27694: t2 = a1 if a3 == 0\n 27697: ra = a0 | a5\n 27700: t2 = a2 if ra == 0\n 27703: a2 = a4\n 27705: a2 = 0 if a3 == 0\n 27707: a2 = a4 if ra == 0\n 27710: a0 = u64 [s1 + 0x18]\n 27713: a0 = a0 ^ 0xffffffffffffffff\n 27716: t2 = t2 + a0\n 27719: u64 [s1 + 0x218] = t2\n 27723: a0 = t2 <u a0\n 27726: a3 = u64 [s1 + 0x20]\n 27729: a3 = a3 ^ 0xffffffffffffffff\n 27732: a2 = a2 + a3\n 27735: a4 = a2 + a0\n 27738: u64 [s1 + 0x1f0] = a4\n 27742: a2 = a4 ^ a3\n 27745: t2 = a4 <u a3\n 27748: t2 = a0 if a2 == 0\n 27751: a5 = u64 [s1 + 0x220]\n 27755: a0 = a5\n 27757: a0 = a1 if t1 == 0\n 27760: a2 = maxu(a5, a1)\n 27763: a2 = a0 if t1 != 0\n 27766: u64 [s1 + 0x228] = t0\n 27770: a4 = t0 >u 0\n 27772: a0 = u64 [s1 + 0x238]\n 27776: a3 = a0 >u 0\n 27778: a3 = a4 if a0 == 0\n 27781: a1 = a5 if a3 != 0\n 27784: a4 = t0 | a0\n 27787: a1 = a2 if a4 == 0\n 27790: a0 = t1\n 27792: a0 = 0 if a3 == 0\n 27794: a0 = t1 if a4 == 0\n 27797: a3 = u64 [s1 + 0xf0]\n 27801: a2 = a1 - a3\n 27804: a4 = a2 + 0xffffffffffffffdf\n 27807: u64 [s1 + 0x1e8] = a4\n 27811: a2 = a4 <u a2\n 27814: a3 = a1 <u a3\n 27817: ra = u64 [s1 + 0xe8]\n 27821: a1 = a0 - ra\n 27824: a4 = a1 - a3\n 27827: a1 = a4 + a2\n 27830: t0 = a1 + 0xffffffffffffffff\n 27833: a1 = t0 ^ a4\n 27836: t1 = t0 <u a4\n 27839: t1 = a2 if a1 == 0\n 27842: a2 = a0 ^ ra\n 27845: ra = a0 <u ra\n 27848: ra = a3 if a2 == 0\n 27851: a0 = u64 [s1 + 0x70]\n 27854: a2 = a0\n 27856: a5 = u64 [s1 + 0x78]\n 27859: a2 = 0 if a5 == 0\n 27861: a2 = a0 if a5 == 0\n 27864: a0 = u64 [s1 + 0x28]\n 27867: a0 = a0 ^ 0xffffffffffffffff\n 27870: u64 [s1 + 0x1d8] = a0\n 27874: a2 = a2 + a0\n 27877: a0 = a2 + t2\n 27880: u64 [s1 + 0x1e0] = a0\n 27884: a0 = a0 << 0x3b\n 27887: a5 = u64 [s1 + 0x1f0]\n 27891: a4 = a5 >> 0x5\n 27894: t2 = a4 | a0\n 27897: a0 = u64 [s1 + 0x218]\n 27901: a0 = a0 >> 0x5\n 27904: a5 = a5 << 0x3b\n 27907: a5 = a5 | a0\n 27910: u64 [s1 + 0x218] = a5\n 27914: a1 = u64 [s1 + 0x228]\n 27918: a0 = a1\n 27920: a3 = u64 [s1 + 0x238]\n 27924: a0 = 0 if a3 == 0\n 27926: a0 = a1 if a3 == 0\n 27929: a1 = u64 [s1 + 0xf8]\n 27933: a1 = a0 - a1\n 27936: u64 [s1 + 0x1c0] = a1\n 27940: a1 = a1 - ra\n 27943: u64 [s1 + 0x1d0] = a1\n 27947: a1 = a1 + 0xffffffffffffffff\n 27950: u64 [s1 + 0x1f0] = a1\n 27954: t1 = t1 + a1\n 27957: a3 = t1 << 0x3b\n 27960: a1 = t0 >> 0x5\n 27963: a3 = a3 | a1\n 27966: u64 [s1 + 0x1c8] = a3\n 27970: t0 = t0 << 0x3b\n 27973: a1 = u64 [s1 + 0x1e8]\n 27977: a1 = a1 >> 0x5\n 27980: a1 = a1 | t0\n 27983: u64 [s1 + 0x1e8] = a1\n 27987: t0 = t2 ^ a3\n 27990: a3 = t2 <u a3\n 27993: a4 = a5 <u a1\n 27996: a4 = a3 if t0 != 0\n 27999: a1 = u64 [s1 + 0x30]\n 28002: a1 = a1 ^ 0xffffffffffffffff\n 28005: a3 = u64 [s1 + 0x78]\n 28008: a1 = a1 + a3\n 28011: a3 = u64 [s1 + 0x1d8]\n 28015: a3 = a2 <u a3\n 28018: a1 = a1 + a3\n 28021: a3 = u64 [s1 + 0x1e0]\n 28025: a2 = a3 <u a2\n 28028: a1 = a1 + a2\n 28031: a2 = a3 >> 0x5\n 28034: a3 = a1 << 0x3b\n 28037: t0 = a2 | a3\n 28040: a2 = u64 [s1 + 0x1c0]\n 28044: a3 = a2 <u ra\n 28047: a2 = u64 [s1 + 0xf8]\n 28051: a0 = a0 <u a2\n 28054: a2 = u64 [s1 + 0xe0]\n 28058: a5 = u64 [s1 + 0x238]\n 28062: a5 = a5 - a2\n 28065: a5 = a5 - a0\n 28068: a5 = a5 - a3\n 28071: a0 = u64 [s1 + 0x1d0]\n 28075: a0 = a0 <u 0x1\n 28078: a5 = a5 - a0\n 28081: a0 = u64 [s1 + 0x1f0]\n 28085: a0 = t1 <u a0\n 28088: a0 = a0 + a5\n 28091: a3 = t1 >> 0x5\n 28094: a5 = a0 << 0x3b\n 28097: a3 = a3 | a5\n 28100: ra = a1 >> 0x5\n 28103: a5 = a0 >> 0x5\n 28106: t1 = t0 <u a3\n 28109: a0 = ra ^ a5\n 28112: a1 = ra <u a5\n 28115: a1 = t1 if a0 == 0\n 28118: a2 = t0 ^ a3\n 28121: a0 = a0 | a2\n 28124: a1 = a4 if a0 == 0\n 28127: a4 = u64 [s1 + 0x218]\n 28131: a0 = u64 [s1 + 0x1e8]\n 28135: a4 = a0 if a1 == 0\n 28138: u64 [s1 + 0x218] = a4\n 28142: a0 = u64 [s1 + 0x1c8]\n 28146: t2 = a0 if a1 == 0\n 28149: t0 = a3 if a1 == 0\n 28152: ra = a5 if a1 == 0\n 28155: a0 = u64 [s1 + 0x210]\n 28159: a2 = a0 + 0xffffffffffffffff\n 28162: u64 [s1 + 0x1f0] = a2\n 28166: a0 = a0 <u 0x1\n 28169: a5 = u64 [s1 + 0x1f8]\n 28173: t1 = a5 - a0\n 28176: a3 = t1 ^ t2\n 28179: a1 = t1 <u t2\n 28182: a0 = a2 <u a4\n 28185: a0 = a1 if a3 != 0\n 28188: a4 = u64 [s1 + 0x200]\n 28192: a1 = a4\n 28194: a2 = u64 [s1 + 0x208]\n 28198: a1 = 0 if a2 == 0\n 28200: a1 = a4 if a2 == 0\n 28203: a4 = a2\n 28205: a2 = u64 [s1 + 0x210]\n 28209: a2 = a2 | a5\n 28212: a2 = a2 <u 0x1\n 28215: a5 = a1 - a2\n 28218: a1 = a1 <u a2\n 28221: a2 = a4 - a1\n 28224: a3 = a2 ^ ra\n 28227: a4 = a2 <u ra\n 28230: a1 = a5 <u t0\n 28233: a1 = a4 if a3 != 0\n 28236: a4 = a5 ^ t0\n 28239: a3 = a3 | a4\n 28242: a0 = a1 if a3 != 0\n 28245: ra = a2 if a0 != 0\n 28248: t0 = a5 if a0 != 0\n 28251: t2 = t1 if a0 != 0\n 28254: a1 = u64 [s1 + 0x218]\n 28258: a2 = u64 [s1 + 0x1f0]\n 28262: a1 = a2 if a0 != 0\n 28265: a0 = a1 >> 0x3b\n 28268: a2 = a1\n 28270: a1 = t2 << 0x5\n 28273: a0 = a0 | a1\n 28276: a1 = a2 << 0x5\n 28279: a5 = u64 [s1 + 0xe8]\n 28283: a3 = a5 + a0\n 28286: a0 = u64 [s1 + 0xf0]\n 28290: t1 = a0 + a1\n 28293: a1 = t1 <u a0\n 28296: a0 = a3 + a1\n 28299: a2 = a0 ^ a5\n 28302: a3 = a0 <u a5\n 28305: a3 = a1 if a2 == 0\n 28308: a1 = t2 >> 0x3b\n 28311: a2 = t0 << 0x5\n 28314: a1 = a1 | a2\n 28317: a2 = t0 >> 0x3b\n 28320: ra = ra << 0x5\n 28323: a2 = ra | a2\n 28326: a4 = u64 [s1 + 0x220]\n 28330: a5 = u64 [s1 + 0xe0]\n 28334: a2 = a2 + a5\n 28337: a5 = u64 [s1 + 0xf8]\n 28341: a1 = a1 + a5\n 28344: a5 = a1 <u a5\n 28347: a2 = a2 + a5\n 28350: ra = a1 + a3\n 28353: a1 = ra <u a1\n 28356: t0 = a2 + a1\n 28359: a1 = t1 + 0x60\n 28362: u64 [s1 + 0x118] = a1\n 28366: a1 = a1 <u t1\n 28369: t1 = u64 [s1 + 0x70]\n 28372: a5 = u64 [s1 + 0x60]\n 28375: a3 = u64 [s1 + 0x68]\n 28378: a2 = a0 + a1\n 28381: u64 [s1 + 0x110] = a2\n 28385: a2 = a2 <u a0\n 28388: a2 = a1 if a1 == 0\n 28391: a2 = a2 + ra\n 28394: u64 [s1 + 0x108] = a2\n 28398: a0 = a2 <u ra\n 28401: a0 = a0 + t0\n 28404: u64 [s1 + 0x100] = a0\n 28408: fallthrough\n      : @444 (gas: 9)\n 28409: a0 = a3 | t1\n 28412: a1 = u64 [s1 + 0x78]\n 28415: a1 = a1 | a5\n 28418: a0 = a0 | a1\n 28421: a0 = a0 >> 0x20\n 28424: a1 = a1 | t1\n 28427: a1 = a1 << 0x20\n 28430: a0 = a0 | a1\n 28433: jump @446 if a0 == 0\n      : @445 (gas: 1)\n 28436: jump @309\n      : @446 (gas: 7)\n 28439: u64 [s1 + 0x70] = t1\n 28442: u64 [s1 + 0x60] = a5\n 28445: i32 a0 = a3 + 0\n 28447: a1 = 0x20\n 28450: u64 [s1 + 0x68] = a3\n 28453: u64 [s1 + 0x220] = a4\n 28457: ra = 226, jump @0\n      : @447 [@dyn 113] (gas: 12)\n 28463: a4 = u64 [s1 + 0x220]\n 28467: a5 = u64 [s1 + 0x228]\n 28471: a1 = a4 | a5\n 28474: a3 = u64 [s1 + 0x238]\n 28478: t0 = u64 [s1 + 0x230]\n 28482: a2 = t0 | a3\n 28485: a1 = a1 | a2\n 28488: a1 = a1 >> 0x20\n 28491: a2 = a2 | a5\n 28494: a2 = a2 << 0x20\n 28497: a1 = a1 | a2\n 28500: jump @449 if a1 == 0\n      : @448 (gas: 1)\n 28503: jump @309\n      : @449 (gas: 70)\n 28506: a1 = u8 [a0]\n 28508: u64 [s1 + 0x218] = a1\n 28512: a1 = u8 [a0 + 0x1]\n 28515: u64 [s1 + 0x210] = a1\n 28519: a1 = u8 [a0 + 0x2]\n 28522: u64 [s1 + 0x208] = a1\n 28526: a1 = u8 [a0 + 0x3]\n 28529: u64 [s1 + 0x200] = a1\n 28533: a1 = u8 [a0 + 0x4]\n 28536: u64 [s1 + 0x1f8] = a1\n 28540: a1 = u8 [a0 + 0x5]\n 28543: u64 [s1 + 0x1f0] = a1\n 28547: a1 = u8 [a0 + 0x6]\n 28550: u64 [s1 + 0x1e8] = a1\n 28554: a1 = u8 [a0 + 0x7]\n 28557: u64 [s1 + 0x1e0] = a1\n 28561: a1 = u8 [a0 + 0x8]\n 28564: u64 [s1 + 0x1d8] = a1\n 28568: a1 = u8 [a0 + 0x9]\n 28571: u64 [s1 + 0x1d0] = a1\n 28575: a1 = u8 [a0 + 0xa]\n 28578: u64 [s1 + 0x1c8] = a1\n 28582: a1 = u8 [a0 + 0xb]\n 28585: u64 [s1 + 0x1c0] = a1\n 28589: a1 = u8 [a0 + 0xc]\n 28592: u64 [s1 + 0x1b8] = a1\n 28596: a1 = u8 [a0 + 0xd]\n 28599: u64 [s1 + 0x1b0] = a1\n 28603: a1 = u8 [a0 + 0xe]\n 28606: u64 [s1 + 0x1a8] = a1\n 28610: a1 = u8 [a0 + 0xf]\n 28613: u64 [s1 + 0x1a0] = a1\n 28617: a1 = u8 [a0 + 0x10]\n 28620: u64 [s1 + 0x198] = a1\n 28624: a1 = u8 [a0 + 0x11]\n 28627: u64 [s1 + 0x190] = a1\n 28631: a1 = u8 [a0 + 0x12]\n 28634: u64 [s1 + 0x188] = a1\n 28638: a1 = u8 [a0 + 0x13]\n 28641: u64 [s1 + 0x180] = a1\n 28645: a1 = u8 [a0 + 0x14]\n 28648: u64 [s1 + 0x178] = a1\n 28652: a1 = u8 [a0 + 0x15]\n 28655: u64 [s1 + 0x170] = a1\n 28659: a1 = u8 [a0 + 0x16]\n 28662: u64 [s1 + 0x168] = a1\n 28666: a1 = u8 [a0 + 0x17]\n 28669: u64 [s1 + 0x160] = a1\n 28673: a1 = u8 [a0 + 0x18]\n 28676: u64 [s1 + 0x158] = a1\n 28680: a1 = u8 [a0 + 0x19]\n 28683: u64 [s1 + 0x150] = a1\n 28687: a1 = u8 [a0 + 0x1a]\n 28690: u64 [s1 + 0x148] = a1\n 28694: a1 = u8 [a0 + 0x1b]\n 28697: u64 [s1 + 0x140] = a1\n 28701: a1 = u8 [a0 + 0x1c]\n 28704: u64 [s1 + 0x138] = a1\n 28708: a1 = u8 [a0 + 0x1d]\n 28711: u64 [s1 + 0x130] = a1\n 28715: a1 = u8 [a0 + 0x1e]\n 28718: u64 [s1 + 0x128] = a1\n 28722: a0 = u8 [a0 + 0x1f]\n 28725: u64 [s1 + 0x120] = a0\n 28729: i32 a0 = a4 + 0\n 28731: a1 = 0x20\n 28734: u64 [s1 + 0x238] = a3\n 28738: u64 [s1 + 0x230] = t0\n 28742: u64 [s1 + 0x228] = a5\n 28746: ra = 228, jump @0\n      : @450 [@dyn 114] (gas: 110)\n 28752: a1 = u64 [s1 + 0x120]\n 28756: u8 [a0 + 0x1f] = a1\n 28759: a1 = u64 [s1 + 0x128]\n 28763: u8 [a0 + 0x1e] = a1\n 28766: a1 = u64 [s1 + 0x130]\n 28770: u8 [a0 + 0x1d] = a1\n 28773: a1 = u64 [s1 + 0x138]\n 28777: u8 [a0 + 0x1c] = a1\n 28780: a1 = u64 [s1 + 0x140]\n 28784: u8 [a0 + 0x1b] = a1\n 28787: a1 = u64 [s1 + 0x148]\n 28791: u8 [a0 + 0x1a] = a1\n 28794: a1 = u64 [s1 + 0x150]\n 28798: u8 [a0 + 0x19] = a1\n 28801: a1 = u64 [s1 + 0x158]\n 28805: u8 [a0 + 0x18] = a1\n 28808: a1 = u64 [s1 + 0x160]\n 28812: u8 [a0 + 0x17] = a1\n 28815: a1 = u64 [s1 + 0x168]\n 28819: u8 [a0 + 0x16] = a1\n 28822: a1 = u64 [s1 + 0x170]\n 28826: u8 [a0 + 0x15] = a1\n 28829: a1 = u64 [s1 + 0x178]\n 28833: u8 [a0 + 0x14] = a1\n 28836: a1 = u64 [s1 + 0x180]\n 28840: u8 [a0 + 0x13] = a1\n 28843: a1 = u64 [s1 + 0x188]\n 28847: u8 [a0 + 0x12] = a1\n 28850: a1 = u64 [s1 + 0x190]\n 28854: u8 [a0 + 0x11] = a1\n 28857: a1 = u64 [s1 + 0x198]\n 28861: u8 [a0 + 0x10] = a1\n 28864: a1 = u64 [s1 + 0x1a0]\n 28868: u8 [a0 + 0xf] = a1\n 28871: a1 = u64 [s1 + 0x1a8]\n 28875: u8 [a0 + 0xe] = a1\n 28878: a1 = u64 [s1 + 0x1b0]\n 28882: u8 [a0 + 0xd] = a1\n 28885: a1 = u64 [s1 + 0x1b8]\n 28889: u8 [a0 + 0xc] = a1\n 28892: a1 = u64 [s1 + 0x1c0]\n 28896: u8 [a0 + 0xb] = a1\n 28899: a1 = u64 [s1 + 0x1c8]\n 28903: u8 [a0 + 0xa] = a1\n 28906: a1 = u64 [s1 + 0x1d0]\n 28910: u8 [a0 + 0x9] = a1\n 28913: a1 = u64 [s1 + 0x1d8]\n 28917: u8 [a0 + 0x8] = a1\n 28920: a1 = u64 [s1 + 0x1e0]\n 28924: u8 [a0 + 0x7] = a1\n 28927: a1 = u64 [s1 + 0x1e8]\n 28931: u8 [a0 + 0x6] = a1\n 28934: a1 = u64 [s1 + 0x1f0]\n 28938: u8 [a0 + 0x5] = a1\n 28941: a1 = u64 [s1 + 0x1f8]\n 28945: u8 [a0 + 0x4] = a1\n 28948: a1 = u64 [s1 + 0x200]\n 28952: u8 [a0 + 0x3] = a1\n 28955: a1 = u64 [s1 + 0x208]\n 28959: u8 [a0 + 0x2] = a1\n 28962: a1 = u64 [s1 + 0x210]\n 28966: u8 [a0 + 0x1] = a1\n 28969: a1 = u64 [s1 + 0x218]\n 28973: u8 [a0] = a1\n 28975: a0 = u64 [s1 + 0x220]\n 28979: t2 = a0 + 0x20\n 28982: a2 = t2 <u a0\n 28985: a0 = u64 [s1 + 0x230]\n 28989: ra = a0 + a2\n 28992: a3 = ra <u a0\n 28995: a3 = a2 if a2 == 0\n 28998: a0 = u64 [s1 + 0x228]\n 29002: a2 = a0 + a3\n 29005: a3 = a2 <u a0\n 29008: t0 = u64 [s1 + 0x238]\n 29012: t0 = t0 + a3\n 29015: a0 = u64 [s1 + 0x68]\n 29018: a3 = a0 + 0x20\n 29021: a4 = a3 <u a0\n 29024: a0 = u64 [s1 + 0x60]\n 29027: a5 = a0 + a4\n 29030: a0 = a5 <u a0\n 29033: a0 = a4 if a4 == 0\n 29036: a1 = u64 [s1 + 0x70]\n 29039: a0 = a0 + a1\n 29042: a1 = a0 <u a1\n 29045: u64 [s1 + 0x230] = a1\n 29049: a4 = u64 [s1 + 0x108]\n 29053: a4 = a4 ^ a2\n 29056: a1 = u64 [s1 + 0x118]\n 29060: a1 = t2 ^ a1\n 29063: t1 = a1 | a4\n 29066: a4 = t0\n 29068: t0 = t2\n 29070: u64 [s1 + 0x238] = a4\n 29074: a1 = u64 [s1 + 0x100]\n 29078: a4 = a4 ^ a1\n 29081: a1 = u64 [s1 + 0x110]\n 29085: a1 = ra ^ a1\n 29088: a1 = a1 | a4\n 29091: t2 = t1 | a1\n 29094: a1 = u64 [s1 + 0x230]\n 29098: a4 = u64 [s1 + 0x78]\n 29101: a4 = a4 + a1\n 29104: u64 [s1 + 0x78] = a4\n 29107: t1 = a0\n 29109: a4 = t0\n 29111: u64 [s1 + 0x230] = ra\n 29115: u64 [s1 + 0x228] = a2\n 29119: jump @444 if t2 != 0\n      : @451 (gas: 29)\n 29123: t2 = u64 [s1 + 0xf0]\n 29127: a0 = t0 <u t2\n 29130: a4 = u64 [s1 + 0xe8]\n 29134: a1 = ra ^ a4\n 29137: a3 = ra <u a4\n 29140: a3 = a0 if a1 == 0\n 29143: a5 = u64 [s1 + 0xf8]\n 29147: a1 = a2 - a5\n 29150: a2 = a2 <u a5\n 29153: u64 [s1 + 0x230] = a2\n 29157: a5 = u64 [s1 + 0xe0]\n 29161: a2 = u64 [s1 + 0x238]\n 29165: t1 = a2 - a5\n 29168: a5 = a1 <u a3\n 29171: a2 = u64 [s1 + 0x230]\n 29175: a2 = a2 + a5\n 29178: a5 = t1 - a2\n 29181: a1 = a1 - a3\n 29184: a2 = ra - a4\n 29187: a2 = a2 - a0\n 29190: a0 = t0 - t2\n 29193: a2 = a2 | a5\n 29196: a3 = a0 | a1\n 29199: a3 = a3 | a2\n 29202: a1 = a1 | a2\n 29205: a3 = a3 >> 0x20\n 29208: a1 = a1 << 0x20\n 29211: a1 = a1 | a3\n 29214: jump @453 if a1 == 0\n      : @452 (gas: 1)\n 29217: jump @309\n      : @453 (gas: 5)\n 29220: i32 a1 = a0 + 0\n 29222: u64 [s1 + 0x238] = a1\n 29226: a0 = u64 [s1 + 0xd8]\n 29230: ra = 0xd6\n 29234: jump @0\n      : @454 (gas: 13)\n 29237: a0 = s1 + 0x1000\n 29241: u64 [a0 + 4294965456] = 0\n 29245: a0 = s1 + 0x1000\n 29249: u64 [a0 + 4294965448] = 0\n 29253: a0 = s1 + 0x1000\n 29257: u64 [a0 + 4294965440] = 0\n 29261: a0 = 0x4e487b7100000000\n 29271: a1 = s1 + 0x7ff\n 29275: a1 = a1 + 0xc1\n 29279: a2 = s1 + 0x1000\n 29283: u64 [a2 + 0xfffffffffffff8d8] = a0\n 29287: a0 = 0\n 29289: ra = 230, jump @23\n      : @455 [@dyn 115] (gas: 13)\n 29295: a0 = s1 + 0x1000\n 29299: u64 [a0 + 4294965432] = 0\n 29303: a0 = s1 + 0x1000\n 29307: u64 [a0 + 4294965424] = 0\n 29311: a1 = s1 + 0x1000\n 29315: u64 [a1 + 4294965408] = 0x11\n 29320: a0 = 0x4\n 29323: a1 = s1 + 0x7ff\n 29327: a1 = a1 + 0xa1\n 29331: a2 = s1 + 0x1000\n 29335: u64 [a2 + 4294965416] = 0\n 29339: ra = 0xea\n 29343: jump @23\n      : @456 (gas: 13)\n 29346: a0 = s1 + 0x1000\n 29350: u64 [a0 + 4294965520] = 0\n 29354: a0 = s1 + 0x1000\n 29358: u64 [a0 + 4294965512] = 0\n 29362: a0 = s1 + 0x1000\n 29366: u64 [a0 + 4294965504] = 0\n 29370: a0 = 0x4e487b7100000000\n 29380: a1 = s1 + 0x7ff\n 29384: a1 = a1 + 0x101\n 29388: a2 = s1 + 0x1000\n 29392: u64 [a2 + 0xfffffffffffff918] = a0\n 29396: a0 = 0\n 29398: ra = 232, jump @23\n      : @457 [@dyn 116] (gas: 12)\n 29404: a0 = s1 + 0x1000\n 29408: u64 [a0 + 4294965496] = 0\n 29412: a0 = s1 + 0x1000\n 29416: u64 [a0 + 4294965488] = 0\n 29420: a1 = s1 + 0x1000\n 29424: u64 [a1 + 4294965472] = 0x32\n 29429: a0 = 0x4\n 29432: a1 = s1 + 0x7ff\n 29436: a1 = a1 + 0xe1\n 29440: a2 = s1 + 0x1000\n 29444: u64 [a2 + 4294965480] = 0\n 29448: ra = 234, jump @23\n      : @458 [@dyn 117] (gas: 3)\n 29454: a1 = 0x24\n 29457: a0 = 0\n 29459: ra = 236, jump @0\n      : @459 [@dyn 118] (gas: 5)\n 29465: i32 a1 = a0 + 0\n 29467: a0 = 0x1\n 29470: a2 = 0x24\n 29473: ecalli 7 // 'seal_return'\n 29475: fallthrough\n      : @460 (gas: 3)\n 29476: a0 = 0\n 29478: a1 = 0\n 29480: ra = 238, jump @0\n      : @461 [@dyn 119] (gas: 7)\n 29486: i32 a1 = a0 + 0\n 29488: a0 = 0x1\n 29491: a2 = 0\n 29493: ecalli 7 // 'seal_return'\n 29495: a0 = 0\n 29497: ra = 0xee\n 29501: jump @0\n      : @462 (gas: 3)\n 29504: a0 = 0\n 29506: ra = 0xee\n 29510: jump @0\n      : @463 (gas: 8)\n 29513: a1 = u64 [s1 + 0x228]\n 29517: a1 = a1 << 0x20\n 29520: a1 = a1 >> 0x20\n 29523: u64 [s1 + 0x220] = a1\n 29527: i32 a0 = a0 + 0\n 29529: u64 [s1 + 0x228] = a0\n 29533: a1 = 0x20\n 29536: ra = 240, jump @0\n      : @464 [@dyn 120] (gas: 59)\n 29542: a1 = u64 [s1 + 0x220]\n 29546: a1 = reverse a1\n 29548: a2 = u64 [s1 + 0x230]\n 29552: a2 = reverse a2\n 29554: a3 = u64 [s1 + 0x238]\n 29558: a3 = reverse a3\n 29560: a4 = a3 >> 0x38\n 29563: u8 [a0 + 0x1f] = a4\n 29566: a4 = a3 >> 0x30\n 29569: u8 [a0 + 0x1e] = a4\n 29572: a4 = a3 >> 0x28\n 29575: u8 [a0 + 0x1d] = a4\n 29578: a4 = a3 >> 0x20\n 29581: u8 [a0 + 0x1c] = a4\n 29584: a4 = a3 >> 0x18\n 29587: u8 [a0 + 0x1b] = a4\n 29590: a4 = a3 >> 0x10\n 29593: u8 [a0 + 0x1a] = a4\n 29596: a4 = a3 >> 0x8\n 29599: u8 [a0 + 0x19] = a4\n 29602: u8 [a0 + 0x18] = a3\n 29605: u8 [a0 + 0x10] = a2\n 29608: u8 [a0 + 11] = 0\n 29611: u8 [a0 + 10] = 0\n 29614: u8 [a0 + 9] = 0\n 29617: u8 [a0 + 7] = 0\n 29620: u8 [a0 + 6] = 0\n 29623: u8 [a0 + 5] = 0\n 29626: u8 [a0 + 4] = 0\n 29629: u8 [a0 + 3] = 0\n 29632: u8 [a0 + 2] = 0\n 29635: u8 [a0 + 1] = 0\n 29638: u8 [a0 + 0] = 0\n 29640: a3 = a2 >> 0x38\n 29643: u8 [a0 + 0x17] = a3\n 29646: a3 = a2 >> 0x30\n 29649: u8 [a0 + 0x16] = a3\n 29652: a3 = a2 >> 0x28\n 29655: u8 [a0 + 0x15] = a3\n 29658: a3 = a2 >> 0x20\n 29661: u8 [a0 + 0x14] = a3\n 29664: a3 = a2 >> 0x18\n 29667: u8 [a0 + 0x13] = a3\n 29670: a3 = a2 >> 0x10\n 29673: u8 [a0 + 0x12] = a3\n 29676: a2 = a2 >> 0x8\n 29679: u8 [a0 + 0x11] = a2\n 29682: u8 [a0 + 0x8] = a1\n 29685: a2 = a1 >> 0x38\n 29688: u8 [a0 + 0xf] = a2\n 29691: a2 = a1 >> 0x30\n 29694: u8 [a0 + 0xe] = a2\n 29697: a2 = a1 >> 0x28\n 29700: u8 [a0 + 0xd] = a2\n 29703: a1 = a1 >> 0x20\n 29706: u8 [a0 + 0xc] = a1\n 29709: a1 = 0x20\n 29712: a0 = u64 [s1 + 0x228]\n 29716: ra = 242, jump @0\n      : @465 [@dyn 121] (gas: 5)\n 29722: i32 a1 = a0 + 0\n 29724: a2 = 0x20\n 29727: a0 = 0\n 29729: ecalli 7 // 'seal_return'\n 29731: fallthrough\n      : @466 (gas: 13)\n 29732: a0 = s1 + 0x1000\n 29736: u64 [a0 + 4294965392] = 0\n 29740: a0 = s1 + 0x1000\n 29744: u64 [a0 + 4294965384] = 0\n 29748: a0 = s1 + 0x1000\n 29752: u64 [a0 + 4294965376] = 0\n 29756: a0 = 0x4e487b7100000000\n 29766: a1 = s1 + 0x7ff\n 29770: a1 = a1 + 0x81\n 29774: a2 = s1 + 0x1000\n 29778: u64 [a2 + 0xfffffffffffff898] = a0\n 29782: a0 = 0\n 29784: ra = 244, jump @23\n      : @467 [@dyn 122] (gas: 13)\n 29790: a0 = s1 + 0x1000\n 29794: u64 [a0 + 4294965368] = 0\n 29798: a0 = s1 + 0x1000\n 29802: u64 [a0 + 4294965360] = 0\n 29806: a1 = s1 + 0x1000\n 29810: u64 [a1 + 4294965344] = 0x41\n 29815: a0 = 0x4\n 29818: a1 = s1 + 0x7ff\n 29822: a1 = a1 + 0x61\n 29825: a2 = s1 + 0x1000\n 29829: u64 [a2 + 4294965352] = 0\n 29833: ra = 0xea\n 29837: jump @23\n      : @468 (gas: 13)\n 29840: a0 = s1 + 0x1000\n 29844: u64 [a0 + 4294965648] = 0\n 29848: a0 = s1 + 0x1000\n 29852: u64 [a0 + 4294965640] = 0\n 29856: a0 = s1 + 0x1000\n 29860: u64 [a0 + 4294965632] = 0\n 29864: a0 = 0x4e487b7100000000\n 29874: a1 = s1 + 0x7ff\n 29878: a1 = a1 + 0x181\n 29882: a2 = s1 + 0x1000\n 29886: u64 [a2 + 0xfffffffffffff998] = a0\n 29890: a0 = 0\n 29892: ra = 246, jump @23\n      : @469 [@dyn 123] (gas: 13)\n 29898: a0 = s1 + 0x1000\n 29902: u64 [a0 + 4294965624] = 0\n 29906: a0 = s1 + 0x1000\n 29910: u64 [a0 + 4294965616] = 0\n 29914: a1 = s1 + 0x1000\n 29918: u64 [a1 + 4294965600] = 0x22\n 29923: a0 = 0x4\n 29926: a1 = s1 + 0x7ff\n 29930: a1 = a1 + 0x161\n 29934: a2 = s1 + 0x1000\n 29938: u64 [a2 + 4294965608] = 0\n 29942: ra = 0xea\n 29946: jump @23\n      : @470 (gas: 11)\n 29949: a0 = u64 [s1 + 0x238]\n 29953: u64 [s1 + 0x440] = a0\n 29957: a0 = u64 [s1 + 0x230]\n 29961: u64 [s1 + 0x448] = a0\n 29965: a0 = u64 [s1 + 0x228]\n 29969: u64 [s1 + 0x450] = a0\n 29973: a1 = s1 + 0x440\n 29977: a0 = u64 [s1 + 0x220]\n 29981: u64 [s1 + 0x458] = a0\n 29985: a0 = 0\n 29987: ra = 248, jump @23\n      : @471 [@dyn 124] (gas: 7)\n 29993: u64 [s1 + 1080] = 0\n 29997: u64 [s1 + 1072] = 0\n 30001: u64 [s1 + 1056] = 0x6\n 30006: a0 = 0x20\n 30009: a1 = s1 + 0x420\n 30013: u64 [s1 + 1064] = 0\n 30017: ra = 250, jump @23\n      : @472 [@dyn 125] (gas: 3)\n 30023: a1 = 0x40\n 30026: a0 = 0\n 30028: ra = 252, jump @0\n      : @473 [@dyn 126] (gas: 28)\n 30034: a1 = sp + 0xffffffffffffffe0\n 30037: a1 = a1 & 0xffffffffffffffe0\n 30040: u64 [s1 + 0x218] = a1\n 30044: sp = a1\n 30046: i32 a0 = a0 + 0\n 30048: i32 a2 = a1 + 0\n 30050: a1 = 0x40\n 30053: ecalli 6 // 'hash_keccak_256'\n 30055: a3 = u64 [s1 + 0x218]\n 30059: a0 = u64 [a3 + 0x18]\n 30062: a1 = u64 [a3 + 0x10]\n 30065: a2 = u64 [a3 + 0x8]\n 30068: a3 = u64 [a3]\n 30070: a4 = reverse a0\n 30072: u64 [s1 + 0x1e0] = a4\n 30076: a0 = reverse a1\n 30078: u64 [s1 + 0x208] = a0\n 30082: a1 = reverse a2\n 30084: u64 [s1 + 0x210] = a1\n 30088: a2 = reverse a3\n 30090: u64 [s1 + 0x218] = a2\n 30094: u64 [s1 + 0x3f8] = a2\n 30098: u64 [s1 + 0x3f0] = a1\n 30102: u64 [s1 + 0x3e8] = a0\n 30106: a0 = s1 + 0x400\n 30110: a2 = s1 + 0x3e0\n 30114: u64 [s1 + 0x3e0] = a4\n 30118: ra = 254, jump @25\n      : @474 [@dyn 127] (gas: 24)\n 30124: a0 = u32 [s1 + 0x414]\n 30128: a1 = u64 [s1 + 0x418]\n 30132: a0 = a0 << 0x20\n 30135: a2 = u64 [s1 + 0x200]\n 30139: a0 = a0 | a2\n 30142: a2 = u64 [s1 + 0x1f8]\n 30146: a1 = a1 | a2\n 30149: u64 [s1 + 0x3b8] = a1\n 30153: a1 = u64 [s1 + 0x1e8]\n 30157: u64 [s1 + 0x3a8] = a1\n 30161: a1 = u64 [s1 + 0x1f0]\n 30165: u64 [s1 + 0x3a0] = a1\n 30169: a1 = u64 [s1 + 0x218]\n 30173: u64 [s1 + 0x3d8] = a1\n 30177: a1 = u64 [s1 + 0x210]\n 30181: u64 [s1 + 0x3d0] = a1\n 30185: a1 = u64 [s1 + 0x208]\n 30189: u64 [s1 + 0x3c8] = a1\n 30193: a1 = u64 [s1 + 0x1e0]\n 30197: u64 [s1 + 0x3c0] = a1\n 30201: a1 = s1 + 0x3c0\n 30205: a2 = s1 + 0x3a0\n 30209: u64 [s1 + 0x3b0] = a0\n 30213: ra = 256, jump @26\n      : @475 [@dyn 128] (gas: 51)\n 30219: a0 = s1 + 0x1000\n 30223: i32 a0 = a0 + 0xfffffffffffffac0\n 30227: ecalli 3 // 'caller'\n 30229: a2 = s1 + 0x7ff\n 30233: a2 = a2 + 0x1b9\n 30237: a0 = u64 [a2 + 0x110]\n 30241: a1 = i32 [a2 + 0x118]\n 30245: a2 = u64 [a2 + 0x108]\n 30249: a3 = reverse a0\n 30251: a0 = a3 << 0x20\n 30254: a1 = reverse a1\n 30256: a1 = a1 >> 0x20\n 30259: t0 = a1 | a0\n 30262: a3 = a3 >> 0x20\n 30265: a2 = reverse a2\n 30267: a1 = a2 << 0x20\n 30270: a1 = a1 | a3\n 30273: a2 = a2 >> 0x20\n 30276: a0 = u64 [s1 + 0x220]\n 30280: u64 [s1 + 0x338] = a0\n 30284: a0 = u64 [s1 + 0x228]\n 30288: u64 [s1 + 0x330] = a0\n 30292: a0 = u64 [s1 + 0x230]\n 30296: u64 [s1 + 0x328] = a0\n 30300: a0 = u64 [s1 + 0x238]\n 30304: u64 [s1 + 0x320] = a0\n 30308: a0 = u64 [s1 + 0x1f8]\n 30312: u64 [s1 + 0x358] = a0\n 30316: a0 = u64 [s1 + 0x200]\n 30320: u64 [s1 + 0x350] = a0\n 30324: a0 = u64 [s1 + 0x1e8]\n 30328: u64 [s1 + 0x348] = a0\n 30332: a0 = u64 [s1 + 0x1f0]\n 30336: u64 [s1 + 0x340] = a0\n 30340: u64 [s1 + 888] = 0\n 30344: a3 = u64 [0x20048]\n 30349: a4 = u64 [0x20050]\n 30354: a5 = u64 [0x20058]\n 30359: a0 = u64 [0x20060]\n 30364: u64 [s1 + 0x398] = a3\n 30368: u64 [s1 + 0x390] = a4\n 30372: u64 [s1 + 0x388] = a5\n 30376: u64 [s1 + 0x380] = a0\n 30380: u64 [s1 + 0x370] = a2\n 30384: u64 [s1 + 0x368] = a1\n 30388: a2 = s1 + 0x380\n 30392: a3 = s1 + 0x360\n 30396: a4 = s1 + 0x340\n 30400: a5 = s1 + 0x320\n 30404: u64 [s1 + 0x360] = t0\n 30408: jump @502\n      : @476 (gas: 13)\n 30411: a0 = s1 + 0x1000\n 30415: u64 [a0 + 4294965328] = 0\n 30419: a0 = s1 + 0x1000\n 30423: u64 [a0 + 4294965320] = 0\n 30427: a0 = s1 + 0x1000\n 30431: u64 [a0 + 4294965312] = 0\n 30435: a0 = 0x4e487b7100000000\n 30445: a1 = s1 + 0x7ff\n 30449: a1 = a1 + 0x41\n 30452: a2 = s1 + 0x1000\n 30456: u64 [a2 + 0xfffffffffffff858] = a0\n 30460: a0 = 0\n 30462: ra = 258, jump @23\n      : @477 [@dyn 129] (gas: 13)\n 30468: a0 = s1 + 0x1000\n 30472: u64 [a0 + 4294965304] = 0\n 30476: a0 = s1 + 0x1000\n 30480: u64 [a0 + 4294965296] = 0\n 30484: a1 = s1 + 0x1000\n 30488: u64 [a1 + 4294965280] = 0x41\n 30493: a0 = 0x4\n 30496: a1 = s1 + 0x7ff\n 30500: a1 = a1 + 0x21\n 30503: a2 = s1 + 0x1000\n 30507: u64 [a2 + 4294965288] = 0\n 30511: ra = 0xea\n 30515: jump @23\n      : @478 (gas: 8)\n 30518: u64 [s1 + 624] = 0\n 30522: u64 [s1 + 616] = 0\n 30526: u64 [s1 + 608] = 0\n 30530: a0 = 0x4e487b7100000000\n 30540: a1 = s1 + 0x260\n 30544: u64 [s1 + 0x278] = a0\n 30548: a0 = 0\n 30550: ra = 260, jump @23\n      : @479 [@dyn 130] (gas: 8)\n 30556: u64 [s1 + 600] = 0\n 30560: u64 [s1 + 592] = 0\n 30564: u64 [s1 + 576] = 0x22\n 30569: a0 = 0x4\n 30572: a1 = s1 + 0x240\n 30576: u64 [s1 + 584] = 0\n 30580: ra = 0xea\n 30584: jump @23\n      : @480 (gas: 2)\n 30587: a1 = 0x20\n 30590: ra = 262, jump @0\n      : @481 [@dyn 131] (gas: 67)\n 30596: a1 = u64 [s1 + 0x1e0]\n 30600: u8 [a0 + 0x8] = a1\n 30603: a1 = u64 [s1 + 0x1b0]\n 30607: u8 [a0 + 0x7] = a1\n 30610: a1 = u64 [s1 + 0x1a8]\n 30614: u8 [a0 + 0x6] = a1\n 30617: a1 = u64 [s1 + 0x1a0]\n 30621: u8 [a0 + 0x5] = a1\n 30624: a1 = u64 [s1 + 0x198]\n 30628: u8 [a0 + 0x4] = a1\n 30631: a1 = u64 [s1 + 0x190]\n 30635: u8 [a0 + 0x3] = a1\n 30638: a1 = u64 [s1 + 0x188]\n 30642: u8 [a0 + 0x2] = a1\n 30645: a1 = u64 [s1 + 0x180]\n 30649: u8 [a0 + 0x1] = a1\n 30652: a1 = u64 [s1 + 0x1e8]\n 30656: u8 [a0] = a1\n 30658: a1 = u64 [s1 + 0x1f0]\n 30662: u8 [a0 + 0x10] = a1\n 30665: a1 = u64 [s1 + 0x178]\n 30669: u8 [a0 + 0xf] = a1\n 30672: a1 = u64 [s1 + 0x170]\n 30676: u8 [a0 + 0xe] = a1\n 30679: a1 = u64 [s1 + 0x168]\n 30683: u8 [a0 + 0xd] = a1\n 30686: a1 = u64 [s1 + 0x160]\n 30690: u8 [a0 + 0xc] = a1\n 30693: a1 = u64 [s1 + 0x158]\n 30697: u8 [a0 + 0xb] = a1\n 30700: a1 = u64 [s1 + 0x150]\n 30704: u8 [a0 + 0xa] = a1\n 30707: a1 = u64 [s1 + 0x148]\n 30711: u8 [a0 + 0x9] = a1\n 30714: a1 = u64 [s1 + 0x1f8]\n 30718: u8 [a0 + 0x18] = a1\n 30721: a1 = u64 [s1 + 0x140]\n 30725: u8 [a0 + 0x17] = a1\n 30728: a1 = u64 [s1 + 0x138]\n 30732: u8 [a0 + 0x16] = a1\n 30735: a1 = u64 [s1 + 0x130]\n 30739: u8 [a0 + 0x15] = a1\n 30742: a1 = u64 [s1 + 0x128]\n 30746: u8 [a0 + 0x14] = a1\n 30749: a1 = u64 [s1 + 0x120]\n 30753: u8 [a0 + 0x13] = a1\n 30756: a1 = u64 [s1 + 0x118]\n 30760: u8 [a0 + 0x12] = a1\n 30763: a1 = u64 [s1 + 0x110]\n 30767: u8 [a0 + 0x11] = a1\n 30770: a1 = u64 [s1 + 0x108]\n 30774: u8 [a0 + 0x1f] = a1\n 30777: a1 = u64 [s1 + 0x100]\n 30781: u8 [a0 + 0x1e] = a1\n 30784: a1 = u64 [s1 + 0xf8]\n 30788: u8 [a0 + 0x1d] = a1\n 30791: a1 = u64 [s1 + 0xf0]\n 30795: u8 [a0 + 0x1c] = a1\n 30798: a1 = u64 [s1 + 0xe8]\n 30802: u8 [a0 + 0x1b] = a1\n 30805: a1 = u64 [s1 + 0xe0]\n 30809: u8 [a0 + 0x1a] = a1\n 30812: a1 = u64 [s1 + 0xd8]\n 30816: u8 [a0 + 0x19] = a1\n 30819: a0 = 0x20\n 30822: a1 = 0x20\n 30825: ra = 264, jump @0\n      : @482 [@dyn 132] (gas: 35)\n 30831: u8 [a0 + 31] = 0x3\n 30835: u8 [a0 + 30] = 0\n 30838: u8 [a0 + 29] = 0\n 30841: u8 [a0 + 28] = 0\n 30844: u8 [a0 + 27] = 0\n 30847: u8 [a0 + 26] = 0\n 30850: u8 [a0 + 25] = 0\n 30853: u8 [a0 + 24] = 0\n 30856: u8 [a0 + 23] = 0\n 30859: u8 [a0 + 22] = 0\n 30862: u8 [a0 + 21] = 0\n 30865: u8 [a0 + 20] = 0\n 30868: u8 [a0 + 19] = 0\n 30871: u8 [a0 + 18] = 0\n 30874: u8 [a0 + 17] = 0\n 30877: u8 [a0 + 16] = 0\n 30880: u8 [a0 + 15] = 0\n 30883: u8 [a0 + 14] = 0\n 30886: u8 [a0 + 13] = 0\n 30889: u8 [a0 + 12] = 0\n 30892: u8 [a0 + 11] = 0\n 30895: u8 [a0 + 10] = 0\n 30898: u8 [a0 + 9] = 0\n 30901: u8 [a0 + 8] = 0\n 30904: u8 [a0 + 7] = 0\n 30907: u8 [a0 + 6] = 0\n 30910: u8 [a0 + 5] = 0\n 30913: u8 [a0 + 4] = 0\n 30916: u8 [a0 + 3] = 0\n 30919: u8 [a0 + 2] = 0\n 30922: u8 [a0 + 1] = 0\n 30925: u8 [a0 + 0] = 0\n 30927: a1 = 0x40\n 30930: a0 = 0\n 30932: ra = 266, jump @0\n      : @483 [@dyn 133] (gas: 28)\n 30938: a1 = sp + 0xffffffffffffffe0\n 30941: a1 = a1 & 0xffffffffffffffe0\n 30944: u64 [s1 + 0x1f8] = a1\n 30948: sp = a1\n 30950: i32 a0 = a0 + 0\n 30952: i32 a2 = a1 + 0\n 30954: a1 = 0x40\n 30957: ecalli 6 // 'hash_keccak_256'\n 30959: a3 = u64 [s1 + 0x1f8]\n 30963: a0 = u64 [a3 + 0x18]\n 30966: a1 = u64 [a3 + 0x10]\n 30969: a2 = u64 [a3 + 0x8]\n 30972: a3 = u64 [a3]\n 30974: a4 = reverse a0\n 30976: u64 [s1 + 0x1e0] = a4\n 30980: a0 = reverse a1\n 30982: u64 [s1 + 0x1f8] = a0\n 30986: a1 = reverse a2\n 30988: u64 [s1 + 0x1f0] = a1\n 30992: a2 = reverse a3\n 30994: u64 [s1 + 0x1e8] = a2\n 30998: u64 [s1 + 0x778] = a2\n 31002: u64 [s1 + 0x770] = a1\n 31006: u64 [s1 + 0x768] = a0\n 31010: a0 = s1 + 0x780\n 31014: a2 = s1 + 0x760\n 31018: u64 [s1 + 0x760] = a4\n 31022: ra = 268, jump @25\n      : @484 [@dyn 134] (gas: 34)\n 31028: a0 = u32 [s1 + 0x794]\n 31032: a1 = u64 [s1 + 0x798]\n 31036: a3 = s1 + 0x7ff\n 31040: a3 = a3 + 0x1b9\n 31044: a2 = u64 [s1 + 0x1e8]\n 31048: u64 [a3 + 0x2e0] = a2\n 31052: a2 = u64 [s1 + 0x1f0]\n 31056: u64 [a3 + 0x2d8] = a2\n 31060: a2 = u64 [s1 + 0x1f8]\n 31064: u64 [a3 + 0x2d0] = a2\n 31068: a2 = u64 [s1 + 0x1e0]\n 31072: u64 [a3 + 0x2c8] = a2\n 31076: a2 = u64 [s1 + 0x1c8]\n 31080: a1 = a1 | a2\n 31083: u64 [a3 + 0x260] = a1\n 31087: a0 = a0 << 0x20\n 31090: a1 = u64 [s1 + 0x1d0]\n 31094: a0 = a0 | a1\n 31097: u64 [a3 + 0x258] = a0\n 31101: a0 = u64 [s1 + 0x1b8]\n 31105: u64 [a3 + 0x250] = a0\n 31109: a0 = u64 [s1 + 0x1c0]\n 31113: u64 [a3 + 0x248] = a0\n 31117: a0 = s1 + 0x1000\n 31121: i32 a1 = a0 + 0xfffffffffffffc80\n 31125: a0 = s1 + 0x1000\n 31129: i32 a3 = a0 + 0xfffffffffffffc00\n 31133: a2 = 0xffffffffffffffff\n 31136: a4 = 0x20\n 31139: a0 = 0\n 31141: ecalli 9 // 'set_storage'\n 31143: a1 = 0x20\n 31146: a0 = 0\n 31148: ra = 270, jump @0\n      : @485 [@dyn 135] (gas: 71)\n 31154: a1 = u64 [s1 + 0x200]\n 31158: a1 = reverse a1\n 31160: a2 = u64 [s1 + 0x238]\n 31164: a2 = reverse a2\n 31166: a3 = u64 [s1 + 0x228]\n 31170: a3 = reverse a3\n 31172: a4 = u64 [s1 + 0x230]\n 31176: a4 = reverse a4\n 31178: a5 = a4 >> 0x38\n 31181: u8 [a0 + 0x1f] = a5\n 31184: a5 = a4 >> 0x30\n 31187: u8 [a0 + 0x1e] = a5\n 31190: a5 = a4 >> 0x28\n 31193: u8 [a0 + 0x1d] = a5\n 31196: a5 = a4 >> 0x20\n 31199: u8 [a0 + 0x1c] = a5\n 31202: a5 = a4 >> 0x18\n 31205: u8 [a0 + 0x1b] = a5\n 31208: a5 = a4 >> 0x10\n 31211: u8 [a0 + 0x1a] = a5\n 31214: a5 = a4 >> 0x8\n 31217: u8 [a0 + 0x19] = a5\n 31220: u8 [a0 + 0x18] = a4\n 31223: a4 = a3 >> 0x38\n 31226: u8 [a0 + 0x17] = a4\n 31229: a4 = a3 >> 0x30\n 31232: u8 [a0 + 0x16] = a4\n 31235: a4 = a3 >> 0x28\n 31238: u8 [a0 + 0x15] = a4\n 31241: a4 = a3 >> 0x20\n 31244: u8 [a0 + 0x14] = a4\n 31247: a4 = a3 >> 0x18\n 31250: u8 [a0 + 0x13] = a4\n 31253: a4 = a3 >> 0x10\n 31256: u8 [a0 + 0x12] = a4\n 31259: a4 = a3 >> 0x8\n 31262: u8 [a0 + 0x11] = a4\n 31265: u8 [a0 + 0x10] = a3\n 31268: a3 = a2 >> 0x38\n 31271: u8 [a0 + 0xf] = a3\n 31274: a3 = a2 >> 0x30\n 31277: u8 [a0 + 0xe] = a3\n 31280: a3 = a2 >> 0x28\n 31283: u8 [a0 + 0xd] = a3\n 31286: a3 = a2 >> 0x20\n 31289: u8 [a0 + 0xc] = a3\n 31292: a3 = a2 >> 0x18\n 31295: u8 [a0 + 0xb] = a3\n 31298: a3 = a2 >> 0x10\n 31301: u8 [a0 + 0xa] = a3\n 31304: a3 = a2 >> 0x8\n 31307: u8 [a0 + 0x9] = a3\n 31310: u8 [a0 + 0x8] = a2\n 31313: a2 = a1 >> 0x38\n 31316: u8 [a0 + 0x7] = a2\n 31319: a2 = a1 >> 0x30\n 31322: u8 [a0 + 0x6] = a2\n 31325: a2 = a1 >> 0x28\n 31328: u8 [a0 + 0x5] = a2\n 31331: a2 = a1 >> 0x20\n 31334: u8 [a0 + 0x4] = a2\n 31337: a2 = a1 >> 0x18\n 31340: u8 [a0 + 0x3] = a2\n 31343: a2 = a1 >> 0x10\n 31346: u8 [a0 + 0x2] = a2\n 31349: a2 = a1 >> 0x8\n 31352: u8 [a0 + 0x1] = a2\n 31355: u8 [a0] = a1\n 31357: a0 = 0x20\n 31360: a1 = 0x20\n 31363: ra = 272, jump @0\n      : @486 [@dyn 136] (gas: 35)\n 31369: u8 [a0 + 31] = 0x4\n 31373: u8 [a0 + 30] = 0\n 31376: u8 [a0 + 29] = 0\n 31379: u8 [a0 + 28] = 0\n 31382: u8 [a0 + 27] = 0\n 31385: u8 [a0 + 26] = 0\n 31388: u8 [a0 + 25] = 0\n 31391: u8 [a0 + 24] = 0\n 31394: u8 [a0 + 23] = 0\n 31397: u8 [a0 + 22] = 0\n 31400: u8 [a0 + 21] = 0\n 31403: u8 [a0 + 20] = 0\n 31406: u8 [a0 + 19] = 0\n 31409: u8 [a0 + 18] = 0\n 31412: u8 [a0 + 17] = 0\n 31415: u8 [a0 + 16] = 0\n 31418: u8 [a0 + 15] = 0\n 31421: u8 [a0 + 14] = 0\n 31424: u8 [a0 + 13] = 0\n 31427: u8 [a0 + 12] = 0\n 31430: u8 [a0 + 11] = 0\n 31433: u8 [a0 + 10] = 0\n 31436: u8 [a0 + 9] = 0\n 31439: u8 [a0 + 8] = 0\n 31442: u8 [a0 + 7] = 0\n 31445: u8 [a0 + 6] = 0\n 31448: u8 [a0 + 5] = 0\n 31451: u8 [a0 + 4] = 0\n 31454: u8 [a0 + 3] = 0\n 31457: u8 [a0 + 2] = 0\n 31460: u8 [a0 + 1] = 0\n 31463: u8 [a0 + 0] = 0\n 31465: a1 = 0x40\n 31468: a0 = 0\n 31470: ra = 274, jump @0\n      : @487 [@dyn 137] (gas: 28)\n 31476: a1 = sp + 0xffffffffffffffe0\n 31479: a1 = a1 & 0xffffffffffffffe0\n 31482: u64 [s1 + 0x1f8] = a1\n 31486: sp = a1\n 31488: i32 a0 = a0 + 0\n 31490: i32 a2 = a1 + 0\n 31492: a1 = 0x40\n 31495: ecalli 6 // 'hash_keccak_256'\n 31497: a3 = u64 [s1 + 0x1f8]\n 31501: a0 = u64 [a3 + 0x18]\n 31504: a1 = u64 [a3 + 0x10]\n 31507: a2 = u64 [a3 + 0x8]\n 31510: a3 = u64 [a3]\n 31512: a5 = reverse a0\n 31514: a4 = reverse a1\n 31516: a0 = reverse a2\n 31518: a1 = reverse a3\n 31520: u64 [s1 + 0x1f0] = a1\n 31524: u64 [s1 + 0x738] = a1\n 31528: u64 [s1 + 0x1f8] = a0\n 31532: u64 [s1 + 0x730] = a0\n 31536: u64 [s1 + 0x1e8] = a4\n 31540: u64 [s1 + 0x728] = a4\n 31544: a0 = s1 + 0x740\n 31548: a2 = s1 + 0x720\n 31552: u64 [s1 + 0x1e0] = a5\n 31556: u64 [s1 + 0x720] = a5\n 31560: ra = 276, jump @25\n      : @488 [@dyn 138] (gas: 8)\n 31566: a3 = u64 [s1 + 0x758]\n 31570: a2 = u64 [s1 + 0x750]\n 31574: a1 = u64 [s1 + 0x748]\n 31578: a0 = u64 [s1 + 0x740]\n 31582: a4 = a1 | a3\n 31585: a5 = a0 | a2\n 31588: a4 = a4 | a5\n 31591: jump @513 if a4 == 0\n      : @489 (gas: 25)\n 31595: a4 = 0xffffffff00000000\n 31605: u64 [s1 + 0x1d8] = a4\n 31609: a4 = a0 | a1\n 31612: a4 = a4 <u 0x1\n 31615: a5 = a2 <u a4\n 31618: a3 = a3 - a5\n 31621: a2 = a2 - a4\n 31624: a4 = a0 <u 0x1\n 31627: a1 = a1 - a4\n 31630: a0 = a0 + 0xffffffffffffffff\n 31633: a4 = u64 [s1 + 0x1e0]\n 31637: u64 [s1 + 0x700] = a4\n 31641: u64 [s1 + 0x6e0] = a0\n 31645: a0 = u64 [s1 + 0x1e8]\n 31649: u64 [s1 + 0x708] = a0\n 31653: u64 [s1 + 0x6e8] = a1\n 31657: a0 = u64 [s1 + 0x1f8]\n 31661: u64 [s1 + 0x710] = a0\n 31665: a0 = u64 [s1 + 0x1f0]\n 31669: u64 [s1 + 0x718] = a0\n 31673: u64 [s1 + 0x6f0] = a2\n 31677: a1 = s1 + 0x700\n 31681: a2 = s1 + 0x6e0\n 31685: u64 [s1 + 0x6f8] = a3\n 31689: ra = 278, jump @26\n      : @490 [@dyn 139] (gas: 11)\n 31695: a0 = u64 [s1 + 0x1c8]\n 31699: u64 [s1 + 0x6d8] = a0\n 31703: a0 = u64 [s1 + 0x1d0]\n 31707: u64 [s1 + 0x6d0] = a0\n 31711: a0 = u64 [s1 + 0x1b8]\n 31715: u64 [s1 + 0x6c8] = a0\n 31719: a1 = s1 + 0x6c0\n 31723: a0 = u64 [s1 + 0x1c0]\n 31727: u64 [s1 + 0x6c0] = a0\n 31731: a0 = 0\n 31733: ra = 280, jump @23\n      : @491 [@dyn 140] (gas: 7)\n 31739: u64 [s1 + 1720] = 0\n 31743: u64 [s1 + 1712] = 0\n 31747: u64 [s1 + 1696] = 0x4\n 31752: a0 = 0x20\n 31755: a1 = s1 + 0x6a0\n 31759: u64 [s1 + 1704] = 0\n 31763: ra = 282, jump @23\n      : @492 [@dyn 141] (gas: 3)\n 31769: a1 = 0x40\n 31772: a0 = 0\n 31774: ra = 284, jump @0\n      : @493 [@dyn 142] (gas: 28)\n 31780: a1 = sp + 0xffffffffffffffe0\n 31783: a1 = a1 & 0xffffffffffffffe0\n 31786: u64 [s1 + 0x1f8] = a1\n 31790: sp = a1\n 31792: i32 a0 = a0 + 0\n 31794: i32 a2 = a1 + 0\n 31796: a1 = 0x40\n 31799: ecalli 6 // 'hash_keccak_256'\n 31801: a3 = u64 [s1 + 0x1f8]\n 31805: a0 = u64 [a3 + 0x18]\n 31808: a1 = u64 [a3 + 0x10]\n 31811: a2 = u64 [a3 + 0x8]\n 31814: a3 = u64 [a3]\n 31816: a4 = reverse a0\n 31818: u64 [s1 + 0x1f8] = a4\n 31822: a0 = reverse a1\n 31824: u64 [s1 + 0x1f0] = a0\n 31828: a1 = reverse a2\n 31830: u64 [s1 + 0x1e8] = a1\n 31834: a2 = reverse a3\n 31836: u64 [s1 + 0x1e0] = a2\n 31840: u64 [s1 + 0x678] = a2\n 31844: u64 [s1 + 0x670] = a1\n 31848: u64 [s1 + 0x668] = a0\n 31852: a0 = s1 + 0x680\n 31856: a2 = s1 + 0x660\n 31860: u64 [s1 + 0x660] = a4\n 31864: ra = 286, jump @25\n      : @494 [@dyn 143] (gas: 11)\n 31870: a2 = u64 [s1 + 0x680]\n 31874: a0 = u64 [s1 + 0x688]\n 31878: a1 = u64 [s1 + 0x690]\n 31882: a3 = u64 [s1 + 0x698]\n 31886: u64 [s1 + 0x638] = a3\n 31890: u64 [s1 + 0x630] = a1\n 31894: u64 [s1 + 0x628] = a0\n 31898: a0 = s1 + 0x640\n 31902: a1 = s1 + 0x620\n 31906: u64 [s1 + 0x620] = a2\n 31910: ra = 288, jump @531\n      : @495 [@dyn 144] (gas: 19)\n 31916: a0 = u64 [s1 + 0x640]\n 31920: a1 = u64 [s1 + 0x648]\n 31924: a2 = u64 [s1 + 0x650]\n 31928: a3 = u64 [s1 + 0x658]\n 31932: u64 [s1 + 0x5f8] = a3\n 31936: u64 [s1 + 0x5f0] = a2\n 31940: u64 [s1 + 0x5e8] = a1\n 31944: u64 [s1 + 0x5e0] = a0\n 31948: a0 = u64 [s1 + 0x1e0]\n 31952: u64 [s1 + 0x618] = a0\n 31956: a0 = u64 [s1 + 0x1e8]\n 31960: u64 [s1 + 0x610] = a0\n 31964: a0 = u64 [s1 + 0x1f0]\n 31968: u64 [s1 + 0x608] = a0\n 31972: a1 = s1 + 0x600\n 31976: a2 = s1 + 0x5e0\n 31980: a0 = u64 [s1 + 0x1f8]\n 31984: u64 [s1 + 0x600] = a0\n 31988: ra = 290, jump @26\n      : @496 [@dyn 145] (gas: 11)\n 31994: a0 = u64 [s1 + 0x208]\n 31998: u64 [s1 + 0x5d8] = a0\n 32002: a0 = u64 [s1 + 0x210]\n 32006: u64 [s1 + 0x5d0] = a0\n 32010: a0 = u64 [s1 + 0x218]\n 32014: u64 [s1 + 0x5c8] = a0\n 32018: a1 = s1 + 0x5c0\n 32022: a0 = u64 [s1 + 0x220]\n 32026: u64 [s1 + 0x5c0] = a0\n 32030: a0 = 0\n 32032: ra = 292, jump @23\n      : @497 [@dyn 146] (gas: 7)\n 32038: u64 [s1 + 1464] = 0\n 32042: u64 [s1 + 1456] = 0\n 32046: u64 [s1 + 1440] = 0x6\n 32051: a0 = 0x20\n 32054: a1 = s1 + 0x5a0\n 32058: u64 [s1 + 1448] = 0\n 32062: ra = 294, jump @23\n      : @498 [@dyn 147] (gas: 3)\n 32068: a1 = 0x40\n 32071: a0 = 0\n 32073: ra = 296, jump @0\n      : @499 [@dyn 148] (gas: 28)\n 32079: a1 = sp + 0xffffffffffffffe0\n 32082: a1 = a1 & 0xffffffffffffffe0\n 32085: u64 [s1 + 0x1f8] = a1\n 32089: sp = a1\n 32091: i32 a0 = a0 + 0\n 32093: i32 a2 = a1 + 0\n 32095: a1 = 0x40\n 32098: ecalli 6 // 'hash_keccak_256'\n 32100: a3 = u64 [s1 + 0x1f8]\n 32104: a0 = u64 [a3 + 0x18]\n 32107: a1 = u64 [a3 + 0x10]\n 32110: a2 = u64 [a3 + 0x8]\n 32113: a3 = u64 [a3]\n 32115: a4 = reverse a0\n 32117: u64 [s1 + 0x1f8] = a4\n 32121: a0 = reverse a1\n 32123: u64 [s1 + 0x1f0] = a0\n 32127: a1 = reverse a2\n 32129: u64 [s1 + 0x1e8] = a1\n 32133: a2 = reverse a3\n 32135: u64 [s1 + 0x1e0] = a2\n 32139: u64 [s1 + 0x578] = a2\n 32143: u64 [s1 + 0x570] = a1\n 32147: u64 [s1 + 0x568] = a0\n 32151: a0 = s1 + 0x580\n 32155: a2 = s1 + 0x560\n 32159: u64 [s1 + 0x560] = a4\n 32163: ra = 298, jump @25\n      : @500 [@dyn 149] (gas: 20)\n 32169: a0 = u64 [s1 + 0x590]\n 32173: a1 = u64 [s1 + 0x598]\n 32177: a2 = u64 [s1 + 0x1d8]\n 32181: a0 = a0 & a2\n 32184: a1 = a1 & 0xffffffffffffffff\n 32187: u64 [s1 + 0x538] = a1\n 32191: u64 [s1 + 0x530] = a0\n 32195: u64 [s1 + 1320] = 0\n 32199: u64 [s1 + 1312] = 0\n 32203: a0 = u64 [s1 + 0x1e0]\n 32207: u64 [s1 + 0x558] = a0\n 32211: a0 = u64 [s1 + 0x1e8]\n 32215: u64 [s1 + 0x550] = a0\n 32219: a0 = u64 [s1 + 0x1f0]\n 32223: u64 [s1 + 0x548] = a0\n 32227: a1 = s1 + 0x540\n 32231: a2 = s1 + 0x520\n 32235: a0 = u64 [s1 + 0x1f8]\n 32239: u64 [s1 + 0x540] = a0\n 32243: ra = 300, jump @26\n      : @501 [@dyn 150] (gas: 37)\n 32249: a0 = u64 [s1 + 0x208]\n 32253: u64 [s1 + 0x4b8] = a0\n 32257: a0 = u64 [s1 + 0x210]\n 32261: u64 [s1 + 0x4b0] = a0\n 32265: a0 = u64 [s1 + 0x218]\n 32269: u64 [s1 + 0x4a8] = a0\n 32273: a0 = u64 [s1 + 0x220]\n 32277: u64 [s1 + 0x4a0] = a0\n 32281: a0 = u64 [s1 + 0x1c8]\n 32285: u64 [s1 + 0x4d8] = a0\n 32289: a0 = u64 [s1 + 0x1d0]\n 32293: u64 [s1 + 0x4d0] = a0\n 32297: a0 = u64 [s1 + 0x1b8]\n 32301: u64 [s1 + 0x4c8] = a0\n 32305: a0 = u64 [s1 + 0x1c0]\n 32309: u64 [s1 + 0x4c0] = a0\n 32313: a0 = u64 [s1 + 0x200]\n 32317: u64 [s1 + 0x4f8] = a0\n 32321: a0 = u64 [s1 + 0x238]\n 32325: u64 [s1 + 0x4f0] = a0\n 32329: a0 = u64 [s1 + 0x228]\n 32333: u64 [s1 + 0x4e8] = a0\n 32337: a0 = u64 [0x20028]\n 32342: a1 = u64 [0x20030]\n 32347: a2 = u64 [0x20038]\n 32352: a3 = u64 [s1 + 0x230]\n 32356: u64 [s1 + 0x4e0] = a3\n 32360: u64 [s1 + 0x518] = a0\n 32364: u64 [s1 + 0x510] = a1\n 32368: u64 [s1 + 0x508] = a2\n 32372: a0 = u64 [0x20040]\n 32377: a2 = s1 + 0x500\n 32381: a3 = s1 + 0x4e0\n 32385: a4 = s1 + 0x4c0\n 32389: a5 = s1 + 0x4a0\n 32393: u64 [s1 + 0x500] = a0\n 32397: fallthrough\n      : @502 (gas: 43)\n 32398: ra = 0x12e\n 32402: sp = sp + 0xfffffffffffffee0\n 32406: u64 [sp + 0x118] = ra\n 32410: u64 [sp + 0x110] = s0\n 32414: u64 [sp + 0x108] = s1\n 32418: s0 = sp + 0x120\n 32422: sp = sp & 0xffffffffffffffe0\n 32425: s1 = u64 [a5]\n 32427: u64 [sp + 0x60] = s1\n 32430: s1 = u64 [a5 + 0x8]\n 32433: u64 [sp + 0x68] = s1\n 32436: s1 = u64 [a5 + 0x10]\n 32439: u64 [sp + 0x70] = s1\n 32442: a5 = u64 [a5 + 0x18]\n 32445: u64 [sp + 0x78] = a5\n 32448: a5 = u64 [a4]\n 32450: u64 [sp + 0x38] = a5\n 32453: a5 = u64 [a4 + 0x8]\n 32456: u64 [sp + 0x40] = a5\n 32459: a5 = u64 [a4 + 0x10]\n 32462: u64 [sp + 0x48] = a5\n 32465: a4 = u64 [a4 + 0x18]\n 32468: u64 [sp + 0x50] = a4\n 32471: a4 = u64 [a3]\n 32473: u64 [sp + 0x18] = a4\n 32476: a4 = u64 [a3 + 0x8]\n 32479: u64 [sp + 0x20] = a4\n 32482: a4 = u64 [a3 + 0x10]\n 32485: u64 [sp + 0x28] = a4\n 32488: a3 = u64 [a3 + 0x18]\n 32491: u64 [sp + 0x30] = a3\n 32494: s1 = u64 [a2]\n 32496: a3 = u64 [a2 + 0x8]\n 32499: u64 [sp] = a3\n 32501: a3 = u64 [a2 + 0x10]\n 32504: u64 [sp + 0x8] = a3\n 32507: a2 = u64 [a2 + 0x18]\n 32510: u64 [sp + 0x10] = a2\n 32513: a0 = 0\n 32515: a1 = 0\n 32517: u64 [sp + 88] = 0\n 32520: ra = 0x4\n 32523: jump @0\n      : @503 [@dyn 151] (gas: 3)\n 32526: a0 = 0\n 32528: a1 = 0\n 32530: ra = 304, jump @0\n      : @504 [@dyn 152] (gas: 5)\n 32536: i32 a1 = a0 + 0\n 32538: a0 = 0\n 32540: a2 = 0\n 32542: ecalli 7 // 'seal_return'\n 32544: fallthrough\n      : @505 (gas: 12)\n 32545: a0 = s1 + 0x7ff\n 32549: a0 = a0 + 0x1b9\n 32553: u64 [a0 + 24] = 0\n 32556: u64 [a0 + 16] = 0\n 32559: u64 [a0 + 8] = 0\n 32562: a2 = a0\n 32564: a0 = 0x4e487b7100000000\n 32574: a1 = s1 + 0x7ff\n 32578: a1 = a1 + 0x1c1\n 32582: u64 [a2 + 0x20] = a0\n 32585: a0 = 0\n 32587: ra = 306, jump @23\n      : @506 [@dyn 153] (gas: 13)\n 32593: a0 = s1 + 0x7ff\n 32597: a0 = a0 + 0x1b9\n 32601: u64 [a0 + 0] = 0\n 32603: u64 [a0 + 4294967288] = 0\n 32606: a1 = s1 + 0x1000\n 32610: u64 [a1 + 4294965664] = 0x41\n 32615: a0 = 0x4\n 32618: a1 = s1 + 0x7ff\n 32622: a1 = a1 + 0x1a1\n 32626: a2 = s1 + 0x1000\n 32630: u64 [a2 + 4294965672] = 0\n 32634: ra = 0xea\n 32638: jump @23\n      : @507 (gas: 8)\n 32641: u64 [s1 + 688] = 0\n 32645: u64 [s1 + 680] = 0\n 32649: u64 [s1 + 672] = 0\n 32653: a0 = 0x4e487b7100000000\n 32663: a1 = s1 + 0x2a0\n 32667: u64 [s1 + 0x2b8] = a0\n 32671: a0 = 0\n 32673: ra = 308, jump @23\n      : @508 [@dyn 154] (gas: 8)\n 32679: u64 [s1 + 664] = 0\n 32683: u64 [s1 + 656] = 0\n 32687: u64 [s1 + 640] = 0x41\n 32692: a0 = 0x4\n 32695: a1 = s1 + 0x280\n 32699: u64 [s1 + 648] = 0\n 32703: ra = 0xea\n 32707: jump @23\n      : @509 (gas: 8)\n 32710: u64 [s1 + 2000] = 0\n 32714: u64 [s1 + 1992] = 0\n 32718: u64 [s1 + 1984] = 0\n 32722: a0 = 0x4e487b7100000000\n 32732: a1 = s1 + 0x7c0\n 32736: u64 [s1 + 0x7d8] = a0\n 32740: a0 = 0\n 32742: ra = 310, jump @23\n      : @510 [@dyn 155] (gas: 8)\n 32748: u64 [s1 + 1976] = 0\n 32752: u64 [s1 + 1968] = 0\n 32756: u64 [s1 + 1952] = 0x11\n 32761: a0 = 0x4\n 32764: a1 = s1 + 0x7a0\n 32768: u64 [s1 + 1960] = 0\n 32772: ra = 0xea\n 32776: jump @23\n      : @511 (gas: 13)\n 32779: a0 = s1 + 0x1000\n 32783: u64 [a0 + 4294965264] = 0\n 32787: a0 = s1 + 0x1000\n 32791: u64 [a0 + 4294965256] = 0\n 32795: a0 = s1 + 0x1000\n 32799: u64 [a0 + 4294965248] = 0\n 32803: a0 = 0x4e487b7100000000\n 32813: a1 = s1 + 0x7ff\n 32817: a1 = a1 + 0x1\n 32820: a2 = s1 + 0x1000\n 32824: u64 [a2 + 0xfffffffffffff818] = a0\n 32828: a0 = 0\n 32830: ra = 312, jump @23\n      : @512 [@dyn 156] (gas: 8)\n 32836: u64 [s1 + 2040] = 0\n 32840: u64 [s1 + 2032] = 0\n 32844: u64 [s1 + 2016] = 0x11\n 32849: a0 = 0x4\n 32852: a1 = s1 + 0x7e0\n 32856: u64 [s1 + 2024] = 0\n 32860: ra = 0xea\n 32864: jump @23\n      : @513 (gas: 8)\n 32867: u64 [s1 + 1168] = 0\n 32871: u64 [s1 + 1160] = 0\n 32875: u64 [s1 + 1152] = 0\n 32879: a0 = 0x4e487b7100000000\n 32889: a1 = s1 + 0x480\n 32893: u64 [s1 + 0x498] = a0\n 32897: a0 = 0\n 32899: ra = 314, jump @23\n      : @514 [@dyn 157] (gas: 8)\n 32905: u64 [s1 + 1144] = 0\n 32909: u64 [s1 + 1136] = 0\n 32913: u64 [s1 + 1120] = 0x11\n 32918: a0 = 0x4\n 32921: a1 = s1 + 0x460\n 32925: u64 [s1 + 1128] = 0\n 32929: ra = 0xea\n 32933: jump @23\n      : @515 (gas: 20)\n 32936: sp = sp + 0xffffffffffffff70\n 32940: u64 [sp + 0x88] = ra\n 32944: u64 [sp + 0x80] = s0\n 32948: u64 [sp + 0x78] = s1\n 32951: a4 = u64 [a1 + 0x10]\n 32954: a3 = u64 [a1 + 0x18]\n 32957: a5 = u64 [a1 + 0x8]\n 32960: s1 = u64 [a1]\n 32962: u64 [sp + 0x68] = a3\n 32965: u64 [sp + 0x70] = a5\n 32968: a1 = a5 | a3\n 32971: a3 = s1 | a4\n 32974: a3 = a3 | a1\n 32977: a3 = a3 >> 0x20\n 32980: u64 [sp + 0x40] = a4\n 32983: a1 = a1 | a4\n 32986: a1 = a1 << 0x20\n 32989: a1 = a1 | a3\n 32992: u64 [sp + 0x8] = a0\n 32995: jump @530 if a1 != 0\n      : @516 (gas: 11)\n 32999: a0 = u64 [a2 + 0x18]\n 33002: u64 [sp + 0x50] = a0\n 33005: a0 = u64 [a2 + 0x10]\n 33008: u64 [sp + 0x48] = a0\n 33011: a0 = u64 [a2 + 0x8]\n 33014: u64 [sp + 0x58] = a0\n 33017: s0 = u64 [a2]\n 33019: i32 a0 = s1 + 0\n 33021: a1 = 0x20\n 33024: u64 [sp + 0x38] = a0\n 33027: ra = 316, jump @0\n      : @517 [@dyn 158] (gas: 43)\n 33034: u8 [a0 + 31] = 0x20\n 33038: a4 = u64 [sp + 0x48]\n 33041: a1 = s0 | a4\n 33044: a2 = u64 [sp + 0x50]\n 33047: a5 = u64 [sp + 0x58]\n 33050: a2 = a2 | a5\n 33053: a1 = a1 | a2\n 33056: a1 = a1 >> 0x20\n 33059: a2 = a2 | a4\n 33062: a2 = a2 << 0x20\n 33065: a1 = a1 | a2\n 33068: u8 [a0 + 30] = 0\n 33071: u8 [a0 + 29] = 0\n 33074: u8 [a0 + 28] = 0\n 33077: u8 [a0 + 27] = 0\n 33080: u8 [a0 + 26] = 0\n 33083: u8 [a0 + 25] = 0\n 33086: u8 [a0 + 24] = 0\n 33089: u8 [a0 + 23] = 0\n 33092: u8 [a0 + 22] = 0\n 33095: u8 [a0 + 21] = 0\n 33098: u8 [a0 + 20] = 0\n 33101: u8 [a0 + 19] = 0\n 33104: u8 [a0 + 18] = 0\n 33107: u8 [a0 + 17] = 0\n 33110: u8 [a0 + 16] = 0\n 33113: u8 [a0 + 15] = 0\n 33116: u8 [a0 + 14] = 0\n 33119: u8 [a0 + 13] = 0\n 33122: u8 [a0 + 12] = 0\n 33125: u8 [a0 + 11] = 0\n 33128: u8 [a0 + 10] = 0\n 33131: u8 [a0 + 9] = 0\n 33134: u8 [a0 + 8] = 0\n 33137: u8 [a0 + 7] = 0\n 33140: u8 [a0 + 6] = 0\n 33143: u8 [a0 + 5] = 0\n 33146: u8 [a0 + 4] = 0\n 33149: u8 [a0 + 3] = 0\n 33152: u8 [a0 + 2] = 0\n 33155: u8 [a0 + 1] = 0\n 33158: u8 [a0 + 0] = 0\n 33160: jump @530 if a1 != 0\n      : @518 (gas: 5)\n 33164: u64 [sp + 0x20] = s0\n 33167: i32 a0 = s0 + 0\n 33169: a1 = 0x20\n 33172: u64 [sp] = a0\n 33174: ra = 318, jump @0\n      : @519 [@dyn 159] (gas: 13)\n 33181: a1 = u64 [sp + 0x40]\n 33184: a2 = u64 [sp + 0x68]\n 33187: a2 = a2 | a1\n 33190: a1 = 0x100000000\n 33200: u64 [sp + 0x28] = a1\n 33203: a1 = 0xffffffe0\n 33213: u64 [sp + 0x60] = s1\n 33216: a1 = s1 <u a1\n 33219: a3 = u64 [sp + 0x70]\n 33222: a1 = 0 if a3 != 0\n 33224: u64 [sp + 0x30] = a2\n 33227: a1 = 0 if a2 != 0\n 33229: jump @530 if a1 == 0\n      : @520 (gas: 94)\n 33233: a1 = u8 [a0 + 0x19]\n 33236: a2 = u8 [a0 + 0x18]\n 33239: a3 = u8 [a0 + 0x1a]\n 33242: a4 = u8 [a0 + 0x1b]\n 33245: a1 = a1 << 0x8\n 33248: a1 = a1 | a2\n 33251: a3 = a3 << 0x10\n 33254: a4 = a4 << 0x18\n 33257: a3 = a3 | a4\n 33260: a1 = a1 | a3\n 33263: a2 = u8 [a0 + 0x1d]\n 33266: a3 = u8 [a0 + 0x1c]\n 33269: a4 = u8 [a0 + 0x1e]\n 33272: a5 = u8 [a0 + 0x1f]\n 33275: a2 = a2 << 0x8\n 33278: a2 = a2 | a3\n 33281: a4 = a4 << 0x10\n 33284: a5 = a5 << 0x18\n 33287: a4 = a4 | a5\n 33290: a2 = a2 | a4\n 33293: a2 = a2 << 0x20\n 33296: a1 = a1 | a2\n 33299: u64 [sp + 0x18] = a1\n 33302: a1 = u8 [a0 + 0x11]\n 33305: a2 = u8 [a0 + 0x10]\n 33308: a3 = u8 [a0 + 0x12]\n 33311: a4 = u8 [a0 + 0x13]\n 33314: a1 = a1 << 0x8\n 33317: a1 = a1 | a2\n 33320: a3 = a3 << 0x10\n 33323: a4 = a4 << 0x18\n 33326: a3 = a3 | a4\n 33329: a1 = a1 | a3\n 33332: a2 = u8 [a0 + 0x15]\n 33335: a3 = u8 [a0 + 0x14]\n 33338: a4 = u8 [a0 + 0x16]\n 33341: a5 = u8 [a0 + 0x17]\n 33344: a2 = a2 << 0x8\n 33347: a2 = a2 | a3\n 33350: a4 = a4 << 0x10\n 33353: a5 = a5 << 0x18\n 33356: a4 = a4 | a5\n 33359: a2 = a2 | a4\n 33362: a2 = a2 << 0x20\n 33365: a1 = a1 | a2\n 33368: u64 [sp + 0x10] = a1\n 33371: a1 = u8 [a0 + 0x9]\n 33374: a2 = u8 [a0 + 0x8]\n 33377: a3 = u8 [a0 + 0xa]\n 33380: a4 = u8 [a0 + 0xb]\n 33383: a1 = a1 << 0x8\n 33386: a1 = a1 | a2\n 33389: a3 = a3 << 0x10\n 33392: a4 = a4 << 0x18\n 33395: a3 = a3 | a4\n 33398: a1 = a1 | a3\n 33401: a2 = u8 [a0 + 0xd]\n 33404: a3 = u8 [a0 + 0xc]\n 33407: a4 = u8 [a0 + 0xe]\n 33410: a5 = u8 [a0 + 0xf]\n 33413: a2 = a2 << 0x8\n 33416: a2 = a2 | a3\n 33419: a4 = a4 << 0x10\n 33422: a5 = a5 << 0x18\n 33425: a4 = a4 | a5\n 33428: a2 = a2 | a4\n 33431: a2 = a2 << 0x20\n 33434: s0 = a2 | a1\n 33437: a1 = u8 [a0 + 0x1]\n 33440: a2 = u8 [a0]\n 33442: a3 = u8 [a0 + 0x2]\n 33445: a4 = u8 [a0 + 0x3]\n 33448: a1 = a1 << 0x8\n 33451: a1 = a1 | a2\n 33454: a3 = a3 << 0x10\n 33457: a4 = a4 << 0x18\n 33460: a3 = a3 | a4\n 33463: a1 = a1 | a3\n 33466: a2 = u8 [a0 + 0x5]\n 33469: a3 = u8 [a0 + 0x4]\n 33472: a4 = u8 [a0 + 0x6]\n 33475: a0 = u8 [a0 + 0x7]\n 33478: a2 = a2 << 0x8\n 33481: a2 = a2 | a3\n 33484: a4 = a4 << 0x10\n 33487: a0 = a0 << 0x18\n 33490: a0 = a0 | a4\n 33493: a0 = a0 | a2\n 33496: a0 = a0 << 0x20\n 33499: s1 = a0 | a1\n 33502: a0 = u64 [sp + 0x38]\n 33505: i32 a0 = a0 + 0x20\n 33508: a1 = 0x20\n 33511: ra = 320, jump @0\n      : @521 [@dyn 160] (gas: 71)\n 33518: a5 = u64 [sp + 0x10]\n 33521: a4 = u64 [sp + 0x18]\n 33524: u8 [a0 + 0x10] = a5\n 33527: a1 = s0 >> 0x38\n 33530: u8 [a0 + 0xf] = a1\n 33533: a1 = s0 >> 0x30\n 33536: u8 [a0 + 0xe] = a1\n 33539: a1 = s0 >> 0x28\n 33542: u8 [a0 + 0xd] = a1\n 33545: a1 = s0 >> 0x20\n 33548: u8 [a0 + 0xc] = a1\n 33551: a1 = s0 >> 0x18\n 33554: u8 [a0 + 0xb] = a1\n 33557: a1 = s0 >> 0x10\n 33560: u8 [a0 + 0xa] = a1\n 33563: a1 = s0 >> 0x8\n 33566: u8 [a0 + 0x9] = a1\n 33569: u8 [a0 + 0x8] = s0\n 33572: a1 = s1 >> 0x38\n 33575: u8 [a0 + 0x7] = a1\n 33578: a1 = s1 >> 0x30\n 33581: u8 [a0 + 0x6] = a1\n 33584: a1 = s1 >> 0x28\n 33587: u8 [a0 + 0x5] = a1\n 33590: a1 = s1 >> 0x20\n 33593: u8 [a0 + 0x4] = a1\n 33596: a1 = s1 >> 0x18\n 33599: u8 [a0 + 0x3] = a1\n 33602: a1 = s1 >> 0x10\n 33605: u8 [a0 + 0x2] = a1\n 33608: a1 = s1 >> 0x8\n 33611: u8 [a0 + 0x1] = a1\n 33614: u8 [a0] = s1\n 33616: u8 [a0 + 0x18] = a4\n 33619: a1 = a5 >> 0x38\n 33622: u8 [a0 + 0x17] = a1\n 33625: a1 = a5 >> 0x30\n 33628: u8 [a0 + 0x16] = a1\n 33631: a1 = a5 >> 0x28\n 33634: u8 [a0 + 0x15] = a1\n 33637: a1 = a5 >> 0x20\n 33640: u8 [a0 + 0x14] = a1\n 33643: a1 = a5 >> 0x18\n 33646: u8 [a0 + 0x13] = a1\n 33649: a1 = a5 >> 0x10\n 33652: u8 [a0 + 0x12] = a1\n 33655: a1 = a5 >> 0x8\n 33658: u8 [a0 + 0x11] = a1\n 33661: a1 = a4 >> 0x38\n 33664: u8 [a0 + 0x1f] = a1\n 33667: a1 = a4 >> 0x30\n 33670: u8 [a0 + 0x1e] = a1\n 33673: a1 = a4 >> 0x28\n 33676: u8 [a0 + 0x1d] = a1\n 33679: a1 = a4 >> 0x20\n 33682: u8 [a0 + 0x1c] = a1\n 33685: a1 = a4 >> 0x18\n 33688: u8 [a0 + 0x1b] = a1\n 33691: a1 = a4 >> 0x10\n 33694: u8 [a0 + 0x1a] = a1\n 33697: a1 = a4 >> 0x8\n 33700: a2 = u64 [sp + 0x28]\n 33703: a2 = a2 + 0xffffffffffffffc0\n 33706: a3 = u64 [sp + 0x60]\n 33709: a2 = a3 <u a2\n 33712: a3 = u64 [sp + 0x70]\n 33715: a2 = 0 if a3 != 0\n 33717: a3 = u64 [sp + 0x30]\n 33720: a2 = 0 if a3 != 0\n 33722: u8 [a0 + 0x19] = a1\n 33725: jump @530 if a2 == 0\n      : @522 (gas: 10)\n 33729: a0 = u64 [sp + 0x50]\n 33732: a1 = u64 [sp + 0x48]\n 33735: a0 = a0 | a1\n 33738: a1 = 0xffffffe0\n 33748: a2 = u64 [sp + 0x20]\n 33751: a1 = a2 <u a1\n 33754: a2 = u64 [sp + 0x58]\n 33757: a1 = 0 if a2 != 0\n 33759: a1 = 0 if a0 != 0\n 33761: jump @530 if a1 == 0\n      : @523 (gas: 15)\n 33765: a1 = reverse s1\n 33767: a2 = reverse s0\n 33769: a3 = reverse a5\n 33771: s1 = reverse a4\n 33773: a0 = s1 | a2\n 33776: u64 [sp + 0x58] = a1\n 33779: u64 [sp + 0x48] = a3\n 33782: a1 = a1 | a3\n 33785: a0 = a0 | a1\n 33788: a0 = a0 >> 0x20\n 33791: u64 [sp + 0x50] = a2\n 33794: a1 = a1 | a2\n 33797: a1 = a1 << 0x20\n 33800: a0 = a0 | a1\n 33803: jump @530 if a0 != 0\n      : @524 (gas: 8)\n 33807: a0 = u64 [sp + 0x38]\n 33810: i32 a0 = a0 + 0x40\n 33813: a1 = u64 [sp]\n 33815: i32 a1 = a1 + 0x20\n 33818: u64 [sp + 0x38] = a1\n 33821: i32 s0 = s1 + 0\n 33823: a1 = s0\n 33825: ra = 322, jump @0\n      : @525 [@dyn 161] (gas: 4)\n 33832: u64 [sp + 0x30] = a0\n 33835: a0 = u64 [sp + 0x38]\n 33838: a1 = s0\n 33840: ra = 324, jump @0\n      : @526 [@dyn 162] (gas: 4)\n 33847: a1 = a0\n 33849: a0 = u64 [sp + 0x30]\n 33852: a2 = s1\n 33854: ra = 326, jump @8\n      : @527 [@dyn 163] (gas: 28)\n 33861: a0 = u64 [sp + 0x60]\n 33864: a0 = a0 + s1\n 33867: u64 [sp + 0x38] = s1\n 33870: a1 = a0 <u s1\n 33873: a2 = u64 [sp + 0x70]\n 33876: a4 = u64 [sp + 0x48]\n 33879: a2 = a2 + a4\n 33882: a2 = a2 + a1\n 33885: a3 = a2 ^ a4\n 33888: a4 = a2 <u a4\n 33891: a4 = a1 if a3 == 0\n 33894: s1 = u64 [sp + 0x40]\n 33897: a5 = u64 [sp + 0x50]\n 33900: a1 = a5 + s1\n 33903: a4 = a4 + a1\n 33906: a3 = a4 <u a1\n 33909: a1 = a1 <u a5\n 33912: a5 = u64 [sp + 0x68]\n 33915: s0 = u64 [sp + 0x58]\n 33918: a5 = a5 + s0\n 33921: a1 = a1 + a5\n 33924: a1 = a1 + a3\n 33927: a1 = a1 | a4\n 33930: a3 = 0xffffffc0\n 33940: a3 = a0 <u a3\n 33943: a3 = 0 if a2 != 0\n 33945: a3 = 0 if a1 != 0\n 33947: jump @530 if a3 == 0\n      : @528 (gas: 3)\n 33951: i32 a0 = a0 + 0x40\n 33954: a1 = 0x20\n 33957: ra = 328, jump @0\n      : @529 [@dyn 164] (gas: 65)\n 33964: u8 [a0 + 31] = 0\n 33967: u8 [a0 + 30] = 0\n 33970: u8 [a0 + 29] = 0\n 33973: u8 [a0 + 28] = 0\n 33976: u8 [a0 + 27] = 0\n 33979: u8 [a0 + 26] = 0\n 33982: u8 [a0 + 25] = 0\n 33985: u8 [a0 + 24] = 0\n 33988: u8 [a0 + 23] = 0\n 33991: u8 [a0 + 22] = 0\n 33994: u8 [a0 + 21] = 0\n 33997: u8 [a0 + 20] = 0\n 34000: u8 [a0 + 19] = 0\n 34003: u8 [a0 + 18] = 0\n 34006: u8 [a0 + 17] = 0\n 34009: u8 [a0 + 16] = 0\n 34012: u8 [a0 + 15] = 0\n 34015: u8 [a0 + 14] = 0\n 34018: u8 [a0 + 13] = 0\n 34021: u8 [a0 + 12] = 0\n 34024: u8 [a0 + 11] = 0\n 34027: u8 [a0 + 10] = 0\n 34030: u8 [a0 + 9] = 0\n 34033: u8 [a0 + 8] = 0\n 34036: u8 [a0 + 7] = 0\n 34039: u8 [a0 + 6] = 0\n 34042: u8 [a0 + 5] = 0\n 34045: u8 [a0 + 4] = 0\n 34048: u8 [a0 + 3] = 0\n 34051: u8 [a0 + 2] = 0\n 34054: u8 [a0 + 1] = 0\n 34057: u8 [a0 + 0] = 0\n 34059: a0 = u64 [sp + 0x38]\n 34062: a0 = a0 + 0x1f\n 34065: s0 = 0x1ffffffe0\n 34075: a0 = a0 & s0\n 34078: a1 = u64 [sp + 0x60]\n 34081: a0 = a0 + a1\n 34084: a1 = a0 <u a1\n 34087: a3 = u64 [sp + 0x70]\n 34090: a2 = a3 + a1\n 34093: a3 = a2 <u a3\n 34096: a3 = a1 if a1 == 0\n 34099: a3 = a3 + s1\n 34102: a1 = a3 <u s1\n 34105: a4 = u64 [sp + 0x68]\n 34108: a1 = a1 + a4\n 34111: a4 = a0 + 0x40\n 34114: a0 = a4 <u a0\n 34117: a5 = a2 + a0\n 34120: a2 = a5 <u a2\n 34123: a2 = a0 if a0 == 0\n 34126: a2 = a2 + a3\n 34129: a0 = a2 <u a3\n 34132: a0 = a0 + a1\n 34135: a1 = u64 [sp + 0x8]\n 34138: u64 [a1] = a4\n 34140: u64 [a1 + 0x8] = a5\n 34143: u64 [a1 + 0x10] = a2\n 34146: u64 [a1 + 0x18] = a0\n 34149: ra = u64 [sp + 0x88]\n 34153: s0 = u64 [sp + 0x80]\n 34157: s1 = u64 [sp + 0x78]\n 34160: sp = sp + 0x90\n 34164: ret\n      : @530 (gas: 1)\n 34166: trap\n      : @531 (gas: 16)\n 34167: a2 = u64 [a1]\n 34169: t0 = u64 [a1 + 0x18]\n 34172: a3 = u64 [a1 + 0x8]\n 34175: a5 = u64 [a1 + 0x10]\n 34178: a4 = a2 + 0x1\n 34181: a2 = a4 <u 0x1\n 34184: a2 = a2 + a3\n 34187: a3 = a4 | a2\n 34190: a3 = a3 <u 0x1\n 34193: a3 = a3 + a5\n 34196: a5 = a3 <u a5\n 34199: a5 = a5 + t0\n 34202: t0 = a2 | a5\n 34205: a1 = a4 | a3\n 34208: a1 = a1 | t0\n 34211: jump @533 if a1 == 0\n      : @532 (gas: 5)\n 34214: u64 [a0] = a4\n 34216: u64 [a0 + 0x8] = a2\n 34219: u64 [a0 + 0x10] = a3\n 34222: u64 [a0 + 0x18] = a5\n 34225: jump @495\n      : @533 (gas: 13)\n 34228: sp = sp + 0xffffffffffffffb0\n 34231: u64 [sp + 0x48] = ra\n 34234: u64 [sp + 0x40] = s0\n 34237: s0 = sp + 0x50\n 34240: sp = sp & 0xfffffffffffffff0\n 34243: u64 [sp + 48] = 0\n 34246: u64 [sp + 40] = 0\n 34249: u64 [sp + 32] = 0\n 34252: a0 = 0x4e487b7100000000\n 34262: a1 = sp + 0x20\n 34265: u64 [sp + 0x38] = a0\n 34268: a0 = 0\n 34270: ra = 330, jump @23\n      : @534 [@dyn 165] (gas: 7)\n 34277: u64 [sp + 24] = 0\n 34280: u64 [sp + 16] = 0\n 34283: u64 [sp + 0] = 0x11\n 34286: a0 = 0x4\n 34289: a1 = sp\n 34291: u64 [sp + 8] = 0\n 34294: ra = 332, jump @23\n      : @535 [@dyn 166] (gas: 3)\n 34301: a1 = 0x24\n 34304: a0 = 0\n 34306: ra = 334, jump @0\n      : @536 [@dyn 167] (gas: 6)\n 34313: i32 a1 = a0 + 0\n 34315: a0 = 0x1\n 34318: a2 = 0x24\n 34321: ra = 0x150\n 34325: ecalli 7 // 'seal_return'\n 34327: fallthrough\n      : @537 [@dyn 168] (gas: 7)\n 34328: a4 = u64 [a1 + 0x18]\n 34331: a3 = u64 [a1 + 0x10]\n 34334: a2 = u64 [a1 + 0x8]\n 34337: t0 = a3 | a4\n 34340: a5 = a2 <u 0x1\n 34343: a5 = 0 if t0 != 0\n 34345: jump @539 if a5 == 0\n      : @538 (gas: 24)\n 34348: a1 = u64 [a1]\n 34350: a5 = a3 >> 0x3b\n 34353: a4 = a4 << 0x5\n 34356: t0 = a4 | a5\n 34359: a5 = a2 >> 0x3b\n 34362: a3 = a3 << 0x5\n 34365: a3 = a3 | a5\n 34368: a5 = a1 >> 0x3b\n 34371: a2 = a2 << 0x5\n 34374: a2 = a2 | a5\n 34377: a1 = a1 << 0x5\n 34380: a5 = a1 + 0x20\n 34383: a1 = a5 <u a1\n 34386: a4 = a2 + a1\n 34389: a2 = a4 <u a2\n 34392: a2 = a1 if a1 == 0\n 34395: a2 = a2 + a3\n 34398: a1 = a2 <u a3\n 34401: a1 = a1 + t0\n 34404: u64 [a0] = a5\n 34406: u64 [a0 + 0x8] = a4\n 34409: u64 [a0 + 0x10] = a2\n 34412: u64 [a0 + 0x18] = a1\n 34415: ret\n      : @539 (gas: 13)\n 34417: sp = sp + 0xffffffffffffffb0\n 34420: u64 [sp + 0x48] = ra\n 34423: u64 [sp + 0x40] = s0\n 34426: s0 = sp + 0x50\n 34429: sp = sp & 0xfffffffffffffff0\n 34432: u64 [sp + 48] = 0\n 34435: u64 [sp + 40] = 0\n 34438: u64 [sp + 32] = 0\n 34441: a0 = 0x4e487b7100000000\n 34451: a1 = sp + 0x20\n 34454: u64 [sp + 0x38] = a0\n 34457: a0 = 0\n 34459: ra = 338, jump @23\n      : @540 [@dyn 169] (gas: 7)\n 34466: u64 [sp + 24] = 0\n 34469: u64 [sp + 16] = 0\n 34472: u64 [sp + 0] = 0x41\n 34475: a0 = 0x4\n 34478: a1 = sp\n 34480: u64 [sp + 8] = 0\n 34483: ra = 340, jump @23\n      : @541 [@dyn 170] (gas: 3)\n 34490: a1 = 0x24\n 34493: a0 = 0\n 34495: ra = 342, jump @0\n      : @542 [@dyn 171] (gas: 7)\n 34502: i32 a1 = a0 + 0\n 34504: a0 = 0x1\n 34507: a2 = 0x24\n 34510: ecalli 7 // 'seal_return'\n 34512: a0 = 0\n 34514: ra = 0x158\n 34518: jump @28\n      : @543 [export #0: 'call'] (gas: 2)\n 34522: a0 = 0\n 34524: ra = 344, jump @28\n      : @544 [@dyn 172] [export #1: 'deploy'] (gas: 2)\n 34531: a0 = 0x1\n 34534: ra = 346, jump @28\n      : @545 [@dyn 173] (gas: 1)\n 34541: trap\n",
						"bytecode": {
							"object": "50564d0000869a000000000000010700c18000c000400368656d61476472614328f55a4df523b3ef952ba7f163c4a11669c2b068fc378daaddf252ad1be2c89b9bc8e21bad52f2ddaa8d37fc68b0c26916a1c463f1a72b95efb323f54d5af5285b7decebe5e15b8cf3841e7d42714fd11e29b2f7c01403dd25b9c3c7c80a205b0480bd0b000000000e0000001c0000002a000000300000003d000000480000005700000062000000740000007f00000063616c6c5f646174615f636f707963616c6c5f646174615f6c6f616463616c6c5f646174615f73697a6563616c6c65726465706f7369745f6576656e746765745f73746f72616765686173685f6b656363616b5f3235367365616c5f72657475726e7365745f696d6d757461626c655f646174617365745f73746f7261676576616c75655f7472616e73666572726564051302c0da860463616c6cc0e386066465706c6f7906c02c9980ad02c0ee86d6006e0238033d03bf035204710423068c06b3091d0a730ca50dd40d170e340e3e0e540e790e850ead0ee60fbc1030114b1465152f1705186f186d19b51a651bf41b861c801d561e0d1fe31f5020ce21a4220e231824b025af26f62737288128f1295c2aa82b3e319432fe320334e93453357736613700388938b139763a363c6d3dd83eaf3f1d40c2404a4263457c466447ab485a49e849794af54adc4b474c934dd24e3d4ffe4f4751f85188521b539753ad5318546454ce541b5564561557a5573858f7591c5cf35c605e06602b620263636408650d666467cf67d468926a2f6f50706f72dc720e7319732e7366731a745e74ca74297547755275ac750b7604775c7784776f78da783479b279897af47a4e7bcf7bfb7b197c247c7e7cac7cfa7c267d447d4f7da97df97d0e7f187f517fa77fec7f448089800a819d81ee82288437844584ac84e585fd8509861886a286ba86c686e386ed868b791052093b3309010001ae9833c8780883881f8488e0553801000128390a680002ae8a123d086800023308800002c8870732003308800002c8870732000000aa876e978a2098aa20977b2098bb20c89b0bc9ba0a979b019abbaeab20ae873751094ec87909647a017c8b95880195ac0178ab64caab9cf42836510934c87909647a017c8b95880195ac0178ab64caab9cf4281c51091a839aff01c8a80b7cbb9599ffc8a70c78cb83aaff5209f032009511d87b10207b15187b161082897b19088289087b1982851082861883773308205010022fff6f686f59821a6faa821b086fbb787b18787a10787908787898bc38787c1f98bc30787c1e98bc28787c1d98bc20787c1c98bc18787c1b98bc10787c1a98bb08787b1998ab38787b1798ab30787b1698ab28787b1598ab20787b1498ab18787b1398ab10787b1298aa08787a11989a38787a0f989a30787a0e989a28787a0d989a20787a0c989a18787a0b989a10787a0a98990878790998893878790798893078790698892878790598892078790498891878790398891078790298880878780182102082151882161095112832009511a07b10587b15507b16489515608411e06476829718829a10829b0882997b17187b1a107b1b087b194911384911304911284911204811402033078318831a20831b403309ff0a05821738821830821928821a207b67187b68107b69087b6a9551a082105882155082164895116032009511a07b10587b15509515608411e08292829308829410829918828a18828b10828c0882887b1a187b1b107b1c087b187b19387b14307b13287b122033078318831a203309ff330b200a099551a082105882155095116032006f687b18980082186f887b1890008218086f887b1888008218106f887b1880008218186f887b18b8008218206f887b18b0008218286f887b18a8008218306f887b18a0008218386f887b18d8008218406f887b18d0008218486f887b18c8008218506f887b18c0008218606f887b18f8008218686f887b18f0008218706f887b18e8008218786f887b18e000837983178000330804821a580a049551e0fe8210180182151001821608019511200132009511f07b10087b158475010a02013d076c0002510507501006095010084d0b951100fe7b10f8017b15f0017b16e801951500028411e0641649267801492670014926680149266001836760010a0a01826770018268780182696801826a6001d49808d4a707d487075207160a39076c00027b67d80097772098772095771f8477e0957880007b68d000d878077b67c80094777b67c00033074033082050100a46fc8268c0006f888269c8006f99826ad0006faa46171a46171946171646171546171446171346171246171146170e46170d46170c46170b46170a4617094617074617064617054617044617034617024617014607787a1898ab38787b1f98ab30787b1e98ab28787b1d98ab20787b1c98aa18787a1b78791098993878791778780898883878780f330780008268d80050100cb3fb83778268d80033090a018267d8005317203c093307800033082050100e94fb7c78097c79087c7a0a7c7b0b978808d4980897aa1097bb18d4ba0ad4a8087c790d7c7a0c7c7b0e7c7c0f979908d4a90997bb1097cc18d4cb0bd4b909979920d489027c79017c7a7c7b027c7c03979908d4a90997bb1097cc18d4cb0bd4b9097c7a057c7b047c7c067c780797aa08d4ba0a97cc10978818d4c808d4a808978820d498086f886f2a14090000000001000000d3a909d489097b6a880098aa2088aa01948a939a510a86087c78187b6880007c78197b68687c781a7b68787c781b7b68707c781c7b68407c781d7b68287c781e7b68387c781f7b68307c78107b68607c78117b68487c78127b68587c78137b68507c78147b68207c78157b68087c78167b68187c77177b671048268001204926b8014926b0014926a8014926a0014926d8014926d0014926c8014926c0018368a001836ac001836b80013309ff33070a05018267d0018268c8018269c001826ad801977b3f988c01d4bc0397ac3f987701d4c70797883f989c01d4c80898aa018499019a9c889201848b7fd27c04d23c03db980bd2ca0a88b7209437d4a4089487ab72ac0752070d023308207b64c8007b6ad0007b6bb8007b63c000501010e2f946171f46171e46171d46171c46171b46171a46171946171846171746171646171546171446171346171246171146171046170f46170e46170d46170c46170b46170a4617094617084617074617064617054617044617034617024617014607330820330750101279f99518e08488e07b68d8006481837783893308200a06018268d8008287188288106f746f828267b80095781fd87807826ac000c87a09d8a90ada770a826cc800c8ac07977a3b989b05d4ba0a97993b988805d49808c88400d84009c89208c8a808d3280ad82803daa9037b68b800d8820bd80409dbab09d8c70a826bd000c8ab0b8268d800828c08828898770597ba3bd4a7076f8a6fc864ac98bb05c88707c8ab0bd8870ac8ba0ac87303d87307c87a0ad83807d3ac0b7b6ab000d8ac0adab70ad33807d4b707db7a095109bf0064878368a0017b6898008368c0017b6890007b60a8007b63a000017b67c0007b6cc8007b62d0007b64d8007b62a8017b64a0017b67b0017b6cb8014926d8014926d0014926c8014926c0013309ff330b20330782689800826a90000a09018263a000826cc8008260a8008262d0008264d800954401884701c87202d424078877018268c000c88707d88708c88c0cd80408826ab800d3a209d8a20ada980ad83708826bb000d3bc09d8bc0bda980bd33708d49808da8a0b520b64ff4926b8014926b0014926c001183a070000024926a8014926a0014926c8017b67d801140700000000647261437b67d0018368a001836ac0013309ff330b2033070a094926b8014926b0014926a8014926a001014926d8014926d0014926c8014926c00148268001208368a001836ac001836b80013309ff33070a05018267d0018268c8018269c001826ad801977b3f988c01d4bc0397ac3f987701d4c70797883f989c01d4c80898aa018499019a9c889201848b7fd27c04d23c07db980b7b6bc80088b820d2ac0c64899479d4c40b94b9ab920d058589018e787b67c000db78097b64d8008e4a8ec87b6cd000daca08dab908826728977708826940d49703826938979910826a3097aa18d4a909826a0897aa08826720d47a02826b1897bb10826c1097cc18d4bc04826c6897cc0882678000d47c00826a7897aa10826770977718d4a707d43909826a4897aa08826b60d4ba0a826b5897bb10826c5097cc18d4cb0bd4240cd40707d4ba0a979920d4970797cc20d4ca0a826988009799206faa7b6a80006f777b6788009899207b697851080002330820330750101452f646171f0146171e46171d46171c46171b46171a46171946171846171746171646171546171446171346171246171146171046170f46170e46170d46170c46170b46170a46170946170846170746170646170546170446170346170246170146073308203307501016e8f59518e08488e07b68b0006481837783893308200a06018268b0008287188288106f746f828267c80095781fd87807826ac000c87a09d8a90ada770a826cd800c8ac07977a3b989b05d4ba0a97993b988805d49808c88400d84009c89208c8a808d3280ad82803daa9037b68b800d8820bd80409dbab09d8c70a826bd000c8ab0b8268b000828c08828898770597ba3bd4a7076f8a6fc864ac98bb05c88707c8ab0bd8870ac8ba0ac87303d87307c87a0ad83807d3ac0b7b6ab000d8ac0adab70ad33807d4b707db7a095109bf0064878368a0017b6898008368c0017b6890007b60a8007b63a000017b67c0007b6cc8007b62d0007b64d8007b62a8017b64a0017b67b0017b6cb8014926d8014926d0014926c8014926c0013309ff330b20330782689800826a90000a09018263a000826cc8008260a8008262d0008264d800954401884701c87202d424078877018268c000c88707d88708c88c0cd80408826ab800d3a209d8a20ada980ad83708826bb000d3bc09d8bc0bda980bd33708d49808da8a0b520b64ff4926b8014926b0014926a8014926a001014926d0014926c8014926c00106140700000000004347437b67d8018368a001836ac0013309ff330b2033070a094926b8014926b0014926a8014926a001074926d8014926d0014926c8014926c00148268001208368a001836ac001836b80013309ff33070a058067d4019777208268d801826978d497074926b8014926b0014926a8014926a001077b68d8017b67d001826780007b67c801826788007b67c0018368a001836ac0013309ff330b2033070a0933074033082050101892f37c78117c79107c7a127c7b13978808d4980897aa1097bb18d4ba0ad4a8087c79157c7a147c7b167c7c17979908d4a90997bb1097cc18d4cb0bd4b909979920d489027c79017c7a7c7b027c7c03979908d4a90997bb1097cc18d4cb0bd4b9097c7a057c7b047c7c067c780797aa08d4ba0a97cc10978818d4c808d4a808978820d498037c78197c7a187c7b1a7c7c1b978808d4a80897bb1097cc18d4cb0bd4b8087c7a1d7c7b1c7c7c1e7c791f97aa08d4ba0a97cc10979918d4c909d4a909979920d4890a7c78097c79087c7b0a7c7c0b978808d4980897bb1097cc18d4cb0bd4b8087c790d7c7b0c7c7c0e7c770f979908d4b90997cc10977718d4c707d49707977720d487076f786fa76f396f2ad4a909d4870ad49a0a98aa20d49808978820d4a8085108b200003307330850101a60f2837833070133090a0701492610014926080149260001140700000000717b484e956800017b671801330750101ce1f24926f8004926f0004926e000223307049568e0004926e80033002028c1f2492650014926480149264001140700000000717b484e956840017b675801330750101e9ef249263801492630014926200122330704956820014926280150102081f23308243307501022c7f183783307013309240a070183777b67d800501024b1f18377330833090a01390870000251080d330780000383770a08018267d80033085010268cf18378330733093300280a0701951108f87b10f0077b15e8077b16e0079515f807951118fb8411e0641633074033082050102a58f146171f800046171e46171d46171c46171b46171a46171946171846171746171646171546171446171346171246171146171046170f46170e46170d46170c46170b46170a46170946170846170746170333086c000246170246170146077b68380239086c00024617064617054617045518040728046495670010837740fa33080a01019567ff079577b9018177a4005847fb121808860158471d215263fd0658473082a0700a28090f51471e2152630a28901f9517e08477e07b6730026471491718491710491708490783770a0a01826a300282a71082a81882a90882aad49808d4a707d48707510706288d638267380281775617230728806395670010837760fb3308040a019567ff079577b9018278a8017b6838028278b0017b6830028278b8017b6828028277c0017b672002330820330750102c1ff0826820026f88826928026f99826a30026faa826b38026fbb98bc38787c1f98bc30787c1e98bc28787c1d98bc20787c1c98bc18787c1b98bc10787c1a98bc08787c19787b1898ab38787b1798ab30787b1698ab28787b1598ab20787b1498ab18787b1398ab10787b1298ab08787b11787a10989a38787a0f989a30787a0e989a28787a0d989a20787a0c989a18787a0b989a10787a0a989a08787a09787908988938787907988930787906988928787905988920787904988918787903988910787902988908787901787833072033082050102e49ef33080328f42e5a47e64af8bd240c52471c1562840a2856105147419bd8950a286b2d9517e08477e07b6730026471491718491710491708490783770a0a01826a300282a71082a81882a90882aad49808d4a707d48707510706280f6282673802817756170307280262330740330820501030d5ee7c78187b6840017c78197b6820017c781a7b6830017c781b7b6828017c781c7b6858017c781d7b6838017c781e7b6850017c781f7b6848017c78107b6880017c78117b6860017c78127b6870017c78137b6868017c78147b6898017c78157b6878017c78167b6890017c78177b6888017c78087b68e0017c78097b68a0017c780a7b68b0017c780b7b68a8017c780c7b68f8017c780d7b68b8017c780e7b68f0017c780f7b68e8017c787b6820027c78017b6800027c78027b6810027c78037b6808027c78047b6838027c78057b6818027c78067b6830027c77077b6728029568ff079588b9014928c802014828e802204928e0024928d8024928d0024928600249285802492850024928480295670010837880fc95670010837a00fc95670010837ba0fc3309ff33070a05019567ff079577b901827458028270500282736002827c480297473f980801d4870797383f984901d4980897093f98ca01d49a0b9839017b6c100184cc019acad28a02d27a08d2a90984b77f7b670801dac70b7b6bd80188b7207b68c80194877b62d0017b69c001d4920894877b6c180188c801aa780628bd618267200197770882684001d487078268300197881082692801979918d49808d487078268380197880882695801d4980882695001979910826a480197aa18d4a909d49808978820d478028268600197880882678001d4780882697001979910826a680197aa18d4a909d498088269780197990882679801d47909826a900197aa10826b880197bb18d4ba0ad4a909979920d498088269a0019799088267e001d47909826ab00197aa10826ba80197bb18d4ba0ad4a909826ab80197aa088267f801d47a0a826bf00197bb10826ce80197cc18d4cb0bd4ba0a97aa20d4a909826a000297aa0882672002d47a0a826b100297bb10826c080297cc18d4cb0bd4ba0a826b180297bb0882673802d47b0b826c300297cc1082672802977718d4c707d4b707977720d4a7076f7c6f9b6f8a6f29d4b907d4ca08d48707987720d4b808978820d4870751070628ce2d7b6020027b6428027b6330027b6c78017b6b80017b6a880183973308207b6738027b699001501032baeb8268d8016f8898893878791f98893078791e98892878791d98892078791c98891878791b98891078791a9889087879198269c8016f997878189898387878179898307878169898287878159898207878149898187878139898107878128268d0016f8878791098990878791198893878790f98893078790e98892878790d98892078790c98891878790b98891078790a8269c0016f9978780898880878780998983878780798983078780698982878780598982078780498981878780398981078780278799899087879018267180151070628853e8267800182687801d487071408e0ffffff0000000082699001d88908826988019498947852080628a52c82671001847700ff7b67180282673802837720330820501034a0ea3302330349263802826818026f8a98ab30787b1e98ab28787b1d98ab20787b1c98ab18787b1b98ab10787b1a826820026f8b787a1898aa08787a1998ba38787a1798ba30787a1698ba28787a1598ba20787a1498ba18787a1398ba10787a12826828026f8a787b1098bb08787b1198ab38787b0f98ab30787b0e98ab28787b0d98ab20787b0c98ab18787b0b98ab10787b0a826830026f8b46171f787a0898aa08787a09787b98ba38787a0798ba30787a0698ba28787a0598ba20787a0498ba18787a0398ba10787a0298bb08787b01826708018e779770052821455147fc1218086b0a5147b3a75e090a28e1169517e08477e07b6730026471491718491710491708490783770a0a01826a300282a71082a81882a90882aad49808d4a707d48707510706289a5c82673802817756174307288d5c95670010837700fc3308040a01019569ff079599b90182985802829a600214070000000001000000d38707d4a7077b6800029888208888017b6af80194a8937852080628635c829750027b67e801829748027b67f00195670010837780fa3308240a019567ff079577b9018278e0007b6820028278d8007b6828028278d0007b6830028277c8007b6738023308203307501036d6e8826820026f88826928026f99826a30026faa826b38026fbb98bc38787c1f98bc30787c1e98bc28787c1d98bc20787c1c98bc18787c1b98bc10787c1a98bc08787c19787b1898ab38787b1798ab30787b1698ab28787b1598ab20787b1498ab18787b1398ab10787b1298ab08787b11787a10989a38787a0f989a30787a0e989a28787a0d989a20787a0c989a18787a0b989a10787a0a989a08787a09787908988938787907988930787906988928787905988920787904988918787903988910787902988908787901787833072033082050103800e846171f0346171e46171d46171c46171b46171a46171946171846171746171646171546171446171346171246171146171046170f46170e46170d46170c46170b46170a4617094617084617074617064617054617044617034617024617014607330840330750103a96e79518e08488e07b6818026481837783893308400a06826a180282a71882a81082a90882aa6f776f886f996faa956bff0795bbb9017bbae0027bb9d8027bb8d0027bb7c802492b6002492b5802492b5002492b4802482be8022095670010837880fc95670010837a00fc95670010837ba0fc3309ff33070a059567ff079577b901827850027b681802827848027b681002807858027b680802956700108377a0fa0a03019569ff079599b9018297f0008298e8008199f8006f77987a206f88978b20d4ba0a9777206f99989920d4970798882082690802d3980882691002d39707d4870782681802d3a808d48707520706289e5b33074033082050103c98e67c78117c79107c7a127c7b13978808d4980897aa1097bb18d4ba0ad4a8087c79157c7a147c7b167c7c17979908d4a90997bb1097cc18d4cb0bd4b909979920d489027c79017c7a7c7b027c7c03979908d4a90997bb1097cc18d4cb0bd4b9097c7a057c7b047c7c067c780797aa08d4ba0a97cc10978818d4c808d4a808978820d498037c78197c7a187c7b1a7c7c1b978808d4a80897bb1097cc18d4cb0bd4b8087c7a1d7c7b1c7c7c1e7c791f97aa08d4ba0a97cc10979918d4c909d4a909979920d4890a7c78097c79087c7b0a7c7c0b978808d4980897bb1097cc18d4cb0bd4b8087c790d7c7b0c7c7c0e7c770f979908d4b90997cc10977718d4c707d49707977720d487076f7b6fa96f3c6f2ad4ca07d4b908d47808988820d4b707977720d4870751070628582783973308207b6718027b6938027b6a30027b6b28027b6c200250103e50e546171f46171e46171d46171c46171b46171a46171946171846171746171646171546171446171346171246171146171046170f46170e46170d46170c46170b46170a461709461708461707461706461705461703a00046170279461701c30046070882682802826a2002d48a0a140b00000000010000001408fcffffff0000000082693802d8890882693002949894a846170452080628a126826718028377043308207b6a28027b6b2002501040a0e4826b2802826a30028269380246171f2046171e46171d46171c46171b46171a46171946171846171746171646171546171446171346171246171146171046170f46170e46170d46170c46170b46170a461709461708461707461706461705461704461703461702461701826820029588dcd8890894a894b84607520806280a268267180283772433082050104211e446171f0946171e46171d46171c46171b46171a46171946171846171746171646171546171446171346171246171146171046170f46170e46170d46170c46170b46170a4617094617084617074617064617054617044617034617024617011408bcffffff0000000082693802d889088269300294988269280294984607520806287825826718028377443308205010447fe346171f46171e46171d46171c46171b46171a46171946171846171746171646171546171446171346171246171146171046170f46170e46170d46170c46170b46170a46170946170872461707654617066e461705774617046f4617032028f92d5247e74af8bd0a28cc0f5147dac0a6ea0a28f6249517e08477e07b6730026471491718491710491708490783770a0a01826a300282a71082a81882a90882aad49808d4a707d4870751070628f3558267380281775617230728e655956700108377e0fb3308040a019567ff079577b901827828027b683802827830027b683002827838027b682802827740027b672002330820330750104685e2826820026f88826928026f99826a30026faa826b38026fbb98bc38787c1f98bc30787c1e98bc28787c1d98bc20787c1c98bc18787c1b98bc10787c1a98bc08787c19787b1898ab38787b1798ab30787b1698ab28787b1598ab20787b1498ab18787b1398ab10787b1298ab08787b11787a10989a38787a0f989a30787a0e989a28787a0d989a20787a0c989a18787a0b989a10787a0a989a08787a097879089889387879079889307879069889287879059889207879049889187879039889107879029889087879017878330720330820501048afe1330805288e0151473182a0700a28001d9517e08477e07b6730026471491718491710491708490783770a0a01826a300282a71082a81882a90882aad49808d4a707d4870751070628875482673802817756172307287a5495670010837700fc3308040a01019569ff079599b90182985802829a600214070000000001000000d38707d4a7077b6838029888208888017b6a300294a89378520806285054829750027b672002829748027b672802330820330750104af8e0826830026f88826938026f99826a20026faa826b28026fbb98bc38787c1f98bc30787c1e98bc28787c1d98bc20787c1c98bc18787c1b98bc10787c1a98bc08787c19787b18787a1098ab38787b1798ab30787b1698ab28787b1598ab20787b1498ab18787b1398ab10787b1298aa08787a11787908989a38787a0f989a30787a0e989a28787a0d989a20787a0c989a18787a0b989a10787a0a989908787909787898893878790798893078790698892878790598892078790498891878790398891078790298880878780133072033082050104c22e03308040178781f46171e46171d46171c46171b46171a46171946171846171746171646171546171446171346171246171146171046170f46170e46170d46170c46170b46170a4617094617084617074617064617054617044617034617024617014607330840330750104eb5df9518e08488e07b6838026481837783893308400a06826a380282a71882a81082a90882aa6f776f886f996faa956bff0795bbb9017bbae0027bb9d8027bb8d0027bb7c802492b6002492b5802492b5002492b4802482be80220283a1b9517e08477e07b6730026471491718491710491708490783770a0a01826a300282a71082a81882a90882aad49808d4a707d487075107062841528267380281775617230728345295670010837760fa3308040a019567ff079577b9018278a8007b6838028278b0007b6830028278b8007b6828028277c00028a51d9517e08477e07b6730026471491718491710491708490783770a0a01826a300282a71082a81882a90882aad49808d4a707d4870751070628c6518267380281775617230728b95195670010837700fc3308040a01019569ff079599b90182985802829a600214070000000001000000d38707d4a7077b68e0009888208888017b6ad80094a89378520806288f51829750027b67d000829748027b67c800330820330750105037de8268d8006f888269e0006f99826ad0006faa826bc8006fbb98bc38787c1f98bc30787c1e98bc28787c1d98bc20787c1c98bc18787c1b98bc10787c1a98bc08787c19787b18787a1098ab38787b1798ab30787b1698ab28787b1598ab20787b1498ab18787b1398ab10787b1298aa08787a11787908989a38787a0f989a30787a0e989a28787a0d989a20787a0c989a18787a0b989a10787a0a989908787909787898893878790798893078790698892878790598892078790498891878790398891078790298880878780133072033082050105261dd46171f0446171e46171d46171c46171b46171a46171946171846171746171646171546171446171346171246171146171046170f46170e46170d46170c46170b46170a46170946170846170746170646170546170446170346170246170146073308403307501054f7dc9518e08488e07b6830026481837783893308400a06826a300282a71882a81082a90882aa6f776f886f996faa956bff0795bbb9017bbae002956aff0795aab9017ba9d8029569ff079599b9017b98d0029568ff079588b9017b87c8029567ff079577b901492760029567ff079577b901492758029567ff079577b901492750029567ff079577b901492748029567ff079577b9014827e8022095670010837880fc95670010837a00fc95670010837ba0fc3309ff33070a05019569ff079599b9018297600282985802829a50027b67587b6850d4870788a801947852080628df528299480298973b7b6a4897a805d487077b6728027b69409799057b693002330740330820501056eddb7c78197c79187c7a1a7c7b1b978808d4980897aa1097bb18d4ba0ad4a8087c791d7c7a1c7c7b1e7c7c1f979908d4a90997bb1097cc18d4cb0bd4b909979920d489027c79117c7a107c7b127c7c13979908d4a90997bb1097cc18d4cb0bd4b9097c7a157c7b147c7c167c781797aa08d4ba0a97cc10978818d4c808d4a808978820d498037c78097c7a087c7b0a7c7c0b978808d4a80897bb1097cc18d4cb0bd4b8087c7a0d7c7b0c7c7c0e7c790f97aa08d4ba0a97cc10979918d4c909d4a909979920d4890a7c78017c797c7b027c7c03978808d4980897bb1097cc18d4cb0bd4b8087c79057c7b047c7c067c7707979908d4b90997cc10977718d4c707d49707977720d487076f746fa06f3a6f298268300295873fd88708826b2802c8b80884883f8477e0c897077b69187b672802d89709c8a808c8980bd3ab087b6a20d8ab07da8907c87002d80208c8840c8e298ecadac90ad4c2097b6b20028ebbdb9a0b510b0628a84ed34c09d84c0adb9a08d3020ad4a909db980751070628904e3307403308207b64307b60287b6218027b6c100250105855da826228826810026f88826918026f99826a20026faa826b28026fbb787b1898bc38787c1f98bc30787c1e98bc28787c1d98bc20787c1c98bc18787c1b98bc10787c1a98bb08787b19787a1098ab38787b1798ab30787b1698ab28787b1598ab20787b1498ab18787b1398ab10787b1298aa08787a11787908989a38787a0f989a30787a0e989a28787a0d989a20787a0c989a18787a0b989a10787a0a9899087879097878988938787907988930787906988928787905988920787904988918787903988910787902988808826c18d42c09826a30826b20d4ba0ad4a909989920d42a0a97aa20d4a909787801510906284d1b83c73308207b673850105a56d98262586f288263506f398264486f4a8260406f0b98bc38787c1f98bc30787c1e98bc28787c1d98bc20787c1c98bc18787c1b98bc10787c1a98bc08787c19787b18787a1098ab38787b1798ab30787b1698ab28787b1598ab20787b1498ab18787b1398ab10787b1298aa08787a11787908989a38787a0f989a30787a0e989a28787a0d989a20787a0c989a18787a0b989a10787a0a9899087879097878988938787907988930787906988928787905988920787904988918787903988910787902988808d43009d4240ad4a90998991bd43a0a97aa25d4a909787801510906285e1a826a30826b28d4ab071408e0ffffff00000000826918d88908826c2094c8947852080628381a6497959920d87907c87c087b6860d8c808da77088267380281777b673802c8b8087b6870d8b807c8a7077b67787b69688397816830027b68300250105c0fd8837782683002826938020a95670010492738f995670010492730f995670010492728f99567ff07957741019569ff0795992101956a0010492a20f90250105e72d995670010827758f995680010828850f995690010829948f9956a001082aa40f97b67c0007b69b000d497077b68b8007b6aa800d4a808d4870751070628a03c33074033082050106084d77c78197c79187c7a1a7c7b1b978808d4980897aa1097bb18d4ba0ad4a8087c791d7c7a1c7c7b1e7c7c1f979908d4a90997bb1097cc18d4cb0bd4b909979920d489027c79117c7a107c7b127c7c13979908d4a90997bb1097cc18d4cb0bd4b9097c7a157c7b147c7c167c781797aa08d4ba0a97cc10978818d4c808d4a808978820d498037c78097c7a087c7b0a7c7c0b978808d4a80897bb1097cc18d4cb0bd4b8087c7a0d7c7b0c7c7c0e7c790f97aa08d4ba0a97cc10979918d4c909d4a909979920d4890a7c78017c797c7b027c7c03978808d4980897bb1097cc18d4cb0bd4b8087c79057c7b047c7c067c7707979908d4b90997cc10977718d4c707d49707977720d487076f7b6fac6f3a6f29d4ba07d4c908d47808988820d4c707977720d487075107062844189597207b673002d89702c82a077b673802d8a708da2208c8c8087b682002d8c807c8b7077b67280283973308207b67d8007b69f0007b6ae8007b6be0007b6cf80050106214d646171f2046171e46171d46171c46171b46171a46171946171846171746171646171546171446171346171246171146171046170f46170e46170d46170c46170b46170a4617094617084617074617064617054617044617034617024617014607330820826738501064a9d582623002826a2002d4a20882693802826b2802d4b909d49808988820d4a909979920d498085108062868177c78197c79187c7a1a7c7b1b978808d4980897aa1097bb18d4ba0ad4a8087c791d7c7a1c7c7b1e7c7c1f979908d4a90997bb1097cc18d4cb0bd4b909979920d498087b6810027c78117c79107c7a127c7b13978808d4980897aa1097bb18d4ba0ad4a8087c79157c7a147c7b167c7c17979908d4a90997bb1097cc18d4cb0bd4b909979920d498087b6808027c78097c79087c7a0a7c7b0b978808d4980897aa1097bb18d4ba0ad4a8087c790d7c7a0c7c7b0e7c7c0f979908d4a90997bb1097cc18d4cb0bd4b909979920d498087b6820027c78017c797c7a027c7b03978808d4980897aa1097bb18d4ba0ad4a8087c79057c7a047c7b067c7707979908d4a90997bb10977718d4b707d49707977720d487077b67180283273308205010665dd4826c0802826b1002787c108269200298983878780f98983078780e98982878780d98982078780c98981878780b98981078780a989808787809787908826418029848387878079848307878069848287878059848207878049848187878039848107878029848087878017874787b1898c83878781798c83078781698c82878781598c82078781498c81878781398c81078781298c80878781198b83878781f98b83078781e98b82878781d98b82078781c98b81878781b98b81078781a98b808787819826af00095a240d8a2078260e800c870087b683002d80808da77088269f800c88903d4c407826820026484d4b808d48707d893088269e000c898087b683802510706280c3f826030026439280d459517e08477e07b6730026471491718491710491708490783770a0a01826a300282a71082a81882a90882aad49808d4a707d487075107062834468267380281779569ff079599b90156170307281f464929e0024929d8024929d0024929c80207492960024929580249295002492948024829e802202849135147dd72b8230a28ec459517e08477e07b6730026471491718491710491708490783770a0a01826a300282a71082a81882a90882aad49808d4a707d4870751070628b2458267380281775617630728a54595670010837700fc3308040a01019569ff079599b90182985802829a6002140700000000010000007b672002d38707d4a7077b6838029888208888017b6a000294a89378520806287745829750027b672802829748027b673002956700108377e0fa3308240a01019569ff079599b90182983801829a400182672002d38707d4a7077b68d0019888208888017b6ac80194a89378520806282745829730017b67b801829728017b67c00195670010837700fb3308440a019568ff079588b901828760017b670802828758017b671002828750017b671802828748017b67200295670010837720fb0a03019569ff079599b9018297700182986801819978016f77987a206f88978b20d4ba0a9777206f99989920d4970798882082693802979920989920d3980882693002d39707d4870782682802d3a808d48707510706282b1c826720026f777b67f801826718026f777b67f001826710026f777b67e001826708026f777b67e801289e1e514757c8e2640a2830449517e08477e07b6730026471491718491710491708490783770a0a01826a300282a71082a81882a90882aad49808d4a707d4870751070628f6438267380281775617430728e94395670010837700fc3308040a01019569ff079599b90182985802829a600214070000000001000000d38707d4a7077b6838029888208888017b6a300294a8937852080628bf43829750027b672002829748027b6728024929e0024929d8024929d0024929c80207492960024929580249295002492948024829e8022095670010837880fc95670010837a00fc95670010837ba0fc3309ff33070a059568ff079588b901828750027b671802828748027b671002808758027b67080295670010837780fb0a03019569ff079599b9018297d0018298c8018199d8016f77987a206f88978b20d4ba0a9777206f99989920d4970798882082690802d3980882691002d39707d4870782681802d3a808d487075107062807179568ff079588b9014928e0024928d8024928d0024928c80202492860024928580249285002492848024828e8022095670010837880fc95670010837a00fc95670010837ba0fc3309ff33070a05019568ff079588b90182874802828b600282895002828a58027b6718029577018878017b691002c89808d48709889901c8a9097b6a0002d8a90a7b6b0802c8ba0ad4a80bd4970cd4cb0b520b0628d84e956bff0795bbb901492be002492bd802492bd002492bc802027bb748027bb850027bb958027bba600295670010837880fc95670010837a00fc3309ff330b2033070a093308203307501068c7ce826808026f89826800026f8b826810026f8c826818026f8a98a8387b68f80178781f98a8307b68f00178781e98a8287b68e80178781d98a8207b68e00178781c98a8187b68d80178781b98a8107b68d00178781a98a8087b68c8017878197b6a1002787a1898c8387b68c00178781798c8307b68b80178781698c8287b68b00178781598c8207b68a80178781498c8187b68a00178781398c8107b68980178781298c8087b6890017878117b6c0002787c1098b8387b68880178780f98b8307b68800178780e98b8287b68780178780d98b8207b68700178780c98b8187b68680178780b98b8107b68600178780a98b8087b6858017878097b6b0802787b089898387b6850017878079898307b6848017878069898287b6840017878059898207b6838017878049898187b6830017878039898107b6828017878029898087b6820017878017b691802787933072033082050106a71cd46171f0346171e46171d46171c46171b46171a46171946171846171746171646171546171446171346171246171146171046170f46170e46170d46170c46170b46170a4617094617084617074617064617054617044617034617024617014607330840330750106c07cd9518e08488e07b6818016481837783893308400a06826a180182a71882a81082a90882aa6f7b7b6b18016f887b6810016f997b6908016faa7b6a00019567ff079577b9017b7ae0027b79d8027b78d0027b7bc802492760024927580249275002492748024827e8022095670010837880fc95670010837a00fc95670010837ba0fc3309ff33070a059569ff079599b901826700017b97e002826708017b97d80282976002826810017b98d00280985c02826a18017b9ac802826a3002d4a7077b97600297882082673802d487077b975802826720027b975002826728027b97480295670010837880fc95670010837a00fc3309ff330b2033070a09330820330750106e02cc826830026f89826838026f8a826820026f8b826828026f8c98c83878781f98c83078781e98c82878781d98c82078781c98c81878781b98c81078781a98c8087878197b6c2002787c1898b83878781798b83078781698b82878781598b82078781498b81878781398b81078781298b8087878117b6b2802787b1098a83878780f98a83078780e98a82878780d98a82078780c98a81878780b98a81078780a98a8087878097b6a3002787a089898387878079898307878069898287878059898207878049898187878039898107878029898087878017b69380278793307203308205010701ccb46171f0446171e46171d46171c46171b46171a46171946171846171746171646171546171446171346171246171146171046170f46170e46170d46170c46170b46170a46170946170846170746170646170546170446170346170246170146073308403307501072b2ca9518e08488e07b6818016481837783893308400a06826a180182a71882a81082a90882aa6f7b6f8c6f986fa99567ff079577b9017b6908017b79e0027b6810017b78d8027b6c00017b7cd0027b6b18017b7bc802492760024927580249275002492748024827e8022095670010837880fc95670010837a00fc95670010837ba0fc3309ff33070a05019569ff079599b90182974802829a600282985002829b5802957701887901c89808d48709889901c8b909d8b90bc8ba0ad4a80bd4970cd4cb0b520b0628f349956bff0795bbb901826c00017bbcd002826c18017bbcc802826c10017bbcd802826c08017bbce0027bb748027bb850027bb958027bba600295670010837880fc95670010837a00fc3309ff330b2033070a0933082033075010748ec98268f80178781f8268f00178781e8268e80178781d8268e00178781c8268d80178781b8268d00178781a8268c801787819826810027878188268c0017878178268b8017878168268b0017878158268a8017878148268a0017878138268980178781282689001787811826800027878108268880178780f8268800178780e8268780178780d8268700178780c8268680178780b8268600178780a826858017878098268080278780882685001787807826848017878068268400178780582683801787804826830017878038268280178780282682001787801826818027878330720330820501076a4c846171f0546171e46171d46171c46171b46171a46171946171846171746171646171546171446171346171246171146171046170f46170e46170d46170c46170b46170a4617094617084617074617064617054617044617034617024617014607956700108377a0fb3308240a019567ff079577b9018278e8017b6818018278f0017b6810018278f8017b680801827800027b680001330840330750107805c89518e08488e07b68f8006481837783893308400a06826af80082a71882a81082a90882aa6f776f886f996faa956bff0795bbb9017bbae0027bb9d8027bb8d0027bb7c802826700017bb76002826708017bb75802826710017bb75002826718017bb7480295670010837880fc95670010837a00fc3309ff330b2033070a0933074033082050107a7cc77c78117c79107c7a127c7b13978808d4980897aa1097bb18d4ba0ad4a8087c79157c7a147c7b167c7c17979908d4a90997bb1097cc18d4cb0bd4b909979920d489027c79017c7a7c7b027c7c03979908d4a90997bb1097cc18d4cb0bd4b9097c7a057c7b047c7c067c780797aa08d4ba0a97cc10978818d4c808d4a808978820d498037c78197c7a187c7b1a7c7c1b978808d4a80897bb1097cc18d4cb0bd4b8087c7a1d7c7b1c7c7c1e7c791f97aa08d4ba0a97cc10979918d4c909d4a909979920d4890a7c78097c79087c7b0a7c7c0b978808d4980897bb1097cc18d4cb0bd4b8087c790d7c7b0c7c7c0e7c770f979908d4b90997cc10977718d4c707d49707977720d487076f777b6718016fa77b6708016f377b6710016f277b6700013307330850107c54c63a080800023a091000023a0a1800023a0b200002956cff0795ccb9017bc860027bc958027bca50027bcb4802826820027bc8a002826828027bc89802826830027bc89002826838027bc88802492c8002492c7802492c7002492c6802826810027bc8c002826800027bc8b802826808027bc8b002826818027bc8a802837995670010837700fc330804330a0a0401826908018267100182680001d48707826a1801d4a908d47808988820d4a707977720d487075207880783977b67380233082050107e8fc5826800027878108268880178780f8268800178780e8268780178780d8268700178780c8268680178780b8268600178780a826858017878098268080278780882685001787807826848017878068268400178780582683801787804826830017878038268280178780282682001787801826818027878826810027878188268c0017878178268b8017878168268b0017878158268a8017878148268a00178781382689801787812826890017878118268f80178781f8268f00178781e8268e80178781d8268e00178781c8268d80178781b8268d00178781a8268c801787819330820826738023300f20028a0c451473c4a79750a28ba379517e08477e07b6730026471491718491710491708490783770a0a01826a300282a71082a81882a90882aad49808d4a707d487075107062880378267380281779569ff079599b90156170307286b374929e0024929d8024929d0024929c80202492960024929580249295002492948024829e802200195670010837880fc95670010837a00fc95670010837ba0fc3309ff33070a059568ff079588b901828760027b672002828758027b672802828750027b673002828748027b67380233074033082050208000d0c37c78117c79107c7a127c7b13978808d4980897aa1097bb18d4ba0ad4a8087c79157c7a147c7b167c7c17979908d4a90997bb1097cc18d4cb0bd4b909979920d489027c79017c7a7c7b027c7c03979908d4a90997bb1097cc18d4cb0bd4b9097c7a057c7b047c7c067c780797aa08d4ba0a97cc10978818d4c808d4a808978820d498037c78197c7a187c7b1a7c7c1b978808d4a80897bb1097cc18d4cb0bd4b8087c7a1d7c7b1c7c7c1e7c791f97aa08d4ba0a97cc10979918d4c909d4a909979920d4890a7c78097c79087c7b0a7c7c0b978808d4980897bb1097cc18d4cb0bd4b8087c790d7c7b0c7c7c0e7c770f979908d4b90997cc10977718d4c707d49707977720d487076f786fa76f396f2ad4a909d4870ad49a0a98aa20d49808978820d4a8085208920483777b6718023308205020820099c2826820026f88826928026f99826a30026faa826b38026fbb98bc38787c1f98bc30787c1e98bc28787c1d98bc20787c1c98bc18787c1b98bc10787c1a98bc08787c19787b18787a1098ab38787b1798ab30787b1698ab28787b1598ab20787b1498ab18787b1398ab10787b1298aa08787a11787908989a38787a0f989a30787a0e989a28787a0d989a20787a0c989a18787a0b989a10787a0a9899087879097878988938787907988930787906988928787905988920787904988918787903988910787902988808787801330820826718023300f20028bdc15147b9b5deac0a28d7349517e08477e07b6730026471491718491710491708490783770a0a01826a300282a71082a81882a90882aad49808d4a707d48707510706289d3482673802817756172307289034956700108377c0fb3308040a019567ff079577b901827808027b683802827810027b683002827818027b68280282772002017b6720023308203307502084002ec1826820026f88826928026f99826a30026faa826b38026fbb98bc38787c1f98bc30787c1e98bc28787c1d98bc20787c1c98bc18787c1b98bc10787c1a98bc08787c19787b1898ab38787b1798ab30787b1698ab28787b1598ab20787b1498ab18787b1398ab10787b1298ab08787b11787a10989a38787a0f989a30787a0e989a28787a0d989a20787a0c989a18787a0b989a10787a0a989a08787a0978790898893878790798893078790698892878790598892078790498891878790398891078790298890878790178783307203308205020860057c03308060178781f46171e46171d46171c46171b46171a46171946171846171746171646171546171446171346171246171146171046170f46170e46170d46170c46170b46170a4617094617084617074617064617054617044617034617024617014607330840330750208800e9bf9518e08488e07b6838026481837783893308400a06826a380282a71882a81082a90882aa6f776f886f996faa956bff0795bbb9017bbae0027bb9d8027bb8d0027bb7c802492b6002492b5802492b5002492b4802482be802200195670010837880fc95670010837a00fc95670010837ba0fc3309ff33070a059568ff079588b901828758027b672802828750027b673002828748027b67380233074033082050208a0044bf7c78117c79107c7a127c7b13978808d4980897aa1097bb18d4ba0ad4a8087c79157c7a147c7b167c7c17979908d4a90997bb1097cc18d4cb0bd4b909979920d489027c79017c7a7c7b027c7c03979908d4a90997bb1097cc18d4cb0bd4b9097c7a057c7b047c7c067c780797aa08d4ba0a97cc10978818d4c808d4a808978820d498037c78197c7a187c7b1a7c7c1b978808d4a80897bb1097cc18d4cb0bd4b8087c7a1d7c7b1c7c7c1e7c791f97aa08d4ba0a97cc10979918d4c909d4a909979920d4890a7c78097c79087c7b0a7c7c0b978808d4980897bb1097cc18d4cb0bd4b8087c790d7c7b0c7c7c0e7c770f979908d4b90997cc10977718d4c707d49707977720d487076f786fa76f396f2ad4a909d4870ad49a0a98aa20d49808978820d4a80852080628603100514703defd060a2830319517e08477e07b6730026471491718491710491708490783770a0a01826a300282a71082a81882a90882aad49808d4a707d4870751070628f6308267380281775617030728e93033074033082050208c00bcbd7c78187b6840017c78197b6820017c781a7b6830017c781b7b6828017c781c7b6858017c781d7b6838017c781e7b6850017c781f7b6848017c78107b6880017c78117b6860017c78127b6870017c78137b6868017c78147b6898017c78157b6878017c78167b6890017c78177b6888017c78087b68e0017c78097b68a0017c780a7b68b0017c780b7b68a8017c780c7b68f8017c780d7b68b8017c780e7b68f0017c780f7b68e8017c787b6820027c78017b6800027c78027b6810027c78037b6808027c78047b6838027c78057b6818027c78067b6830027c77077b6728029568ff079588b9014828e802204928e0024928d8024928d0024928c8024928600249285802492850024928480295670010837880fc95670010837a00fc95670010837ba0fc3309ff33070a05019567ff079577b901827458028270500282736002827c480297473f980801d4870797383f984901d4980897093f98ca01d49a0b9839017b6c100184cc019acad28a02d27a08d2a90984b77f7b670801dac70b7b6bd80188b7207b68c80194877b62d0017b69c001d4920894877b6c180188c801aa7806284a338267200197770882684001d487078268300197881082692801979918d49808d487078268380197880882695801d4980882695001979910826a480197aa18d4a909d49808978820d478028268600197880882678001d4780882697001979910826a680197aa18d4a909d498088269780197990882679801d47909826a900197aa10826b880197bb18d4ba0ad4a909979920d498088269a0019799088267e001d47909826ab00197aa10826ba80197bb18d4ba0ad4a909826ab80197aa088267f801d47a0a826bf00197bb10826ce80197cc18d4cb0bd4ba0a97aa20d4a909826a000297aa0882672002d47a0a826b100297bb10826c080297cc18d4cb0bd4ba0a826b180297bb0882673802d47b0b826c300297cc1082672802977718d4c707d4b707977720d4a7076f7c6f9b6f8a6f29d4b907d4ca08d48707987720d4b808978820d487075207b8fc7b6020027b6428027b6330027b6c78017b6b80017b6a880183973308207b6738027b69900150208e00a3ba8268d8016f8898893878791f98893078791e98892878791d98892078791c98891878791b98891078791a9889087879198269c8016f997878189898387878179898307878169898287878159898207878149898187878139898107878128268d0016f8878791098990878791198893878790f98893078790e98892878790d98892078790c98891878790b98891078790a8269c0016f9978780898880878780998983878780798983078780698982878780598982078780498981878780398981078780278799899087879018267180151070628240e8267800182687801d487071408e0ffffff0000000082699001d889088269880194989478510890fb82671001847700ff7b67180282673802837720330820502090008ab93302330349263802826818026f8a98ab30787b1e98ab28787b1d98ab20787b1c98ab18787b1b98ab10787b1a826820026f8b787a1898aa08787a1998ba38787a1798ba30787a1698ba28787a1598ba20787a1498ba18787a1398ba10787a12826828026f8a787b1098bb08787b1198ab38787b0f98ab30787b0e98ab28787b0d98ab20787b0c98ab18787b0b98ab10787b0a826830026f8b46171f787a0898aa08787a09787b98ba38787a0798ba30787a0698ba28787a0598ba20787a0498ba18787a0398ba10787a0298bb08787b01826708018e7797700528191a33074033082050209200a2b87c78117c79107c7a127c7b13978808d4980897aa1097bb18d4ba0ad4a8087c79157c7a147c7b167c7c17979908d4a90997bb1097cc18d4cb0bd4b909979920d489027c79017c7a7c7b027c7c03979908d4a90997bb1097cc18d4cb0bd4b9097c7a057c7b047c7c067c780797aa08d4ba0a97cc10978818d4c808d4a808978820d498037c78197c7a187c7b1a7c7c1b978808d4a80897bb1097cc18d4cb0bd4b8087c7a1d7c7b1c7c7c1e7c791f97aa08d4ba0a97cc10979918d4c909d4a909979920d4890a7c78097c79087c7b0a7c7c0b978808d4980897bb1097cc18d4cb0bd4b8087c790d7c7b0c7c7c0e7c770f979908d4b90997cc10977718d4c707d49707977720d487076f7b6fa96f3c6f2ad4ca07d4b908d47808988820d4b707977720d48707520764f983973308207b6718027b6938027b6a30027b6b28027b6c2002502094005bb746171f46171e46171d46171c46171b46171a46171946171846171746171646171546171446171346171246171146171046170f46170e46170d46170c46170b46170a461709461708461707461706461705461703a00046170279461701c30046070882682802826a2002d48a0a140b00000000010000001408fcffffff0000000082693802d8890882693002949894a84617045108aef8826718028377043308207b6a28027b6b200250209600acb6826b2802826a30028269380246171f2046171e46171d46171c46171b46171a46171946171846171746171646171546171446171346171246171146171046170f46170e46170d46170c46170b46170a461709461708461707461706461705461704461703461702461701826820029588dcd8890894a894b84607510818f882671802837724330820502098001eb646171f0e46171e46171d46171c46171b46171a46171946171846171746171646171546171446171346171246171146171046170f46170e46170d46170c46170b46170a4617094617084617074617064617054617044617034617024617011408bcffffff0000000082693802d889088269300294988269280294984607510887f78267180283774433082050209a008db546171f46171e46171d46171c46171b46171a46171946171846171746171646171546171446171346171246171146171046170f46170e46170d6446170c6546170b7a46170a69461709724617086f461707684617067446170575461704614617032001461702744617016f33084e28a108330820330750209c0011b5826808026f8b826810026f8c826818026f8a826820026f8978791898983878781f98983078781e98982878781d98982078781c98981878781b98981078781a7b69f801989808787819787a1098a83878781798a83078781698a82878781598a82078781498a81878781398a8107878127b6af00198a808787811787c0898c83878780f98c83078780e98c82878780d98c82078780c98c81878780b98c81078780a7b6ce00198c808787809787b98b83878780798b83078780698b82878780598b82078780498b81878780398b8107878027b6be80198b80878780133072033082050209e002ab446171f0646171e46171d46171c46171b46171a46171946171846171746171646171546171446171346171246171146171046170f46170e46170d46170c46170b46170a461709461708461707461706461705461704461703461702461701460733084033075020a000bfb39518e08488e07b68d8016481837783893308400a06826ad80182a71882a81082a90882aa6f776f886f996faa956bff0795bbb9017bbae002956aff0795aab9017ba9d8029569ff079599b9017b98d0029568ff079588b9017b87c8029567ff079577b901492760029567ff079577b901492758029567ff079577b901492750029567ff079577b901492748029567ff079577b9014827e8022095670010837880fc95670010837a00fc95670010837ba0fc3309ff33070a059567ff079577b901827750027b67d8019567ff079577b901827748027b67b0019567ff079577b901807758027b67a80195670010837740fb0a0301956cff0795ccb90182c7900182c8880181c998016f77987a206f88978b20d4ba0a9777206f99989920d497079888208269a801d398088269b001d39707d487078268d801d3a808d4870752078b0733082033075020a20073b2826ae001787a088268e8019889387b69b0017879079889307b69a8017879069889287b69a0017879059889207b6998017879049889187b6990017879039889107b6988017879029889087b69800178790178788269f00178791098a8387b68780178780f98a8307b68700178780e98a8287b68680178780d98a8207b68600178780c98a8187b68580178780b98a8107b68500178780a98aa087b6a4801787a098268f801787818989a387b6a4001787a17989a307b6a3801787a16989a287b6a3001787a15989a207b6a2801787a14989a187b6a2001787a13989a107b6a1801787a129899087b6910017879119889387b69080178791f9889307b69000178791e9889287b69f80078791d9889207b69f00078791c9889187b69e80078791b9889107b69e00078791a9888087b68d8007878193307203308205020a40034b146171f0346171e46171d46171c46171b46171a46171946171846171746171646171546171446171346171246171146171046170f46170e46170d46170c46170b46170a461709461708461707461706461705461704461703461702461701460733084033075020a600c9b09518e08488e07b68d8016481837783893308400a06826ad80182a71882a81082a90882aa6f776f886f996faa956bff0795bbb9017bbae0027bb9d8027bb8d0027bb7c802492b6002492b5802492b5002492b4802482be8022095670010837880fc95670010837a00fc95670010837ba0fc3309ff33070a05019569ff079599b901809758028298480282995002826a3802d3a707826b3002d3b808d48707826c2802d3c90882690002d49808d48707520706288c273307403308205020a80008b07c78117c79107c7a127c7b13978808d4980897aa1097bb18d4ba0ad4a8087c79157c7a147c7b167c7c17979908d4a90997bb1097cc18d4cb0bd4b909979920d489027c79017c7a7c7b027c7c03979908d4a90997bb1097cc18d4cb0bd4b9097c7a057c7b047c7c067c780797aa08d4ba0a97cc10978818d4c808d4a808978820d498037c78197c7a187c7b1a7c7c1b978808d4a80897bb1097cc18d4cb0bd4b8087c7a1d7c7b1c7c7c1e7c791f97aa08d4ba0a97cc10979918d4c909d4a909979920d4890a7c78097c79087c7b0a7c7c0b978808d4980897bb1097cc18d4cb0bd4b8087c790d7c7b0c7c7c0e7c770f979908d4b90997cc10977718d4c707d49707977720d487076f7b6fa96f3c6f2ad4ca07d4b908d47808988820d4b707977720d4870751070628c7f083973308207b6718027b6938027b6a30027b6b28027b6c20025020aa00bfae46171f46171e46171d46171c46171b46171a46171946171846171746171646171546171446171346171246171146171046170f46170e46170d46170c46170b46170a461709461708461707461706461705461703a00046170279461701c30046070882682802826a2002d48a0a140b00000000010000001408fcffffff0000000082693802d8890882693002949894a8461704520806280ff0826718028377043308207b6a28027b6b20025020ac000eae826b2802826a30028269380246171f2046171e46171d46171c46171b46171a46171946171846171746171646171546171446171346171246171146171046170f46170e46170d46170c46170b46170a461709461708461707461706461705461704461703461702461701826820029588dcd8890894a894b846075208062877ef826718028377243308205020ae007ead46171f0d46171e46171d46171c46171b46171a46171946171846171746171646171546171446171346171246171146171046170f46170e46170d46170c46170b46170a4617094617084617074617064617054617044617034617024617011408bcffffff0000000082693802d88908826930029498826928029498460752080628e4ee826718028377443308205020b000ebac46171f46171e46171d46171c46171b46171a46171946171846171746171646171546171446171346171246171146171046170f46170e46170d46170c7246170b6546170a6e461709774617086f4617072046170664461705694617046c46170361461702764617016e330849017878330864826718025020b2006fac83783307013309640a070133082033075020b40059ac46171f0146171e46171d46171c46171b46171a46171946171846171746171646171546171446171346171246171146171046170f46170e46170d46170c46170b46170a461709461708461707461706461705461704461703461702461701460733082033075020b600eeab9518e08488e0648183777b68180283893308200a0601826710018877028268200294878268300282692802d498089487510752043300330233034926380228090733082033075020b800a2ab46171f46171e46171d46171c46171b46171a46171946171846171746171646171546171446171346171246171146171046170f46170e46170d46170c46170b46170a461709461708461707461706461705461704461703461702461701460733082033075020ba0038ab9518e08488e0648183777b68180283893308200a0601826710018877028268200294878268300282692802d4980894875107ab093300330233034926380228620c3307403308205020bc00ebaa7c78117c79107c7a127c7b13978808d4980897aa1097bb18d4ba0ad4a8087c79157c7a147c7b167c7c17979908d4a90997bb1097cc18d4cb0bd4b909979920d489027c79017c7a7c7b027c7c03979908d4a90997bb1097cc18d4cb0bd4b9097c7a057c7b047c7c067c780797aa08d4ba0a97cc10978818d4c808d4a808978820d498037c78197c7a187c7b1a7c7c1b978808d4a80897bb1097cc18d4cb0bd4b8087c7a1d7c7b1c7c7c1e7c791f97aa08d4ba0a97cc10979918d4c909d4a909979920d4890a7c78097c79087c7b0a7c7c0b978808d4980897bb1097cc18d4cb0bd4b8087c790d7c7b0c7c7c0e7c770f979908d4b90997cc10977718d4c707d49707977720d487076f7b6fa96f3c6f2ad4ca07d4b908d47808988820d4b707977720d4870751070628aaeb83973308207b6718027b6938027b6a30027b6b28027b6c20025020be00a2a946171f46171e46171d46171c46171b46171a46171946171846171746171646171546171446171346171246171146171046170f46170e46170d46170c46170b46170a461709461708461707461706461705461703a00046170279461701c30046070882682802826a2002d48a0a140b00000000010000001408fcffffff0000000082693802d8890882693002949894a846170452080628f2ea826718028377043308207b6a28027b6b20025020c000f1a8826b2802826a30028269380246171f2046171e46171d46171c46171b46171a46171946171846171746171646171546171446171346171246171146171046170f46170e46170d46170c46170b46170a461709461708461707461706461705461704461703461702461701826820029588dcd8890894a894b84607520806285aea826718028377243308205020c20061a846171f0b46171e46171d46171c46171b46171a46171946171846171746171646171546171446171346171246171146171046170f46170e46170d46170c46170b46170a4617094617084617074617064617054617044617034617024617011408bcffffff0000000082693802d88908826930029498826928029498460752080628c7e9826718028377443308205020c400cea746171f46171e46171d46171c46171b46171a46171946171846171746171646171546171446171346171246171146171046170f46170e46170d46170c46170b46170a6446170965461708774617076f4617066c4617056c46170461461703202845f24926280249262002492630024926380282671802827b826890019589207b69b801d8890882698801c8890a7b6ab001d89a0ada880a8278088279108277186fbc6f8b6f996f7482678001c87a0a7b6aa801d87a0782687801c887077b67a00195670010837780fc7b679801019568ff079588b9017b6b00027b8bd8027b6910027b89d0027b6408027b84c8027b6c18027b8ce002492860024928580249285002492848024828e8022095670010837a00fc95670010837ba0fc3309ff3307826898010a05018268b80182672802c88707d88708826bb00182692002c8b909c88909d3b90ad8b90bdaa80b826aa80182683002c8a808d8a802826c3802826aa001c8ac0cc82c0ac88b0bd88b08c8a808d49808d4b709d48909d4b808989920978820d49808510806282be89568ff079588b901828960027b69f001828958027b69f801828950027b69e801828848027b68e00183773308205020c6000fa68268e0016f8898893878791f98893078791e98892878791d98892078791c98891878791b98891078791a9889087879198269e8016f997878189898387878179898307878169898287878159898207878149898187878139898107878128268f0016f88826af8016faa787910989908787911787a0898a93878790f98a93078790e98a92878790d98a92078790c98a91878790b98a91078790a98aa08787a0978789889387879079889307879069889287879059889207879049889187879039889107879029888087878018264080295440188470182691002c8790982672802957020d8700882672002c88702d8720ada880a82673002c8a703d8730a826b3802c8ab0b8267d001d873087b6830028268d801d8800c826ac801d3a208d8a20ada8c0a826cc001d3cb087b6b3802d8cb0c826b3002da8b0cd3730bd4b808d4940b88bb0182670002c87b0bd87b07db8c0a826c1802c87c0c7b6028027b6220027b633002520aabfd950a3fd80a07c8720bd82b08da7708c88304d8340782693802c8970784aae082629001c82a087b683002d8a80982638801c83b0ac89a0cd3bc0ad8bc0bdaa90b82608001c80408c8b809d8890ad84808826b7801c8b707c88707c87a0a8ea78e98dba7087b6938027b6a2802d4a9078ec9db7809510906284b2382673002d82707d33c08d83c09da870982673802d80704826a2802d3ba08d8ba0ada840ad30707d48707da790a510a062818233307403308207b6c20025020c800eaa3826828026f88826938026f99826a20026faa826b30026fbb787b1898bc38787c1f98bc30787c1e98bc28787c1d98bc20787c1c98bc18787c1b98bc10787c1a98bb08787b19787a1098ab38787b1798ab30787b1698ab28787b1598ab20787b1498ab18787b1398ab10787b1298aa08787a11787908989a38787a0f989a30787a0e989a28787a0d989a20787a0c989a18787a0b989a10787a0a98990878790978789889387879079889307879069889287879059889207879049889187879039889107879029888087878013307403308205020ca0013a37c78017c797c7a027c7b03978808d4980897aa1097bb18d4ba0ad4a8087c79057c7a047c7b067c7c07979908d4a90997bb1097cc18d4cb0bd4b909979920d489027c79097c7a087c7b0a7c7c0b979908d4a90997bb1097cc18d4cb0bd4b9097c7a0d7c7b0c7c7c0e7c780f97aa08d4ba0a97cc10978818d4c808d4a808978820d498037c78117c7a107c7b127c7c13978808d4a80897bb1097cc18d4cb0bd4b8087c7a157c7b147c7c167c791797aa08d4ba0a97cc10979918d4c909d4a909979920d4890a7c78197c79187c7b1a7c7c1b978808d4980897bb1097cc18d4cb0bd4b8087c791d7c7b1c7c7c1e7c771f979908d4b90997cc10977718d4c707d49707977720d487076f7b7b6b20026fa97b6928026f387b6830026f2c7b6c3802956aff0795aab901826778017ba740826780017ba738826788017ba730826790017ba7287bac607ba8587ba9509567ff07957721029568ff07958801029569ff079599e1017bab485020cc004e22826b28028269200282673802d4b707826a3002d4a908d47808988820d4a707977720d487075107062864e364a29568ff079588b901828770828a80007b6a1802828368828a7828ff054926280249262002492630024926380282671802827b826890019589207b69b801d8890882698801c8890a7b6ab001d89a0ada880a8278088279108277186fbc6f8b6f996f7482678001c87a0a7b6aa801d87a0782687801c887077b67a00195670010837780fc7b679801019568ff079588b9017b6b00027b8bd8027b6910027b89d0027b6408027b84c8027b6c18027b8ce002492860024928580249285002492848024828e8022095670010837a00fc95670010837ba0fc3309ff3307826898010a05018268b80182672802c88707d88708826bb00182692002c8b909c88909d3b90ad8b90bdaa80b826aa80182683002c8a808d8a802826c3802826aa001c8ac0cc82c0ac88b0bd88b08c8a808d49808d4b709d48909d4b808989920978820d49808510806281ce29568ff079588b901828960027b69f001828958027b69f801828950027b69e801828848027b68e00183773308205020ce0000a08268e0016f8898893878791f98893078791e98892878791d98892078791c98891878791b98891078791a9889087879198269e8016f997878189898387878179898307878169898287878159898207878149898187878139898107878128268f0016f88826af8016faa787910989908787911787a0898a93878790f98a93078790e98a92878790d98a92078790c98a91878790b98a91078790a98aa08787a0978789889387879079889307879069889287879059889207879049889187879039889107879029888087878018264080295440188470182691002c8790982672802957020d8700882672002c88702d8720ada880a82673002c8a703d8730a826b3802c8ab0b8267d001d873087b6830028268d801d8800c826ac801d3a208d8a20ada8c0a826cc001d3cb087b6b3802d8cb0c826b3002da8b0cd3730bd4b808d4940b88bb0182670002c87b0bd87b07db8c0a826c1802c87c0c7b6028027b6220027b633002520aabfd950a3fd80a07c8720bd82b08da7708c88304d8340782693802c8970784aae082629001c82a087b683002d8a80982638801c83b0ac89a0cd3bc0ad8bc0bdaa90b82608001c80408c8b809d8890ad84808826b7801c8b707c88707c87a0a8ea78e98dba7087b6938027b6a2802d4a9078ec9db7809510906289c1d82673002d82707d33c08d83c09da870982673802d80704826a2802d3ba08d8ba0ada840ad30707d48707da790a510a0628691d3307403308207b6c20025020d000db9d826828026f88826938026f99826a20026faa826b30026fbb787b1898bc38787c1f98bc30787c1e98bc28787c1d98bc20787c1c98bc18787c1b98bc10787c1a98bb08787b19787a1098ab38787b1798ab30787b1698ab28787b1598ab20787b1498ab18787b1398ab10787b1298aa08787a11787908989a38787a0f989a30787a0e989a28787a0d989a20787a0c989a18787a0b989a10787a0a98990878790978789889387879079889307879069889287879059889207879049889187879039889107879029888087878013307403308205020d200049d7c78017c797c7a027c7b03978808d4980897aa1097bb18d4ba0ad4a8087c79057c7a047c7b067c7c07979908d4a90997bb1097cc18d4cb0bd4b909979920d489027c79097c7a087c7b0a7c7c0b979908d4a90997bb1097cc18d4cb0bd4b9097c7a0d7c7b0c7c7c0e7c780f97aa08d4ba0a97cc10978818d4c808d4a808978820d498037c78117c7a107c7b127c7c13978808d4a80897bb1097cc18d4cb0bd4b8087c7a157c7b147c7c167c791797aa08d4ba0a97cc10979918d4c909d4a909979920d4890a7c78197c79187c7b1a7c7c1b978808d4980897bb1097cc18d4cb0bd4b8087c791d7c7b1c7c7c1e7c771f979908d4b90997cc10977718d4c707d49707977720d487076f7b7b6b20026fa97b6928026f387b6830026f2a7b6a3802826778017b67d802826780017b67d002826788017b67c802826790017b67c0027b6af8027b68f0027b69e802956700039568e0029569c0027b6be0025020d4004b1c826b28028269200282673802d4b707826a3002d4a908d47808988820d4a707977720d487075107062861dd64a282670803826818037b68180282630003826a100301d3b704d8b70cd89300da400cc92a08c9c804d8c8087b681002d82a0a826c380282681802c9c80cc9ac0c82681002c98c0cc9b707c90707c99308d4c707d4480ad47a0ad4470798aa20977720d4a70751070628f5dc839783887b6838025020d600fe9a83783307826938020a0701330c33093302330a33003303330433081407ffffffff000000007b67a00095670010837780fc7b67980095670010837700fc7b679000956700108377a0fc7b678800288d008260e801826400028263f8018268f001826c380282693002826a2802826b2002017b6310027b6808027b64180295cc0188c701c87909d49c07887701c8b707d8b708c88a0a8268a800d88c02826bb000d3b908d8b904da82048268b800d88702826bc000d3ba03d8ba0bda320bd37808d43808da840b6472826318028264100282680802520b062897c27b6930027b6c38027b6220027b6a28027b60e8017b68f0017b64f8017b63000233082033075020d800f999826830026f8a826838026f897879189898387b68d80178781f9898307b68d00178781e9898287b68c80178781d9898207b68c00178781c9898187b68b80178781b9898107b68b00178781a7b69a8019898087b68e001787819787a1098a8387b68980178781798a8307b68900178781698a8287b68880178781598a8207b68800178781498a8187b68780178781398a8107b6870017878127b6aa00198aa087b6a6801787a11826820026f887878089889387b69500178790f9889307b69480178790e9889287b69400178790d9889207b69380178790c9889187b69300178790b9889107b69280178790a7b6860019888087b682001787809826828026f8878789889387b6918017879079889307b6910017879069889287b6908017879059889207b6900017879049889187b69f8007879039889107b69f0007879027b6858019888087b68e8007878013307203308205020da00a29846171f0346171e46171d46171c46171b46171a46171946171846171746171646171546171446171346171246171146171046170f46170e46170d46170c46170b46170a461709461708461707461706461705461704461703461702461701460733084033075020dc0037989518e08488e07b6818026481837783893308400a06826a180282a71882a81082a90882aa6f776f886f996faa956bff0795bbb9017bbae0027bb9d8027bb8d0027bb7c802492b6002492b5802492b5002492b4802482be802203309ff330782689800826a9000826b88000a05019569ff079599b9018297500282984802829958028477ff8488ff826aa000d2a909826ae000d3a909826ac800d3a808d498088269d000d397078269d800d49707d487075207d9fc8268e80195880188870182690002c87909d49807887701826bf801c87b0ad8ba07826bf001c8b7077b6918027b670802d497077b6880007b6a1002d4a808d48707510771093308208267385020de0032977c78017c797c7a027c7b03978808d4980897aa1097bb18d4ba0ad4a8087c79057c7a047c7b067c7c07979908d4a90997bb1097cc18d4cb0bd4b909979920d489027c79097c7a087c7b0a7c7c0b979908d4a90997bb1097cc18d4cb0bd4b9097c7a0d7c7b0c7c7c0e7c780f97aa08d4ba0a97cc10978818d4c808d4a808978820d498037c78117c7a107c7b127c7c13978808d4a80897bb1097cc18d4cb0bd4b8087c7a157c7b147c7c167c791797aa08d4ba0a97cc10979918d4c909d4a909979920d4890a7c78197c79187c7b1a7c7c1b978808d4980897bb1097cc18d4cb0bd4b8087c791d7c7b1c7c7c1e7c771f979908d4b90997cc10977718d4c707d49707977720d487076f776fa86f346f2b826c0002d38c0ad88c088262e801d87207dba807826af001d3ba08d8ba098263f801d8430bdb890bd34309d49808db8b0751078e0898273b97c805d47808972705826968c89707d89709826b60c8b808c89808d3b802d8b80bda290b98393b97aa05d49a0298ca3b973c05d4ca0a826970c89a0ad89a0c826978c82909c8c909c8ab0bd8ab0ac8a909d49808d4b709d48909d4b808989920978820d498085108062868d783773308205020e00074958268a0017878108268500178780f8268480178780e8268400178780d8268380178780c8268300178780b8268280178780a8268200178780982686001787808826818017878078268100178780682680801787805826800017878048268f8007878038268f0007878028268e8007878018268580178788268a801787818826898017878178268900178781682688801787815826880017878148268780178781382687001787812826868017878118268d80178781f8268d00178781e8268c80178781d8268c00178781c8268b80178781b8268b00178781a82684082608000d3800882695082631002d39309d4980b82694882641802d39409826a5882680802d38a0ad4a909d49b028269e001787919826c380282693002826a2802826b20025202c7f928c0bc6fc76fb83300016489da7009e4080adb790a826918026f9c7b6c08026f497b6900027b6220028e928ecbdac20bdab008d49c0cdaca087b681002647893b8dac7087b68f801140800000000010000008260686407826b60dab807e48009dbb7098267708e72826c788ecadac20a6432826330026404daa804d4c700da090464b993a9da0b098267188577ffc874047b641802d87407826a2085aaffc8a909c8790b7b6bf001d3ab09d8ab04da9704826c200264c7da3807e48c09db37097b6228028e2b826738028e7ada7b0adbac08d4720bdab908643793a7dab307826af000c9a809959bdf7b6be801d89b09d8a80a8260e800c90708c9a80bc89b089582ffd3b208d8b203da8903d30709d80700da9a008267706479826c7893c9dac7098267288577ff7b67d801c87909c849077b67e00197773b826cf00198cb05d47b048267180298770597cc3bd47c0c7b6c1802826828026487826a380293a7daa8078268f800c987087b68c001c908087b68d0019588ff7b68f001c88303973a3b982805d48a0a7b6ac80197223b8268e801988805d428087b68e801d3a402d8a40ad88c0bdb2a0b8268308588ff826a78c8a808826ad801d8a90ac8a808826ae001d89a09c8980898a905978a3bd4a9028269c001d8090a8269f800d897078269e000826c3802c99c0cc97c0cc9ac0c8267d001887701c97c0c8267f001d87307c8c707983a05977c3bd4ca0a988005987c05d8a203d3c007d8c008da7308d3a209d49707da7b08826b18028267e801da870b7b6b18028267c801da8704da8a02da8c00826710029579ff7b69f001887701826cf801c97c03d3430ad84308d8b907dba807826b000264b8826908029398da9b08649b82691002d4c909889901c9980cd89808c98b09d3090ad8090bd82c08dbab08d32c0bd4ba0adba807db7900db7c02db7304826818028269f001db790898873b6489974805d48707979805826ce800c87c0a8267f000c88703d87308c88a07d3c709d8c70ada980a98483b972905d4980898293b970005d49009826b2002826ce000c8c909826cf800c8c808d8c80cc8c909c8a800d88008c889029538607b681801d83808826370826c60826a68c887097b691001d87909da8809c809097b690801d80907c827077b67000101d43a07826878d4c808d48707987720d43808978820d4870751070628d8d27b63707b6c6083a73308207b6a687b6b20025020e200d790826b2002826c2802d4cb08826a380282623002d4a209d49808988820d4c909979920d498085108062895d27c787b6818027c78017b6810027c78027b6808027c78037b6800027c78047b68f8017c78057b68f0017c78067b68e8017c78077b68e0017c78087b68d8017c78097b68d0017c780a7b68c8017c780b7b68c0017c780c7b68b8017c780d7b68b0017c780e7b68a8017c780f7b68a0017c78107b6898017c78117b6890017c78127b6888017c78137b6880017c78147b6878017c78157b6870017c78167b6868017c78177b6860017c78187b6858017c78197b6850017c781a7b6848017c781b7b6840017c781c7b6838017c781d7b6830017c781e7b6828017c771f7b67200183b73308207b6a38027b6230027b6c28025020e400b68f8268200178781f8268280178781e8268300178781d8268380178781c8268400178781b8268480178781a826850017878198268580178781882686001787817826868017878168268700178781582687801787814826880017878138268880178781282689001787811826898017878108268a00178780f8268a80178780e8268b00178780d8268b80178780c8268c00178780b8268c80178780a8268d0017878098268d8017878088268e0017878078268e8017878068268f0017878058268f80178780482680002787803826808027878028268100278780182681802787882672002957420d8740982673002c89700d8700ada990a82672802c8a709d8790a82623802c8a202826768957a20d87a0b826760c8b70cd87c07dabb07826870c88707d887087b683002826b0801d39b0b82681801d38408d4b803642b64427b6b380282680001d38b0b82681001d38008d4b808d4830482683002826b78c88b0b7b6b786473642b7b6030027b69280252043afd8264f000d84207826be800d3b008d8b00ada870a826cf800c9c908d8c9097b693002826ce00082693802c9c903d8a80c82693002c8c909c9930cc9a808c9b009c97909c94207d4c909d4870ad49a0ad4980898aa20978820d4a80851080628cbcf83787b6838028267d8003300d60028ce8d956700104927d0f8956700104927c8f8956700104927c0f8140700000000717b484e9568ff079588c100956900107b97d8f833075020e600478e956700104927b8f8956700104927b0f8956800104928a0f8113307049568ff079588a100956900104929a8f83300ea0028118e95670010492710f995670010492708f995670010492700f9140700000000717b484e9568ff0795880101956900107b9718f933075020e800da8d956700104927f8f8956700104927f0f8956800104928e0f8323307049568ff079588e100956900104929e8f85020ea00a88d33082433075020ec00ed8c83783307013309240a0701330733085020ee00d88c837833070133090a0733073300ee0028c38c33073300ee0028ba8c826828029788209888207b68200283777b6728023308205020f000a08c826820026f88826930026f99826a38026faa98ab38787b1f98ab30787b1e98ab28787b1d98ab20787b1c98ab18787b1b98ab10787b1a98ab08787b19787a1878791046170b46170a4617094617074617064617054617044617034617024617014607989a38787a17989a30787a16989a28787a15989a20787a14989a18787a13989a10787a1298990878791178780898893878790f98893078790e98892878790d98882078780c330820826728025020f200ec8b837833092033070a070195670010492790f895670010492788f895670010492780f8140700000000717b484e9568ff0795888100956900107b9798f833075020f400588c95670010492778f895670010492770f895680010492860f8413307049568ff0795886195690010492968f83300ea0028238c95670010492790f995670010492788f995670010492780f9140700000000717b484e9568ff0795888101956900107b9798f933075020f600ec8b95670010492778f995670010492770f995680010492860f9223307049568ff079588610195690010492968f93300ea0028b68b826738027b674004826730027b674804826728027b67500495684004826720027b67580433075020f8008d8b4926380449263004492620040633072095682004492628045020fa006f8b33084033075020fc00b48a9518e08488e07b6818026481837783893308400a06826a180282a71882a81082a90882aa6f7b7b6be0016f877b6708026f987b6810026fa97b6918027b69f8037b68f0037b67e803956700049569e0037b6be0035020fe00fe8b806714048268180497772082690002d497078269f801d498087b68b8038268e8017b68a8038268f0017b68a003826818027b68d803826810027b68d003826808027b68c8038268e0017b68c0039568c0039569a0037b67b00350200001108c956700108377c0fa0a039569ff079599b9018297100181981801829908016f7a97a7206f88988820d4780298aa206f99979820d4a808989920826720027b673803826728027b673003826730027b672803826738027b6720038267f8017b675803826700027b6750038267e8017b6748038267f0017b674003492678033a0a4800023a0b5000023a0c5800023a076000027b6a98037b6b90037b6c88037b6780037b6970037b68680395698003956a6003956b4003956c20037b62600328c60795670010492750f895670010492748f895670010492740f8140700000000717b484e9568ff07958841956900107b9758f8330750200201b28995670010492738f895670010492730f895680010492820f8413307049568ff0795882195690010492928f83300ea00287d89492670024926680249266002140700000000717b484e956860027b6778023307502004015a894926580249265002492640022233070495684002492648023300ea002838893308205020060182888268e0017878088268b0017878078268a8017878068268a001787805826898017878048268900178780382688801787802826880017878018268e80178788268f0017878108268780178780f8268700178780e8268680178780d8268600178780c8268580178780b8268500178780a826848017878098268f801787818826840017878178268380178781682683001787815826828017878148268200178781382681801787812826810017878118268080178781f8268000178781e8268f80078781d8268f00078781c8268e80078781b8268e00078781a8268d80078781933072033082050200801978746171f0346171e46171d46171c46171b46171a46171946171846171746171646171546171446171346171246171146171046170f46170e46170d46170c46170b46170a4617094617084617074617064617054617044617034617024617014607330840330750200a012c879518e08488e07b68f8016481837783893308400a06826af80182a71882a81082a90882aa6f7b7b6be0016f877b67f8016f987b68f0016fa97b69e8017b6978077b6870077b67680795678007956960077b6b600750200c0176888067940782689807956aff0795aab9018269e8017ba9e0028269f0017ba9d8028269f8017ba9d0028269e0017ba9c8028269c801d498087ba860029777208268d001d487077ba758028267b8017ba750028267c0017ba7480295670010837880fc95670010837a00fc3309ff330b2033070a09330820330750200e015486826800026f88826938026f99826a28026faa826b30026fbb98bc38787c1f98bc30787c1e98bc28787c1d98bc20787c1c98bc18787c1b98bc10787c1a98bc08787c19787b1898ab38787b1798ab30787b1698ab28787b1598ab20787b1498ab18787b1398ab10787b1298ab08787b11787a10989a38787a0f989a30787a0e989a28787a0d989a20787a0c989a18787a0b989a10787a0a989a08787a097879089889387879079889307879069889287879059889207879049889187879039889107879029889087879017878330720330820502010017d8546171f0446171e46171d46171c46171b46171a46171946171846171746171646171546171446171346171246171146171046170f46170e46170d46170c46170b46170a461709461708461707461706461705461704461703461702461701460733084033075020120112859518e08488e07b68f8016481837783893308400a06826af80182a71882a81082a90882aa6f7c6f8b6f976fa87b68f0017b6838077b67f8017b6730077b6be8017b6b280795674007956920077b6ce0017b6c2007502014015c86826a5807826950078268480782674007d4a80bd4970cd4cb0b510bfc04140b00000000ffffffff7b6bd801d4870b88bb01d8b90cc9ca0ac9b909887b01c9b8089577ff826be0017b6b00077b67e0068267e8017b6708077b68e8068267f8017b6710078267f0017b6718077b69f006956800079569e0067b6af806502016014c868267c8017b67d8068267d0017b67d0068267b8017b67c8069568c0068267c0017b67c006330750201801bb844926b8064926b0064926a006043307209568a0064926a80650201a019d84330840330750201c01e2839518e08488e07b68f8016481837783893308400a06826af80182a71882a81082a90882aa6f7b7b6bf8016f877b67f0016f987b68e8016fa97b69e0017b6978067b6870067b67680695678006956960067b6b600650201e012c85826980068267880682689006826a98067b6a38067b6830067b67280695674006956820067b69200650202001d108826740068268480682695006826a58067b6af8057b69f0057b68e8057b67e0058267e0017b6718068267e8017b6710068267f0017b670806956800069569e0058267f8017b670006502022012185826708027b67d805826710027b67d005826718027b67c8059568c005826720027b67c00533075020240190834926b8054926b0054926a005063307209568a0054926a805502026017283330840330750202801b7829518e08488e07b68f8016481837783893308400a06826af80182a71882a81082a90882aa6f7b7b6bf8016f877b67f0016f987b68e8016fa97b69e0017b6978057b6870057b67680595678005956960057b6b600550202a01018482679005826898058269d801d297078488ff7b6838057b67300549262805492620058267e0017b6758058267e8017b6750058267f0017b67480595684005956920058267f8017b67400550202c012284826708027b67b804826710027b67b004826718027b67a804826720027b67a0048267c8017b67d8048267d0017b67d0048267b8017b67c8048267c0017b67c004826700027b67f804826738027b67f004826728027b67e8043a072800023a083000023a09380002826a30027b6ae0047b6718057b6810057b6908053a0740000295690005956ae004956bc004956ca0047b6700050133002e019511e0fe7b1018017b1510017b160801951520018411e082c67b166082c6087b166882c6107b167082cc187b1c7882bc7b1c3882bc087b1c4082bc107b1c4882bb187b1b5082ab7b1b1882ab087b1b2082ab107b1b2882aa187b1a308296829a087b1a829a107b1a088299187b19103307330849115833000428f5803307330850203001ee808378330733090a07019567ff079577b9014917184917104917086479140700000000717b484e9568ff079588c1017b972033075020320165819567ff079577b90149074917f8956800104928a0f9413307049568ff079588a101956900104929a8f93300ea002832814926b0024926a8024926a002140700000000717b484e9568a0027b67b8023307502034010f814926980249269002492680024133070495688002492688023300ea0028ed804926d0074926c8074926c007140700000000717b484e9568c0077b67d807330750203601ca804926b8074926b0074926a007113307049568a0074926a8073300ea0028a88095670010492710f895670010492708f895670010492700f8140700000000717b484e9568ff07958801956900107b9718f833075020380172804926f8074926f0074926e007113307049568e0074926e8073300ea00285080492690044926880449268004140700000000717b484e956880047b679804330750203a012d804926780449267004492660041133070495686004492668043300ea00280b80951170ff7b1088007b1580007b1678828b10828a18828c0882867b1a687b1c70d4ac08d4b60ad48a0a98aa207b1b40d4b808978820d4a8087b1708520893048297187b17508297107b17488297087b1758829583673308207b173850203c01fd7eff46171f20821b48d4b508821950821c58d4c909d49808988820d4b909979920d4980846171e46171d46171c46171b46171a46171946171846171746171646171546171446171346171246171146171046170f46170e46170d46170c46170b46170a46170946170846170746170646170546170446170346170246170146075208ee037b152083573308207b1750203e016a7eff821840821968d48909140800000000010000007b18281408e0ffffff000000007b1660d88608821a7094a87b193094985108a9037c78197c79187c7a1a7c7b1b978808d4980897aa1097bb18d4ba0ad4a8087c791d7c7a1c7c7b1e7c7c1f979908d4a90997bb1097cc18d4cb0bd4b909979920d498087b18187c78117c79107c7a127c7b13978808d4980897aa1097bb18d4ba0ad4a8087c79157c7a147c7b167c7c17979908d4a90997bb1097cc18d4cb0bd4b909979920d498087b18107c78097c79087c7a0a7c7b0b978808d4980897aa1097bb18d4ba0ad4a8087c790d7c7a0c7c7b0e7c7c0f979908d4a90997bb1097cc18d4cb0bd4b909979920d489057c78017c797c7a027c7b03978808d4980897aa1097bb18d4ba0ad4a8087c79057c7a047c7b067c7707979908d4a90997bb10977718d4b707d49707977720d4870682173883772033082050204001197dff821c10821b18787c1098583878780f98583078780e98582878780d98582078780c98581878780b98581078780a9858087878097875089868387878079868307878069868287878059868207878049868187878039868107878029868087878017876787b1898c83878781798c83078781698c82878781598c82078781498c81878781398c81078781298c80878781198b83878781f98b83078781e98b82878781d98b82078781c98b81878781b98b81078781a98b8088219289599c0821a60d89a09821a7094a9821a3094a97878195109b901821750821848d487071408e0ffffff00000000821920d8890882195894989478510895016f686f596fca6fb6d496077b18587b1a48d4a808d487079877207b1950d49808978820d4870752076b0182173883774082188388207b18388365645850204201df7bff7b1730821738645850204401d07bff6478821730646950204601027cff821760c867077b1638d86708821970821b48c8b909c88909d3b90ad8b90bdaa80b821640821c50c86c08c88b0bd88b0ad8c808821c68821558c85c0cc8c808c8a808d4b808140ac0ffffff00000000d8a70a949a948a510adb00837740330820502048015b7bff46171f46171e46171d46171c46171b46171a46171946171846171746171646171546171446171346171246171146171046170f46170e46170d46170c46170b46170a461709461708461707461706461705461704461703461702461701460782173895771f1405e0ffffff01000000d25707821860c88707d88708821a70c88a09d8a90ada880ac86a0ad86a08821b68c8b808957b40d87b07c8790cd89c09da7709c8a909d8a907c887078218087b8b7b8c087b89107b87188210880082158000821678951190003200008289828218828a08828c10959b0188b901c8a909d49b0a88aa01c8ca0ad8ca0cc82c0cd4c902d4ab08d428085108117b7b7b79087b7a107b7c1828fbf69511b07b10487b15409515508411f0491130491128491120140700000000717b484e9518207b1738330750204a01d27aff491118491110490111330704641849110850204c01ba7aff330824330750204e01fe79ff8378330701330924330050010a0701828b18828a10828908d4ba02889c01942c510c48828898ac3b97bb05d4cb02989c3b97aa05d4ca0a988c3b979905d4c909978805958c20d88c08c8890bd89b09da8809c8a909d8a908c828087b7c7b7b087b79107b781832009511b07b10487b15409515508411f0491130491128491120140700000000717b484e9518207b1738330750205201157aff491118491110490141330704641849110850205401fd79ff3308243307502056014179ff83783307013309240a0733073300580128487cff330750205801427cff33070150205a01387cff0049489220248414d249922425494b2a252da9944c49494952525242554a5292244992244992244992244992244992244992244992942449494a52924425294992942429495292242529492a494952519122458a142952a4489122458a1429521449111151521a122122225244443422224984489288449184288a92244992244992242549922449922422141d2112922449922449922449499224499224495201249154249224499224499224499224091111111111911a1191244992a42449528a484444489224499224499224499224a590449546529144924892244992249224122949952449924492248a88881811111111119114d18888489244924492449224111142444400119154448488881011a91111499224494a9244522952242a922449922449922489244992244992244912298a24528824499224499224499224494a21892a8da422892491244992244924492452922a4992248924491411113122222222222229a2111191248924892489244922224244082022928a88101111222215892422424444444452494892244992244992242549922449922449922449922449922449922449922449925425499258a1d4880820a21011129144440011858890889042498b501d126a14aa342222222521244992244992244992242445481289a81111101048204994a41a494a9244918814111111119142144551922449922449922449922449922449922449922449929290040412481225a946929224512409894422914824128944229148241289442291482412452291482412898810222222222222223522222249922489942491481491224924128924914824922491482492442291489244229148128944224912894422492412892449559224492222224a448892244992248992244992245192244992248992244992244949241109201295444424a1224a922449a224499224491225499224499228494a92244992244a020249a224d5485292248a44a41111012491442511111129222222222285288aa22449922449922449922449922449922449922449922425219224499224499224499224298524aa1449aa8a8888888808111111a98888888888464444294949229144922421499224499224499294244992244992244992244992244992244992244992244952952449921211112149922449922449922449889088041040242a492411212222499224499224499224499248aa2492104992244992244992244992041089a292484292244992244992248988884820812451926a2429491245225244444444440a511445499224499224499224499224499224499224499224494a4212481225a9469292245124228d88082089242a898848218aa2284992244992244992244992244992244952922449922449c82449922449922449922449520a4954299254151111111111924449aa91a424491489481111111191244a528d242549a248441a1111401249541211914214455192244992244992244992244992244992a4244992244992104992244992244992244992944212558a24554544444444444444444444444484888888d488884892924892482209499224499224499224499224499224499224499224499224494a92244992244992aa482249124992244925519224499224890889a2284a9224499224499224499224499224499294244992244992244992948494524a92244992244992244992244992244992942449922449922449920490a492922489224992224211232222222222848888888888442449129224499224499224499224499224499224499224499224499294244992244992245549922449249124922811111122499224499224499224499292109188244992244992244992244922499224499224499248922449922449922452922449922449924409118924499224491249922449929424499224499224499224892412492451924824519228493592942489222211112222420249a224d5485292248a44a41111014412495412111191464444124954121111912222222222221a1111a52425892491449244114514512490244a528d242549a248441a11114012495412111111212222444444a422222222221a1111a5242589441249121111212222444444a44644444412491289244922222244444444249542144551228924924822892412492491441249249144228924924822892492482491441249249144128992104992244992244992244992944212558a241545514444444444848888885444444444444424128988888888a45288a2284a922449922492244992244924499224499248922449922451122249922449922449922449925248a24a91a4aa88888888888888101111911a11119124499224898888888888888888482a854824128944229148241289442291482412894422914824128944225112224992244992244992244992225244444444440a495429925415111111111111111191541292244992244992244949922449922449922449922449922449922449922449922445511415420821222222222222222222222222a288d4884824491245422412894422914824128944229148148944229148241289442291482411092489925423494992282212112122228c888848454444444424419224499224499224294992244992244992244992244992244992244992244992a42a49924491208aa228499224499224499224499224499224495292244992248948204994a41a494a9244918814111111112305511445499224499224499224499224499224499224499224494a824c9224499224499224499224a520892a4592aa2222222222c2888888544444444412244992244992244992922449922449922449922449922449922449922449922449aa9224493290244a528d242549a24812241289442291482412894422914824128944229148148944229148242242444444444444446a44444492244912294922912822459248241249229148244922914824894422912489442291241289449224128944924824124992aa2449121111112522889224499224899224499224519224499224899224499224494924110920121511114950112549922451922449922489922449922449942425499224491225499024499224499224494a9224499224499224499224499224499224499224499224a94a9224512222224892244992244992244912222422010410894a4412114444244992244992244992244912491591049124499224499224499224490091282a22099224499224499288888888881891a4208aa22849922449124992244992249224499224492425499224492449104992244992244992244992948224aa1449aa8a88888888888888888888888808111111a988888888888888464444294949229144122988442289249248228924522491441249249144128924924822892492482289249248228924924812449224499224499224499224a520892a4592aa2222222222424444446a4444442289449224419224499224499224294992244992244992244992244992244992244992244992a42a499224252222822449922449922449922421422212400091a8249144041111499224499224499224499244522591049124499224499224499224490091282a89244892244992244912111111111191258292a62092244992244992244992242905494569248a485145529024499224499224499224494a4152511a89225254912448922449922449922425499224499224499224499224499224499224499224499254254992a444444490244992244992244992244448440208201295249288202222499224499224499224499248aa249220922449922449922449922409201245259104499224499224499288888888444444914824922455914824226244444444444444888848d1882422491291442449922449121111111151822849922449922849922449124549922449922449499224499244128924924412894424924422912489249188882449124924124992489248528948492249229124499244104551942449922449922449922449922449922429499224499224484992244992244992244992244992244992244992244992244992244992244992144551444422914892888888041191489224292211492222a24824124992aa4824121131222222222222224444a46844129124894822922449922489888888882841942449922449942449922489a2244992244992a4244992244922894412492289442212492291489244924844449224892412892449244924a944a424912491489224492288a2284a9224499224499224499224499224499294244992244912a424499224499224499224499224499224499224499224499224499224499224498aa228222222222222222288884492244911113149924422924892244992540415adaa0a202222222222111111112322499224124922912449119144444444a4208a9248228924924822914812492491441249241289924822892492482291485422892492482289442249104992244992244992244992948224aa1449aa8a888888880829221a111149241249249288249244128948441249909224499224499224499224499224499224499224499224499224499224499224a98a249248224912499224499224499224499224499212442291482412894422914824128944914824128944229148241289249248124924894444442a2589a2884a92a844002949524a51924a92489244922849142549259248224992244929492491482249445122914824492492489224892492249148449248224992244992884424894422491245299224499224494452924824499224494422499244922492441293244992a424828844244992148944229148241289442291482412894422914824128944229148244a4404914824128944229148241289442291482412894422914824128944a248224924912449922422915444224924a9888844924822228924499224495244242222228088888288880889888844444404101151101111211111410a4a5a41a922452289224114454992244992244992244949922449922449922411941a111111404444414444844422221111110144441444444448444424222222220a22422282142451a54852511445444444109148242222222222222222882822224a494a121111111111111111218410111111111189888808201251101111219188484404105110111211491089442291482412452291482412894422914824128944229148241249824892244992244992244992a4142451a548525114454444441011111111111189442222222222a914445114254992244992244992244992244992244992244992242909224992244992244992244992529044952249551111111111414444920820922449222222222222228288888888288808890852904495224945511411111141444444444410111111111111111111444444444441444844908224aa14492a8aa28888880822228988888888888808222222222222222222222242081111112222624444444a922425499292244929492a49055523921440440a224a8444444422228088828890884844041051101112118988880820125110111211898800220a22422222119124254992248924492a09449224499224499224499224499224499152204900092049299224499224499224499224499224499224499224499224499224254992244992244992409224499224499224499224494992244992244992244992242925920490a4a22a49922489a4a40249815220499224499224499204908a249024499224499224499224494a024892244992244992942422d19224499224494992244912405220494a20054aa2499252922449922449529292244902480a244909a440494514482000"
						},
						"deployedBytecode": {
							"object": ""
						},
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"cardTypes(uint256)": "eaa6c0da",
							"gameMaster()": "bdf84ae7",
							"getApproved(uint256)": "081812fc",
							"mintCard(address,uint256)": "64e2c857",
							"name()": "06fdde03",
							"nextTokenId()": "75794a3c",
							"ownerOf(uint256)": "6352211e",
							"symbol()": "95d89b41",
							"tokenApprovals(uint256)": "acdeb5b9",
							"tokensOfOwner(address)": "8462151c",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"irOptimized": "/// @use-src 0:\"contracts/Card.sol\"\nobject \"Card_278\" {\n    code {\n        {\n            /// @src 0:61:2281  \"contract Card {...\"\n            let _1 := memoryguard(0x80)\n            if callvalue() { revert(0, 0) }\n            let programSize := datasize(\"Card_278\")\n            let argSize := sub(codesize(), programSize)\n            let newFreePtr := add(_1, and(add(argSize, 31), not(31)))\n            if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, _1))\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 0:61:2281  \"contract Card {...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 0:61:2281  \"contract Card {...\" */ 0x24)\n            }\n            mstore(64, newFreePtr)\n            codecopy(_1, programSize, argSize)\n            if slt(sub(add(_1, argSize), _1), 32)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 0:61:2281  \"contract Card {...\"\n            let value := mload(_1)\n            let _2 := and(value, sub(shl(160, 1), 1))\n            if iszero(eq(value, _2))\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 0:61:2281  \"contract Card {...\"\n            let oldLen := extract_byte_array_length(sload(/** @src -1:-1:-1 */ 0))\n            /// @src 0:61:2281  \"contract Card {...\"\n            if gt(oldLen, 31)\n            {\n                mstore(/** @src -1:-1:-1 */ 0, 0)\n                /// @src 0:61:2281  \"contract Card {...\"\n                let data := keccak256(/** @src -1:-1:-1 */ 0, /** @src 0:61:2281  \"contract Card {...\" */ 32)\n                let deleteStart := add(data, 1)\n                deleteStart := data\n                let _3 := add(data, shr(5, add(oldLen, 31)))\n                let start := data\n                for { } lt(start, _3) { start := add(start, 1) }\n                {\n                    sstore(start, /** @src -1:-1:-1 */ 0)\n                }\n            }\n            /// @src 0:61:2281  \"contract Card {...\"\n            sstore(/** @src -1:-1:-1 */ 0, /** @src 0:61:2281  \"contract Card {...\" */ add(\"CardGameCard\", 24))\n            let oldLen_1 := extract_byte_array_length(sload(/** @src 0:147:152  \"\\\"CGC\\\"\" */ 0x01))\n            /// @src 0:61:2281  \"contract Card {...\"\n            if gt(oldLen_1, 31)\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 0:147:152  \"\\\"CGC\\\"\" */ 0x01)\n                /// @src 0:61:2281  \"contract Card {...\"\n                let data_1 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 0:61:2281  \"contract Card {...\" */ 32)\n                let deleteStart_1 := add(data_1, /** @src 0:147:152  \"\\\"CGC\\\"\" */ 0x01)\n                /// @src 0:61:2281  \"contract Card {...\"\n                deleteStart_1 := data_1\n                let _4 := add(data_1, shr(5, add(oldLen_1, 31)))\n                let start_1 := data_1\n                for { }\n                lt(start_1, _4)\n                {\n                    start_1 := add(start_1, /** @src 0:147:152  \"\\\"CGC\\\"\" */ 0x01)\n                }\n                /// @src 0:61:2281  \"contract Card {...\"\n                {\n                    sstore(start_1, /** @src -1:-1:-1 */ 0)\n                }\n            }\n            /// @src 0:61:2281  \"contract Card {...\"\n            sstore(/** @src 0:147:152  \"\\\"CGC\\\"\" */ 0x01, /** @src 0:61:2281  \"contract Card {...\" */ add(\"CGC\", 6))\n            sstore(/** @src 0:642:666  \"gameMaster = _gameMaster\" */ 0x07, /** @src 0:61:2281  \"contract Card {...\" */ or(and(sload(/** @src 0:642:666  \"gameMaster = _gameMaster\" */ 0x07), /** @src 0:61:2281  \"contract Card {...\" */ not(sub(shl(160, 1), 1))), _2))\n            let _5 := mload(64)\n            let _6 := datasize(\"Card_278_deployed\")\n            codecopy(_5, dataoffset(\"Card_278_deployed\"), _6)\n            return(_5, _6)\n        }\n        function extract_byte_array_length(data) -> length\n        {\n            length := shr(1, data)\n            let outOfPlaceEncoding := and(data, 1)\n            if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n            if eq(outOfPlaceEncoding, lt(length, 32))\n            {\n                mstore(0, shl(224, 0x4e487b71))\n                mstore(4, 0x22)\n                revert(0, 0x24)\n            }\n        }\n    }\n    /// @use-src 0:\"contracts/Card.sol\"\n    object \"Card_278_deployed\" {\n        code {\n            {\n                /// @src 0:61:2281  \"contract Card {...\"\n                mstore(64, memoryguard(0x80))\n                if iszero(lt(calldatasize(), 4))\n                {\n                    switch shr(224, calldataload(0))\n                    case 0x06fdde03 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        /// @src 0:82:117  \"string public name = \\\"CardGameCard\\\"\"\n                        let value := /** @src 0:61:2281  \"contract Card {...\" */ 0\n                        let slot := 0\n                        slot := 0\n                        let memPtr := mload(64)\n                        let ret := 0\n                        let slotValue := sload(0)\n                        let length := 0\n                        length := shr(1, slotValue)\n                        let outOfPlaceEncoding := and(slotValue, 1)\n                        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n                        if eq(outOfPlaceEncoding, lt(length, 32))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x22)\n                            revert(0, 0x24)\n                        }\n                        mstore(memPtr, length)\n                        switch outOfPlaceEncoding\n                        case 0 {\n                            mstore(add(memPtr, 32), and(slotValue, not(255)))\n                            ret := add(add(memPtr, shl(5, iszero(iszero(length)))), 32)\n                        }\n                        case 1 {\n                            mstore(0, 0)\n                            let dataPos := keccak256(0, 32)\n                            let i := 0\n                            for { } lt(i, length) { i := add(i, 32) }\n                            {\n                                mstore(add(add(memPtr, i), 32), sload(dataPos))\n                                dataPos := add(dataPos, 1)\n                            }\n                            ret := add(add(memPtr, i), 32)\n                        }\n                        finalize_allocation(memPtr, sub(ret, memPtr))\n                        value := memPtr\n                        let memPos := mload(64)\n                        return(memPos, sub(abi_encode_string(memPos, memPtr), memPos))\n                    }\n                    case 0x081812fc {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        mstore(0, calldataload(4))\n                        mstore(32, /** @src 0:1399:1413  \"tokenApprovals\" */ 0x06)\n                        /// @src 0:61:2281  \"contract Card {...\"\n                        let cleaned := and(sload(keccak256(0, 64)), sub(shl(160, 1), 1))\n                        let memPos_1 := mload(64)\n                        mstore(memPos_1, cleaned)\n                        return(memPos_1, 32)\n                    }\n                    case 0x095ea7b3 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                        let value0 := abi_decode_address()\n                        let value_1 := calldataload(36)\n                        mstore(0, value_1)\n                        mstore(32, /** @src 0:1182:1189  \"ownerOf\" */ 0x03)\n                        /// @src 0:61:2281  \"contract Card {...\"\n                        if iszero(/** @src 0:1168:1198  \"msg.sender == ownerOf[tokenId]\" */ eq(/** @src 0:1168:1178  \"msg.sender\" */ caller(), /** @src 0:61:2281  \"contract Card {...\" */ and(sload(keccak256(0, 64)), sub(shl(160, 1), 1))))\n                        {\n                            let memPtr_1 := mload(64)\n                            mstore(memPtr_1, shl(229, 4594637))\n                            mstore(add(memPtr_1, 4), 32)\n                            mstore(add(memPtr_1, 36), 9)\n                            mstore(add(memPtr_1, 68), \"Not owner\")\n                            revert(memPtr_1, 100)\n                        }\n                        mstore(0, value_1)\n                        mstore(32, /** @src 0:1223:1237  \"tokenApprovals\" */ 0x06)\n                        /// @src 0:61:2281  \"contract Card {...\"\n                        let dataSlot := keccak256(0, 64)\n                        sstore(/** @src 0:1223:1246  \"tokenApprovals[tokenId]\" */ dataSlot, /** @src 0:61:2281  \"contract Card {...\" */ or(and(sload(/** @src 0:1223:1246  \"tokenApprovals[tokenId]\" */ dataSlot), /** @src 0:61:2281  \"contract Card {...\" */ shl(160, 0xffffffffffffffffffffffff)), and(/** @src 0:1223:1251  \"tokenApprovals[tokenId] = to\" */ value0, /** @src 0:61:2281  \"contract Card {...\" */ sub(shl(160, 1), 1))))\n                        /// @src 0:1267:1300  \"Approval(msg.sender, to, tokenId)\"\n                        log4(/** @src 0:61:2281  \"contract Card {...\" */ 0, 0, /** @src 0:1267:1300  \"Approval(msg.sender, to, tokenId)\" */ 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925, /** @src 0:1168:1178  \"msg.sender\" */ caller(), /** @src 0:61:2281  \"contract Card {...\" */ and(/** @src 0:1267:1300  \"Approval(msg.sender, to, tokenId)\" */ value0, /** @src 0:61:2281  \"contract Card {...\" */ sub(shl(160, 1), 1)), /** @src 0:1267:1300  \"Approval(msg.sender, to, tokenId)\" */ value_1)\n                        /// @src 0:61:2281  \"contract Card {...\"\n                        return(0, 0)\n                    }\n                    case 0x23b872dd {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 96) { revert(0, 0) }\n                        let value0_1 := abi_decode_address()\n                        let value_2 := 0\n                        value_2 := calldataload(36)\n                        let _1 := and(value_2, sub(shl(160, 1), 1))\n                        if iszero(eq(value_2, _1)) { revert(0, 0) }\n                        let value_3 := calldataload(68)\n                        /// @src 0:1526:1544  \"msg.sender == from\"\n                        let _2 := /** @src 0:61:2281  \"contract Card {...\" */ and(/** @src 0:1526:1544  \"msg.sender == from\" */ value0_1, /** @src 0:61:2281  \"contract Card {...\" */ sub(shl(160, 1), 1))\n                        /// @src 0:1526:1582  \"msg.sender == from || msg.sender == getApproved(tokenId)\"\n                        let expr := /** @src 0:1526:1544  \"msg.sender == from\" */ eq(/** @src 0:1526:1536  \"msg.sender\" */ caller(), /** @src 0:1526:1544  \"msg.sender == from\" */ _2)\n                        /// @src 0:1526:1582  \"msg.sender == from || msg.sender == getApproved(tokenId)\"\n                        if iszero(expr)\n                        {\n                            /// @src 0:61:2281  \"contract Card {...\"\n                            mstore(0, value_3)\n                            mstore(32, /** @src 0:1399:1413  \"tokenApprovals\" */ 0x06)\n                            /// @src 0:1526:1582  \"msg.sender == from || msg.sender == getApproved(tokenId)\"\n                            expr := /** @src 0:1548:1582  \"msg.sender == getApproved(tokenId)\" */ eq(/** @src 0:1526:1536  \"msg.sender\" */ caller(), /** @src 0:61:2281  \"contract Card {...\" */ and(sload(keccak256(0, 64)), sub(shl(160, 1), 1)))\n                        }\n                        if iszero(expr)\n                        {\n                            let memPtr_2 := mload(64)\n                            mstore(memPtr_2, shl(229, 4594637))\n                            mstore(add(memPtr_2, 4), 32)\n                            mstore(add(memPtr_2, 36), 11)\n                            mstore(add(memPtr_2, 68), \"Not allowed\")\n                            revert(memPtr_2, 100)\n                        }\n                        mstore(0, value_3)\n                        mstore(32, /** @src 0:1617:1624  \"ownerOf\" */ 0x03)\n                        /// @src 0:61:2281  \"contract Card {...\"\n                        if iszero(/** @src 0:1617:1641  \"ownerOf[tokenId] == from\" */ eq(/** @src 0:61:2281  \"contract Card {...\" */ and(sload(keccak256(0, 64)), sub(shl(160, 1), 1)), /** @src 0:1617:1641  \"ownerOf[tokenId] == from\" */ _2))\n                        /// @src 0:61:2281  \"contract Card {...\"\n                        {\n                            let memPtr_3 := mload(64)\n                            mstore(memPtr_3, shl(229, 4594637))\n                            mstore(add(memPtr_3, 4), 32)\n                            mstore(add(memPtr_3, 36), 13)\n                            mstore(add(memPtr_3, 68), \"Invalid owner\")\n                            revert(memPtr_3, 100)\n                        }\n                        mstore(0, value_3)\n                        mstore(32, /** @src 0:1617:1624  \"ownerOf\" */ 0x03)\n                        /// @src 0:61:2281  \"contract Card {...\"\n                        let dataSlot_1 := keccak256(0, 64)\n                        sstore(/** @src 0:1672:1688  \"ownerOf[tokenId]\" */ dataSlot_1, /** @src 0:61:2281  \"contract Card {...\" */ or(and(sload(/** @src 0:1672:1688  \"ownerOf[tokenId]\" */ dataSlot_1), /** @src 0:61:2281  \"contract Card {...\" */ shl(160, 0xffffffffffffffffffffffff)), _1))\n                        mstore(0, _2)\n                        mstore(32, 4)\n                        let dataSlot_2 := keccak256(0, 64)\n                        let _3 := sload(/** @src 0:1704:1721  \"balanceOf[from]--\" */ dataSlot_2)\n                        /// @src 0:61:2281  \"contract Card {...\"\n                        if iszero(_3)\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x11)\n                            revert(0, 36)\n                        }\n                        sstore(dataSlot_2, add(_3, not(0)))\n                        mstore(0, _1)\n                        mstore(32, 4)\n                        let dataSlot_3 := keccak256(0, 64)\n                        sstore(dataSlot_3, /** @src 0:1732:1747  \"balanceOf[to]++\" */ increment_uint256(/** @src 0:61:2281  \"contract Card {...\" */ sload(/** @src 0:1732:1747  \"balanceOf[to]++\" */ dataSlot_3)))\n                        /// @src 0:61:2281  \"contract Card {...\"\n                        mstore(0, value_3)\n                        mstore(32, /** @src 0:1765:1779  \"tokenApprovals\" */ 0x06)\n                        /// @src 0:61:2281  \"contract Card {...\"\n                        let dataSlot_4 := keccak256(0, 64)\n                        sstore(dataSlot_4, and(sload(dataSlot_4), shl(160, 0xffffffffffffffffffffffff)))\n                        /// @src 0:1806:1833  \"Transfer(from, to, tokenId)\"\n                        log4(/** @src 0:61:2281  \"contract Card {...\" */ 0, 0, /** @src 0:1806:1833  \"Transfer(from, to, tokenId)\" */ 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, _2, _1, value_3)\n                        /// @src 0:61:2281  \"contract Card {...\"\n                        return(0, 0)\n                    }\n                    case 0x6352211e {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        mstore(0, calldataload(4))\n                        mstore(32, /** @src 0:191:230  \"mapping(uint => address) public ownerOf\" */ 3)\n                        /// @src 0:61:2281  \"contract Card {...\"\n                        let value_4 := and(sload(keccak256(0, 64)), sub(shl(160, 1), 1))\n                        let memPos_2 := mload(64)\n                        mstore(memPos_2, value_4)\n                        return(memPos_2, 32)\n                    }\n                    case 0x64e2c857 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                        let value0_2 := abi_decode_address()\n                        if iszero(/** @src 0:721:745  \"msg.sender == gameMaster\" */ eq(/** @src 0:721:731  \"msg.sender\" */ caller(), /** @src 0:61:2281  \"contract Card {...\" */ and(sload(/** @src 0:735:745  \"gameMaster\" */ 0x07), /** @src 0:61:2281  \"contract Card {...\" */ sub(shl(160, 1), 1))))\n                        {\n                            let memPtr_4 := mload(64)\n                            mstore(memPtr_4, shl(229, 4594637))\n                            mstore(add(memPtr_4, 4), 32)\n                            mstore(add(memPtr_4, 36), 14)\n                            mstore(add(memPtr_4, 68), \"Not authorized\")\n                            revert(memPtr_4, 100)\n                        }\n                        let _4 := sload(/** @src 0:896:909  \"nextTokenId++\" */ 0x02)\n                        /// @src 0:61:2281  \"contract Card {...\"\n                        sstore(/** @src 0:896:909  \"nextTokenId++\" */ 0x02, increment_uint256(_4))\n                        /// @src 0:61:2281  \"contract Card {...\"\n                        mstore(0, _4)\n                        mstore(32, /** @src 0:920:927  \"ownerOf\" */ 0x03)\n                        /// @src 0:61:2281  \"contract Card {...\"\n                        let dataSlot_5 := keccak256(0, 64)\n                        sstore(/** @src 0:920:936  \"ownerOf[tokenId]\" */ dataSlot_5, /** @src 0:61:2281  \"contract Card {...\" */ or(and(sload(/** @src 0:920:936  \"ownerOf[tokenId]\" */ dataSlot_5), /** @src 0:61:2281  \"contract Card {...\" */ shl(160, 0xffffffffffffffffffffffff)), and(/** @src 0:920:941  \"ownerOf[tokenId] = to\" */ value0_2, /** @src 0:61:2281  \"contract Card {...\" */ sub(shl(160, 1), 1))))\n                        let _5 := and(value0_2, sub(shl(160, 1), 1))\n                        mstore(0, _5)\n                        mstore(32, 4)\n                        let dataSlot_6 := keccak256(0, 64)\n                        sstore(dataSlot_6, /** @src 0:952:967  \"balanceOf[to]++\" */ increment_uint256(/** @src 0:61:2281  \"contract Card {...\" */ sload(/** @src 0:952:967  \"balanceOf[to]++\" */ dataSlot_6)))\n                        /// @src 0:61:2281  \"contract Card {...\"\n                        mstore(0, _4)\n                        mstore(32, /** @src 0:978:987  \"cardTypes\" */ 0x05)\n                        /// @src 0:61:2281  \"contract Card {...\"\n                        sstore(keccak256(0, 64), calldataload(36))\n                        /// @src 0:1023:1056  \"Transfer(address(0), to, tokenId)\"\n                        let _6 := /** @src 0:61:2281  \"contract Card {...\" */ mload(64)\n                        /// @src 0:1023:1056  \"Transfer(address(0), to, tokenId)\"\n                        log4(/** @src 0:61:2281  \"contract Card {...\" */ 0, 0, /** @src 0:1023:1056  \"Transfer(address(0), to, tokenId)\" */ 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, /** @src 0:61:2281  \"contract Card {...\" */ 0, /** @src 0:1023:1056  \"Transfer(address(0), to, tokenId)\" */ _5, _4)\n                        /// @src 0:61:2281  \"contract Card {...\"\n                        mstore(_6, _4)\n                        return(_6, 32)\n                    }\n                    case 0x70a08231 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        mstore(0, and(abi_decode_address(), sub(shl(160, 1), 1)))\n                        mstore(32, 4)\n                        let _7 := sload(keccak256(0, 64))\n                        let memPos_3 := mload(64)\n                        mstore(memPos_3, _7)\n                        return(memPos_3, 32)\n                    }\n                    case 0x75794a3c {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let _8 := sload(/** @src 0:161:184  \"uint public nextTokenId\" */ 2)\n                        /// @src 0:61:2281  \"contract Card {...\"\n                        let memPos_4 := mload(64)\n                        mstore(memPos_4, _8)\n                        return(memPos_4, 32)\n                    }\n                    case 0x8462151c {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        let _9 := and(abi_decode_address(), sub(shl(160, 1), 1))\n                        mstore(0, _9)\n                        mstore(32, 4)\n                        let _10 := sload(keccak256(0, 64))\n                        let _11 := array_allocation_size_array_uint256_dyn(_10)\n                        let memPtr_5 := mload(64)\n                        finalize_allocation(memPtr_5, _11)\n                        mstore(memPtr_5, _10)\n                        let dataSize := array_allocation_size_array_uint256_dyn(_10)\n                        let dataStart := add(memPtr_5, 32)\n                        calldatacopy(dataStart, calldatasize(), add(dataSize, not(31)))\n                        /// @src 0:2029:2043  \"uint count = 0\"\n                        let var_count := /** @src 0:61:2281  \"contract Card {...\" */ 0\n                        /// @src 0:2061:2071  \"uint i = 0\"\n                        let var_i := /** @src 0:61:2281  \"contract Card {...\" */ 0\n                        let _12 := sload(/** @src 0:2077:2088  \"nextTokenId\" */ 0x02)\n                        /// @src 0:2056:2245  \"for (uint i = 0; i < nextTokenId; i++) {...\"\n                        for { }\n                        /** @src 0:2073:2088  \"i < nextTokenId\" */ lt(var_i, _12)\n                        /// @src 0:2061:2071  \"uint i = 0\"\n                        {\n                            /// @src 0:2090:2093  \"i++\"\n                            var_i := /** @src 0:61:2281  \"contract Card {...\" */ add(/** @src 0:2090:2093  \"i++\" */ var_i, /** @src 0:61:2281  \"contract Card {...\" */ 1)\n                        }\n                        /// @src 0:2090:2093  \"i++\"\n                        {\n                            /// @src 0:61:2281  \"contract Card {...\"\n                            mstore(0, var_i)\n                            mstore(32, /** @src 0:2114:2121  \"ownerOf\" */ 0x03)\n                            /// @src 0:2110:2234  \"if (ownerOf[i] == user) {...\"\n                            if /** @src 0:2114:2132  \"ownerOf[i] == user\" */ eq(/** @src 0:61:2281  \"contract Card {...\" */ and(sload(keccak256(0, 64)), sub(shl(160, 1), 1)), _9)\n                            /// @src 0:2110:2234  \"if (ownerOf[i] == user) {...\"\n                            {\n                                /// @src 0:2160:2167  \"count++\"\n                                let _13 := var_count\n                                var_count := increment_uint256(var_count)\n                                /// @src 0:61:2281  \"contract Card {...\"\n                                if iszero(lt(_13, mload(memPtr_5)))\n                                {\n                                    mstore(0, shl(224, 0x4e487b71))\n                                    mstore(4, 0x32)\n                                    revert(0, 0x24)\n                                }\n                                mstore(add(add(memPtr_5, shl(5, _13)), 32), var_i)\n                                /// @src 0:2191:2218  \"if (count == balance) break\"\n                                if /** @src 0:2195:2211  \"count == balance\" */ eq(var_count, _10)\n                                /// @src 0:2191:2218  \"if (count == balance) break\"\n                                {\n                                    /// @src 0:2213:2218  \"break\"\n                                    break\n                                }\n                            }\n                        }\n                        /// @src 0:61:2281  \"contract Card {...\"\n                        let memPos_5 := mload(64)\n                        let tail := add(memPos_5, 32)\n                        mstore(memPos_5, 32)\n                        let pos := tail\n                        let length_1 := mload(memPtr_5)\n                        mstore(tail, length_1)\n                        pos := add(memPos_5, 64)\n                        let srcPtr := dataStart\n                        let i_1 := 0\n                        for { } lt(i_1, length_1) { i_1 := add(i_1, 1) }\n                        {\n                            mstore(pos, mload(srcPtr))\n                            pos := add(pos, 32)\n                            srcPtr := add(srcPtr, 32)\n                        }\n                        return(memPos_5, sub(pos, memPos_5))\n                    }\n                    case 0x95d89b41 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        /// @src 0:124:152  \"string public symbol = \\\"CGC\\\"\"\n                        let value_5 := /** @src 0:61:2281  \"contract Card {...\" */ 0\n                        let offset := 0\n                        offset := 0\n                        let memPtr_6 := mload(64)\n                        let ret_1 := 0\n                        let slotValue_1 := sload(/** @src 0:124:152  \"string public symbol = \\\"CGC\\\"\" */ 1)\n                        /// @src 0:61:2281  \"contract Card {...\"\n                        let length_2 := 0\n                        length_2 := shr(/** @src 0:124:152  \"string public symbol = \\\"CGC\\\"\" */ 1, /** @src 0:61:2281  \"contract Card {...\" */ slotValue_1)\n                        let outOfPlaceEncoding_1 := and(slotValue_1, /** @src 0:124:152  \"string public symbol = \\\"CGC\\\"\" */ 1)\n                        /// @src 0:61:2281  \"contract Card {...\"\n                        if iszero(outOfPlaceEncoding_1)\n                        {\n                            length_2 := and(length_2, 0x7f)\n                        }\n                        if eq(outOfPlaceEncoding_1, lt(length_2, 32))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x22)\n                            revert(0, 0x24)\n                        }\n                        mstore(memPtr_6, length_2)\n                        switch outOfPlaceEncoding_1\n                        case 0 {\n                            mstore(add(memPtr_6, 32), and(slotValue_1, not(255)))\n                            ret_1 := add(add(memPtr_6, shl(5, iszero(iszero(length_2)))), 32)\n                        }\n                        case 1 {\n                            mstore(0, /** @src 0:124:152  \"string public symbol = \\\"CGC\\\"\" */ 1)\n                            /// @src 0:61:2281  \"contract Card {...\"\n                            let dataPos_1 := keccak256(0, 32)\n                            let i_2 := 0\n                            for { } lt(i_2, length_2) { i_2 := add(i_2, 32) }\n                            {\n                                mstore(add(add(memPtr_6, i_2), 32), sload(dataPos_1))\n                                dataPos_1 := add(dataPos_1, /** @src 0:124:152  \"string public symbol = \\\"CGC\\\"\" */ 1)\n                            }\n                            /// @src 0:61:2281  \"contract Card {...\"\n                            ret_1 := add(add(memPtr_6, i_2), 32)\n                        }\n                        finalize_allocation(memPtr_6, sub(ret_1, memPtr_6))\n                        value_5 := memPtr_6\n                        let memPos_6 := mload(64)\n                        return(memPos_6, sub(abi_encode_string(memPos_6, memPtr_6), memPos_6))\n                    }\n                    case 0xacdeb5b9 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        mstore(0, calldataload(4))\n                        mstore(32, /** @src 0:330:376  \"mapping(uint => address) public tokenApprovals\" */ 6)\n                        /// @src 0:61:2281  \"contract Card {...\"\n                        let value_6 := and(sload(keccak256(0, 64)), sub(shl(160, 1), 1))\n                        let memPos_7 := mload(64)\n                        mstore(memPos_7, value_6)\n                        return(memPos_7, 32)\n                    }\n                    case 0xbdf84ae7 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let value_7 := and(sload(/** @src 0:564:589  \"address public gameMaster\" */ 7), /** @src 0:61:2281  \"contract Card {...\" */ sub(shl(160, 1), 1))\n                        let memPos_8 := mload(64)\n                        mstore(memPos_8, value_7)\n                        return(memPos_8, 32)\n                    }\n                    case 0xeaa6c0da {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        mstore(0, calldataload(4))\n                        mstore(32, /** @src 0:285:323  \"mapping(uint => uint) public cardTypes\" */ 5)\n                        /// @src 0:61:2281  \"contract Card {...\"\n                        let _14 := sload(keccak256(0, 64))\n                        let memPos_9 := mload(64)\n                        mstore(memPos_9, _14)\n                        return(memPos_9, 32)\n                    }\n                }\n                revert(0, 0)\n            }\n            function finalize_allocation(memPtr, size)\n            {\n                let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                {\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 0:61:2281  \"contract Card {...\" */ shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(/** @src -1:-1:-1 */ 0, /** @src 0:61:2281  \"contract Card {...\" */ 0x24)\n                }\n                mstore(64, newFreePtr)\n            }\n            function abi_encode_string(headStart, value0) -> tail\n            {\n                mstore(headStart, 32)\n                let length := mload(value0)\n                mstore(add(headStart, 32), length)\n                mcopy(add(headStart, 64), add(value0, 32), length)\n                mstore(add(add(headStart, length), 64), 0)\n                tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n            }\n            function abi_decode_address() -> value\n            {\n                value := calldataload(4)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n            }\n            function increment_uint256(value) -> ret\n            {\n                if eq(value, not(0))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x11)\n                    revert(0, 0x24)\n                }\n                ret := add(value, 1)\n            }\n            function array_allocation_size_array_uint256_dyn(length) -> size\n            {\n                if gt(length, 0xffffffffffffffff)\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                size := add(shl(5, length), 0x20)\n            }\n        }\n        data \".metadata\" hex\"a2646970667358221220a1adca5cfcb7454df874310347ba42602a0d3d2b06cbbeaa0b6d5d018c6a623c64736f6c634300081c0033\"\n    }\n}\n",
					"hash": "e7a19c5adf2fc521bf00b6d77c6ce0986e8b125efb40345237d071196736758e",
					"factoryDependencies": {}
				}
			},
			"contracts/CardInventory.sol": {
				"CardInventory": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_cardNFT",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "cardNFT",
							"outputs": [
								{
									"internalType": "contract Card",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "gameMaster",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getCardOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getCardType",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "getUserCards",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "cardType",
									"type": "uint256"
								}
							],
							"name": "giveCard",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"metadata": {
						"optimizer_settings": {
							"is_debug_logging_enabled": false,
							"is_fallback_to_size_enabled": false,
							"is_verify_each_enabled": false,
							"level_back_end": "Aggressive",
							"level_middle_end": "Aggressive",
							"level_middle_end_size": "Zero"
						},
						"revive_pallet_version": null,
						"revive_version": "0.1.0-dev.12+commit.66f9a4d.llvm-18.1.8",
						"solc_metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_cardNFT\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"cardNFT\",\"outputs\":[{\"internalType\":\"contract Card\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"gameMaster\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getCardOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getCardType\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getUserCards\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"cardType\",\"type\":\"uint256\"}],\"name\":\"giveCard\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/CardInventory.sol\":\"CardInventory\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIfxa[r]EscLMVcul [j]Trpeulxa[r]cLgvifMCTUca[r]LSsTFOtfDnca[r]IulcscCTUtgvifMx[scCTUt] TOntnfDIulgvifMjmul[jul] VcTOcul jmul:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Card.sol\":{\"keccak256\":\"0x818b1d9c58ea846c38ccd812e4a54cbbb9a8732ed7a684e1c817ef5dc12ee5a6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ccfc03703e8707e3009aa619cacc1df4ec33dbfb4d6dfe5bf9043f585cee664c\",\"dweb:/ipfs/QmWoNvzz9mWbC2LGwSadR5faw1eGnfuSUDNUfeFCUZfxQ8\"]},\"contracts/CardInventory.sol\":{\"keccak256\":\"0x3bd5f6f718bd4d12f3a9237026f7f342d3f9156849266e06c4b0cd61d284533d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8cfec2bb96dd260ac778a8dbffaa3a84504080471b1a278814865aaa747aa6e2\",\"dweb:/ipfs/QmVM6mghtp7u11P1tWL82VDSxodc2a5Rk9pLjk8xuvQKT1\"]}},\"version\":1}",
						"solc_version": "0.8.28+commit.7893614a.Emscripten.clang"
					},
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					},
					"storageLayout": {
						"storage": [
							{
								"astId": 284,
								"contract": "contracts/CardInventory.sol:CardInventory",
								"label": "cardNFT",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(Card)278"
							},
							{
								"astId": 286,
								"contract": "contracts/CardInventory.sol:CardInventory",
								"label": "gameMaster",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(Card)278": {
								"encoding": "inplace",
								"label": "contract Card",
								"numberOfBytes": "20"
							}
						}
					},
					"evm": {
						"assembly": "// RO data = 0/0 bytes\n// RW data = 0/65552 bytes\n// Stack size = 16384 bytes\n\n// Instructions = 5836\n// Code size = 18531 bytes\n\n      : @0 (gas: 2)\n     0: i32 a2 = a0 >> 0x10\n     3: jump @6 if a2 != 0\n      : @1 (gas: 2)\n     6: a2 = 0x10001\n    11: jump @6 if a1 >=u a2\n      : @2 (gas: 4)\n    14: a1 = a1 + a0\n    17: i32 a1 = a1 + 0x1f\n    20: a1 = a1 & 0xffffffffffffffe0\n    23: jump @7 if a1 >=u 65537\n      : @3 (gas: 2)\n    29: a3 = i32 [0x20000]\n    34: jump @5 if a3 >=u a1\n      : @4 (gas: 4)\n    37: u32 [0x20000] = a1\n    42: a1 = 0x20010\n    47: a0 = a0 + a1\n    50: ret\n      : @5 (gas: 3)\n    52: a1 = 0x20010\n    57: a0 = a0 + a1\n    60: ret\n      : @6 (gas: 1)\n    62: trap\n      : @7 (gas: 1)\n    63: trap\n      : @8 (gas: 13)\n    64: sp = sp + 0xffffffffffffffd8\n    67: u64 [sp + 0x20] = ra\n    70: u64 [sp + 0x18] = s0\n    73: u64 [sp + 0x10] = s1\n    76: a2 = u64 [a1]\n    78: u64 [sp + 0x8] = a2\n    81: a2 = u64 [a1 + 0x8]\n    84: u64 [sp] = a2\n    86: s0 = u64 [a1 + 0x10]\n    89: s1 = u64 [a1 + 0x18]\n    92: i32 a0 = a0 + 0\n    94: a1 = 0x20\n    97: ra = 2, jump @0\n      : @9 [@dyn 1] (gas: 71)\n   101: a1 = reverse s1\n   103: a2 = reverse s0\n   105: a3 = u64 [sp]\n   107: a3 = reverse a3\n   109: a4 = u64 [sp + 0x8]\n   112: a4 = reverse a4\n   114: u8 [a0 + 0x18] = a4\n   117: u8 [a0 + 0x10] = a3\n   120: u8 [a0 + 0x8] = a2\n   123: u8 [a0] = a1\n   125: a5 = a4 >> 0x38\n   128: u8 [a0 + 0x1f] = a5\n   131: a5 = a4 >> 0x30\n   134: u8 [a0 + 0x1e] = a5\n   137: a5 = a4 >> 0x28\n   140: u8 [a0 + 0x1d] = a5\n   143: a5 = a4 >> 0x20\n   146: u8 [a0 + 0x1c] = a5\n   149: a5 = a4 >> 0x18\n   152: u8 [a0 + 0x1b] = a5\n   155: a5 = a4 >> 0x10\n   158: u8 [a0 + 0x1a] = a5\n   161: a4 = a4 >> 0x8\n   164: u8 [a0 + 0x19] = a4\n   167: a4 = a3 >> 0x38\n   170: u8 [a0 + 0x17] = a4\n   173: a4 = a3 >> 0x30\n   176: u8 [a0 + 0x16] = a4\n   179: a4 = a3 >> 0x28\n   182: u8 [a0 + 0x15] = a4\n   185: a4 = a3 >> 0x20\n   188: u8 [a0 + 0x14] = a4\n   191: a4 = a3 >> 0x18\n   194: u8 [a0 + 0x13] = a4\n   197: a4 = a3 >> 0x10\n   200: u8 [a0 + 0x12] = a4\n   203: a3 = a3 >> 0x8\n   206: u8 [a0 + 0x11] = a3\n   209: a3 = a2 >> 0x38\n   212: u8 [a0 + 0xf] = a3\n   215: a3 = a2 >> 0x30\n   218: u8 [a0 + 0xe] = a3\n   221: a3 = a2 >> 0x28\n   224: u8 [a0 + 0xd] = a3\n   227: a3 = a2 >> 0x20\n   230: u8 [a0 + 0xc] = a3\n   233: a3 = a2 >> 0x18\n   236: u8 [a0 + 0xb] = a3\n   239: a3 = a2 >> 0x10\n   242: u8 [a0 + 0xa] = a3\n   245: a2 = a2 >> 0x8\n   248: u8 [a0 + 0x9] = a2\n   251: a2 = a1 >> 0x38\n   254: u8 [a0 + 0x7] = a2\n   257: a2 = a1 >> 0x30\n   260: u8 [a0 + 0x6] = a2\n   263: a2 = a1 >> 0x28\n   266: u8 [a0 + 0x5] = a2\n   269: a2 = a1 >> 0x20\n   272: u8 [a0 + 0x4] = a2\n   275: a2 = a1 >> 0x18\n   278: u8 [a0 + 0x3] = a2\n   281: a2 = a1 >> 0x10\n   284: u8 [a0 + 0x2] = a2\n   287: a1 = a1 >> 0x8\n   290: u8 [a0 + 0x1] = a1\n   293: ra = u64 [sp + 0x20]\n   296: s0 = u64 [sp + 0x18]\n   299: s1 = u64 [sp + 0x10]\n   302: sp = sp + 0x28\n   305: ret\n      : @10 (gas: 6)\n   307: sp = sp + 0xfffffffffffffff0\n   310: u64 [sp + 0x8] = ra\n   313: u64 [sp] = s0\n   315: s0 = a0 & 0x1\n   318: ecalli 3 // 'call_data_size'\n   320: fallthrough\n      : @11 (gas: 2)\n   321: u32 [0x20004] = a0\n   326: jump @13 if s0 == 0\n      : @12 (gas: 1)\n   329: ra = 4, jump @14\n      : @13 [@dyn 2] (gas: 1)\n   333: ra = 6, jump @33\n      : @14 [@dyn 3] (gas: 13)\n   338: sp = sp + 0xffffffffffffff20\n   342: u64 [sp + 0xd8] = ra\n   346: u64 [sp + 0xd0] = s0\n   350: u64 [sp + 0xc8] = s1\n   354: s0 = sp + 0xe0\n   358: sp = sp & 0xffffffffffffffe0\n   361: u64 [sp + 56] = 0\n   364: u64 [sp + 48] = 0\n   367: u64 [sp + 40] = 0\n   370: u64 [sp + 32] = 0\n   373: i32 a0 = sp + 0x20\n   376: ecalli 12 // 'value_transferred'\n   378: fallthrough\n      : @15 (gas: 8)\n   379: a0 = u64 [sp + 0x30]\n   382: a1 = u64 [sp + 0x38]\n   385: a2 = u64 [sp + 0x28]\n   388: a3 = u64 [sp + 0x20]\n   391: a1 = a1 | a2\n   394: a0 = a0 | a3\n   397: a0 = a0 | a1\n   400: jump @25 if a0 != 0\n      : @16 (gas: 14)\n   404: a0 = i32 [0x20004]\n   409: u64 [sp + 0x18] = a0\n   412: a0 = a0 << 0x20\n   415: a0 = a0 >> 0x20\n   418: a0 = a0 + 0x1f\n   421: a0 = a0 & 0xffffffffffffffe0\n   424: a1 = a0 + 0x80\n   428: u64 [sp + 0x10] = a1\n   431: s1 = a1 <u a0\n   434: u64 [sp + 0x8] = s1\n   437: s1 = 0 if s1 != 0\n   439: a0 = 0x40\n   442: a1 = 0x20\n   445: ra = 8, jump @0\n      : @17 [@dyn 4] (gas: 48)\n   450: a1 = reverse s1\n   452: a2 = u64 [sp + 0x8]\n   455: a2 = reverse a2\n   457: a3 = u64 [sp + 0x10]\n   460: a3 = reverse a3\n   462: u8 [a0 + 26] = 0\n   465: u8 [a0 + 25] = 0\n   468: u8 [a0 + 22] = 0\n   471: u8 [a0 + 21] = 0\n   474: u8 [a0 + 20] = 0\n   477: u8 [a0 + 19] = 0\n   480: u8 [a0 + 18] = 0\n   483: u8 [a0 + 17] = 0\n   486: u8 [a0 + 14] = 0\n   489: u8 [a0 + 13] = 0\n   492: u8 [a0 + 12] = 0\n   495: u8 [a0 + 11] = 0\n   498: u8 [a0 + 10] = 0\n   501: u8 [a0 + 9] = 0\n   504: u8 [a0 + 7] = 0\n   507: u8 [a0 + 6] = 0\n   510: u8 [a0 + 5] = 0\n   513: u8 [a0 + 4] = 0\n   516: u8 [a0 + 3] = 0\n   519: u8 [a0 + 2] = 0\n   522: u8 [a0 + 1] = 0\n   525: u8 [a0 + 0] = 0\n   527: u8 [a0 + 0x18] = a3\n   530: a4 = a3 >> 0x38\n   533: u8 [a0 + 0x1f] = a4\n   536: a4 = a3 >> 0x30\n   539: u8 [a0 + 0x1e] = a4\n   542: a4 = a3 >> 0x28\n   545: u8 [a0 + 0x1d] = a4\n   548: a4 = a3 >> 0x20\n   551: u8 [a0 + 0x1c] = a4\n   554: a3 = a3 >> 0x18\n   557: u8 [a0 + 0x1b] = a3\n   560: u8 [a0 + 0x10] = a2\n   563: a2 = a2 >> 0x38\n   566: u8 [a0 + 0x17] = a2\n   569: u8 [a0 + 0x8] = a1\n   572: a1 = a1 >> 0x38\n   575: u8 [a0 + 0xf] = a1\n   578: a0 = 0x80\n   582: s1 = u64 [sp + 0x18]\n   585: a1 = s1\n   587: ra = 10, jump @0\n      : @18 [@dyn 5] (gas: 5)\n   592: i32 a0 = a0 + 0\n   594: a1 = s1\n   596: a2 = 0\n   598: ecalli 1 // 'call_data_copy'\n   600: fallthrough\n      : @19 (gas: 1)\n   601: jump @25 if s1 <u 32\n      : @20 (gas: 3)\n   606: a0 = 0x80\n   610: a1 = 0x20\n   613: ra = 12, jump @0\n      : @21 [@dyn 6] (gas: 56)\n   618: a1 = u8 [a0 + 0x9]\n   621: a2 = u8 [a0 + 0x8]\n   624: a3 = u8 [a0 + 0xa]\n   627: a4 = u8 [a0 + 0xb]\n   630: a1 = a1 << 0x8\n   633: a1 = a1 | a2\n   636: a3 = a3 << 0x10\n   639: a4 = a4 << 0x18\n   642: a3 = a3 | a4\n   645: a1 = a1 | a3\n   648: a2 = u8 [a0 + 0xd]\n   651: a3 = u8 [a0 + 0xc]\n   654: a4 = u8 [a0 + 0xe]\n   657: a5 = u8 [a0 + 0xf]\n   660: a2 = a2 << 0x8\n   663: a2 = a2 | a3\n   666: a4 = a4 << 0x10\n   669: a5 = a5 << 0x18\n   672: a4 = a4 | a5\n   675: a2 = a2 | a4\n   678: a2 = a2 << 0x20\n   681: a1 = a1 | a2\n   684: a2 = u8 [a0 + 0x1]\n   687: a3 = u8 [a0]\n   689: a4 = u8 [a0 + 0x2]\n   692: a5 = u8 [a0 + 0x3]\n   695: a2 = a2 << 0x8\n   698: a2 = a2 | a3\n   701: a4 = a4 << 0x10\n   704: a5 = a5 << 0x18\n   707: a4 = a4 | a5\n   710: a2 = a2 | a4\n   713: a3 = u8 [a0 + 0x5]\n   716: a4 = u8 [a0 + 0x4]\n   719: a5 = u8 [a0 + 0x6]\n   722: s1 = u8 [a0 + 0x7]\n   725: a3 = a3 << 0x8\n   728: a3 = a3 | a4\n   731: a5 = a5 << 0x10\n   734: s1 = s1 << 0x18\n   737: a5 = a5 | s1\n   740: a3 = a3 | a5\n   743: a3 = a3 << 0x20\n   746: a2 = a2 | a3\n   749: a3 = reverse a2\n   751: a2 = reverse a1\n   753: a1 = 0x100000000\n   763: a1 = a1 ^ a2\n   766: a1 = a1 | a3\n   769: u64 [sp + 0x10] = a2\n   772: a2 = a2 >> 0x20\n   775: a2 = a2 <u 0x1\n   778: u64 [sp + 0x18] = a3\n   781: a2 = 0 if a3 != 0\n   783: a2 = 0 if a1 == 0\n   785: jump @25 if a2 == 0\n      : @22 (gas: 139)\n   789: a1 = u8 [a0 + 0x19]\n   792: a2 = u8 [a0 + 0x18]\n   795: a3 = u8 [a0 + 0x1a]\n   798: a4 = u8 [a0 + 0x1b]\n   801: a1 = a1 << 0x8\n   804: a1 = a1 | a2\n   807: a3 = a3 << 0x10\n   810: a4 = a4 << 0x18\n   813: a3 = a3 | a4\n   816: a1 = a1 | a3\n   819: a2 = u8 [a0 + 0x1d]\n   822: a3 = u8 [a0 + 0x1c]\n   825: a4 = u8 [a0 + 0x1e]\n   828: a5 = u8 [a0 + 0x1f]\n   831: a2 = a2 << 0x8\n   834: a2 = a2 | a3\n   837: a4 = a4 << 0x10\n   840: a5 = a5 << 0x18\n   843: a4 = a4 | a5\n   846: a2 = a2 | a4\n   849: a2 = a2 << 0x20\n   852: a1 = a1 | a2\n   855: a2 = u8 [a0 + 0x11]\n   858: a3 = u8 [a0 + 0x10]\n   861: a4 = u8 [a0 + 0x12]\n   864: a5 = u8 [a0 + 0x13]\n   867: a2 = a2 << 0x8\n   870: a2 = a2 | a3\n   873: a4 = a4 << 0x10\n   876: a5 = a5 << 0x18\n   879: a4 = a4 | a5\n   882: a2 = a2 | a4\n   885: a3 = u8 [a0 + 0x15]\n   888: a4 = u8 [a0 + 0x14]\n   891: a5 = u8 [a0 + 0x16]\n   894: a0 = u8 [a0 + 0x17]\n   897: a3 = a3 << 0x8\n   900: a3 = a3 | a4\n   903: a5 = a5 << 0x10\n   906: a0 = a0 << 0x18\n   909: a0 = a0 | a5\n   912: a0 = a0 | a3\n   915: a0 = a0 << 0x20\n   918: a0 = a0 | a2\n   921: a0 = reverse a0\n   923: u64 [sp + 0x8] = a0\n   926: s1 = reverse a1\n   928: u64 [sp + 152] = 0\n   932: u64 [sp + 144] = 0\n   936: u64 [sp + 136] = 0\n   940: u64 [sp + 128] = 0\n   944: u64 [sp + 184] = 0\n   948: u64 [sp + 176] = 0\n   952: u64 [sp + 168] = 0\n   956: u64 [sp + 160] = 0\n   960: u32 [sp + 96] = 0x20\n   964: i32 a1 = sp + 0x80\n   968: i32 a3 = sp + 0xa0\n   972: i32 a4 = sp + 0x60\n   975: a2 = 0xffffffffffffffff\n   978: a0 = 0\n   980: ecalli 5 // 'get_storage'\n   982: a0 = u32 [sp + 0xb4]\n   986: a1 = u64 [sp + 0xb8]\n   990: a0 = a0 << 0x20\n   993: a2 = u64 [sp + 0x10]\n   996: a0 = a0 | a2\n   999: a2 = u64 [sp + 0x18]\n  1002: a1 = a1 | a2\n  1005: u64 [sp + 152] = 0\n  1009: u64 [sp + 144] = 0\n  1013: u64 [sp + 136] = 0\n  1017: u64 [sp + 128] = 0\n  1021: u64 [sp + 0xb8] = a1\n  1025: u64 [sp + 0xb0] = a0\n  1029: a0 = u64 [sp + 0x8]\n  1032: u64 [sp + 0xa8] = a0\n  1036: u64 [sp + 0xa0] = s1\n  1040: i32 a1 = sp + 0x80\n  1044: i32 a3 = sp + 0xa0\n  1048: a2 = 0xffffffffffffffff\n  1051: a4 = 0x20\n  1054: a0 = 0\n  1056: ecalli 11 // 'set_storage'\n  1058: i32 a0 = sp + 0x40\n  1061: ecalli 4 // 'caller'\n  1063: a0 = u64 [sp + 0x48]\n  1066: a1 = i32 [sp + 0x50]\n  1069: a2 = u64 [sp + 0x40]\n  1072: a0 = reverse a0\n  1074: a3 = a0 << 0x20\n  1077: a1 = reverse a1\n  1079: a1 = a1 >> 0x20\n  1082: a1 = a1 | a3\n  1085: u64 [sp + 0x18] = a1\n  1088: a0 = a0 >> 0x20\n  1091: s1 = reverse a2\n  1093: a1 = s1 << 0x20\n  1096: a0 = a0 | a1\n  1099: u64 [sp + 0x10] = a0\n  1102: s1 = s1 >> 0x20\n  1105: u64 [sp + 152] = 0\n  1109: u64 [sp + 144] = 0\n  1113: u64 [sp + 136] = 0\n  1117: u64 [sp + 128] = 0x1\n  1122: u64 [sp + 184] = 0\n  1126: u64 [sp + 176] = 0\n  1130: u64 [sp + 168] = 0\n  1134: u64 [sp + 160] = 0\n  1138: u32 [sp + 96] = 0x20\n  1142: i32 a1 = sp + 0x80\n  1146: i32 a3 = sp + 0xa0\n  1150: i32 a4 = sp + 0x60\n  1153: a2 = 0xffffffffffffffff\n  1156: a0 = 0\n  1158: ecalli 5 // 'get_storage'\n  1160: a0 = u32 [sp + 0xb4]\n  1164: a0 = a0 << 0x20\n  1167: a1 = u64 [sp + 0xb8]\n  1171: a0 = a0 | s1\n  1174: u64 [sp + 152] = 0\n  1178: u64 [sp + 144] = 0\n  1182: u64 [sp + 136] = 0\n  1186: u64 [sp + 128] = 0x1\n  1191: u64 [sp + 0xb8] = a1\n  1195: u64 [sp + 0xb0] = a0\n  1199: a0 = u64 [sp + 0x10]\n  1202: u64 [sp + 0xa8] = a0\n  1206: a0 = u64 [sp + 0x18]\n  1209: u64 [sp + 0xa0] = a0\n  1213: i32 a1 = sp + 0x80\n  1217: i32 a3 = sp + 0xa0\n  1221: a2 = 0xffffffffffffffff\n  1224: a4 = 0x20\n  1227: a0 = 0\n  1229: ecalli 11 // 'set_storage'\n  1231: a0 = 0x40\n  1234: a1 = 0x20\n  1237: ra = 14, jump @0\n      : @23 [@dyn 7] (gas: 100)\n  1242: a1 = u8 [a0 + 0x11]\n  1245: a2 = u8 [a0 + 0x10]\n  1248: a3 = u8 [a0 + 0x12]\n  1251: a4 = u8 [a0 + 0x13]\n  1254: a1 = a1 << 0x8\n  1257: a1 = a1 | a2\n  1260: a3 = a3 << 0x10\n  1263: a4 = a4 << 0x18\n  1266: a3 = a3 | a4\n  1269: a1 = a1 | a3\n  1272: a2 = u8 [a0 + 0x15]\n  1275: a3 = u8 [a0 + 0x14]\n  1278: a4 = u8 [a0 + 0x16]\n  1281: a5 = u8 [a0 + 0x17]\n  1284: a2 = a2 << 0x8\n  1287: a2 = a2 | a3\n  1290: a4 = a4 << 0x10\n  1293: a5 = a5 << 0x18\n  1296: a4 = a4 | a5\n  1299: a2 = a2 | a4\n  1302: a2 = a2 << 0x20\n  1305: t0 = a2 | a1\n  1308: a2 = u8 [a0 + 0x1]\n  1311: a3 = u8 [a0]\n  1313: a4 = u8 [a0 + 0x2]\n  1316: a5 = u8 [a0 + 0x3]\n  1319: a2 = a2 << 0x8\n  1322: a2 = a2 | a3\n  1325: a4 = a4 << 0x10\n  1328: a5 = a5 << 0x18\n  1331: a4 = a4 | a5\n  1334: a2 = a2 | a4\n  1337: a3 = u8 [a0 + 0x5]\n  1340: a4 = u8 [a0 + 0x4]\n  1343: a5 = u8 [a0 + 0x6]\n  1346: s1 = u8 [a0 + 0x7]\n  1349: a3 = a3 << 0x8\n  1352: a3 = a3 | a4\n  1355: a5 = a5 << 0x10\n  1358: s1 = s1 << 0x18\n  1361: a5 = a5 | s1\n  1364: a3 = a3 | a5\n  1367: a3 = a3 << 0x20\n  1370: a2 = a2 | a3\n  1373: a3 = u8 [a0 + 0x19]\n  1376: a4 = u8 [a0 + 0x18]\n  1379: a5 = u8 [a0 + 0x1a]\n  1382: s1 = u8 [a0 + 0x1b]\n  1385: a3 = a3 << 0x8\n  1388: a3 = a3 | a4\n  1391: a5 = a5 << 0x10\n  1394: s1 = s1 << 0x18\n  1397: a5 = a5 | s1\n  1400: a3 = a3 | a5\n  1403: a4 = u8 [a0 + 0x1d]\n  1406: a5 = u8 [a0 + 0x1c]\n  1409: s1 = u8 [a0 + 0x1e]\n  1412: a1 = u8 [a0 + 0x1f]\n  1415: a4 = a4 << 0x8\n  1418: a4 = a4 | a5\n  1421: s1 = s1 << 0x10\n  1424: a1 = a1 << 0x18\n  1427: a1 = a1 | s1\n  1430: a1 = a1 | a4\n  1433: a1 = a1 << 0x20\n  1436: a3 = a3 | a1\n  1439: a1 = u8 [a0 + 0x9]\n  1442: a4 = u8 [a0 + 0x8]\n  1445: a5 = u8 [a0 + 0xa]\n  1448: s1 = u8 [a0 + 0xb]\n  1451: a1 = a1 << 0x8\n  1454: a1 = a1 | a4\n  1457: a5 = a5 << 0x10\n  1460: s1 = s1 << 0x18\n  1463: a5 = a5 | s1\n  1466: a1 = a1 | a5\n  1469: a4 = u8 [a0 + 0xd]\n  1472: a5 = u8 [a0 + 0xc]\n  1475: s1 = u8 [a0 + 0xe]\n  1478: a0 = u8 [a0 + 0xf]\n  1481: a4 = a4 << 0x8\n  1484: a4 = a4 | a5\n  1487: s1 = s1 << 0x10\n  1490: a0 = a0 << 0x18\n  1493: a0 = a0 | s1\n  1496: a0 = a0 | a4\n  1499: a0 = a0 << 0x20\n  1502: a0 = a0 | a1\n  1505: a0 = reverse a0\n  1507: s1 = reverse a3\n  1509: a1 = reverse a2\n  1511: a2 = reverse t0\n  1513: a1 = a1 | a2\n  1516: a2 = s1 | a0\n  1519: a2 = a2 | a1\n  1522: a2 = a2 >> 0x20\n  1525: a0 = a0 | a1\n  1528: a0 = a0 << 0x20\n  1531: a0 = a0 | a2\n  1534: jump @27 if a0 == 0\n      : @24 (gas: 1)\n  1537: trap\n      : @25 (gas: 3)\n  1538: a0 = 0\n  1540: a1 = 0\n  1542: ra = 16, jump @0\n      : @26 [@dyn 8] (gas: 5)\n  1547: i32 a1 = a0 + 0\n  1549: a0 = 0x1\n  1552: a2 = 0\n  1554: ecalli 9 // 'seal_return'\n  1556: fallthrough\n      : @27 (gas: 4)\n  1557: i32 s1 = s1 + 0\n  1559: a0 = s1\n  1561: a1 = 0\n  1563: ra = 18, jump @0\n      : @28 [@dyn 9] (gas: 5)\n  1568: i32 a0 = a0 + 0\n  1570: a1 = 0\n  1572: a2 = 0\n  1574: ecalli 1 // 'call_data_copy'\n  1576: fallthrough\n      : @29 (gas: 2)\n  1577: a1 = i32 [0x20008]\n  1582: jump @31 if a1 == 0\n      : @30 (gas: 4)\n  1585: a0 = 0x30010\n  1590: i32 a0 = a0 + 0\n  1592: ecalli 10 // 'set_immutable_data'\n  1594: fallthrough\n      : @31 (gas: 3)\n  1595: a0 = s1\n  1597: a1 = 0\n  1599: ra = 20, jump @0\n      : @32 [@dyn 10] (gas: 6)\n  1604: i32 a1 = a0 + 0\n  1606: a0 = 0\n  1608: a2 = 0\n  1610: ra = 0x16\n  1613: ecalli 9 // 'seal_return'\n  1615: fallthrough\n      : @33 [@dyn 11] (gas: 10)\n  1616: sp = sp + 0xfffffffffffff8a0\n  1620: u64 [sp + 0x758] = ra\n  1624: u64 [sp + 0x750] = s0\n  1628: u64 [sp + 0x748] = s1\n  1632: s0 = sp + 0x760\n  1636: sp = sp & 0xffffffffffffffe0\n  1639: s1 = sp\n  1641: a0 = 0x40\n  1644: a1 = 0x20\n  1647: ra = 24, jump @0\n      : @34 [@dyn 12] (gas: 36)\n  1652: u8 [a0 + 31] = 0x80\n  1657: u8 [a0 + 30] = 0\n  1660: u8 [a0 + 29] = 0\n  1663: u8 [a0 + 28] = 0\n  1666: u8 [a0 + 27] = 0\n  1669: u8 [a0 + 26] = 0\n  1672: u8 [a0 + 25] = 0\n  1675: u8 [a0 + 24] = 0\n  1678: u8 [a0 + 23] = 0\n  1681: u8 [a0 + 22] = 0\n  1684: u8 [a0 + 21] = 0\n  1687: u8 [a0 + 20] = 0\n  1690: u8 [a0 + 19] = 0\n  1693: u8 [a0 + 18] = 0\n  1696: u8 [a0 + 17] = 0\n  1699: u8 [a0 + 16] = 0\n  1702: u8 [a0 + 15] = 0\n  1705: u8 [a0 + 14] = 0\n  1708: u8 [a0 + 13] = 0\n  1711: u8 [a0 + 12] = 0\n  1714: u8 [a0 + 11] = 0\n  1717: u8 [a0 + 10] = 0\n  1720: u8 [a0 + 9] = 0\n  1723: u8 [a0 + 8] = 0\n  1726: u8 [a0 + 7] = 0\n  1729: u8 [a0 + 3] = 0\n  1732: a1 = 0x20004\n  1737: u8 [a0 + 2] = 0\n  1740: u8 [a0 + 1] = 0\n  1743: u8 [a0 + 0] = 0\n  1745: u64 [s1 + 0x1b8] = a1\n  1749: a1 = i32 [0x20004]\n  1754: u8 [a0 + 6] = 0\n  1757: u8 [a0 + 5] = 0\n  1760: u8 [a0 + 4] = 0\n  1763: jump @36 if a1 >=u 4\n      : @35 (gas: 1)\n  1767: jump @275\n      : @36 (gas: 4)\n  1770: i32 a0 = s1 + 0x3c0\n  1774: a1 = 0\n  1776: ecalli 2 // 'call_data_load'\n  1778: fallthrough\n      : @37 (gas: 2)\n  1779: a0 = i32 [s1 + 0x3dc]\n  1783: jump @74 if a0 >s 17480655\n      : @38 (gas: 1)\n  1791: jump @84 if a0 == 2295985165\n      : @39 (gas: 1)\n  1799: jump @41 if a0 == 2570216243\n      : @40 (gas: 1)\n  1806: jump @163\n      : @41 (gas: 11)\n  1809: a0 = sp + 0xffffffffffffffe0\n  1812: a0 = a0 & 0xffffffffffffffe0\n  1815: u64 [s1 + 0x1b0] = a0\n  1819: sp = a0\n  1821: u64 [a0 + 24] = 0\n  1824: u64 [a0 + 16] = 0\n  1827: u64 [a0 + 8] = 0\n  1830: u64 [a0 + 0] = 0\n  1832: i32 a0 = a0 + 0\n  1834: ecalli 12 // 'value_transferred'\n  1836: fallthrough\n      : @42 (gas: 9)\n  1837: a3 = u64 [s1 + 0x1b0]\n  1841: a0 = u64 [a3 + 0x10]\n  1844: a1 = u64 [a3 + 0x18]\n  1847: a2 = u64 [a3 + 0x8]\n  1850: a3 = u64 [a3]\n  1852: a1 = a1 | a2\n  1855: a0 = a0 | a3\n  1858: a0 = a0 | a1\n  1861: jump @44 if a0 == 0\n      : @43 (gas: 1)\n  1864: jump @275\n      : @44 (gas: 3)\n  1867: a0 = u64 [s1 + 0x1b8]\n  1871: a0 = i32 [a0]\n  1873: jump @46 if a0 >u 67\n      : @45 (gas: 1)\n  1877: jump @275\n      : @46 (gas: 4)\n  1880: i32 a0 = s1 + 0x720\n  1884: a1 = 0x4\n  1887: ecalli 2 // 'call_data_load'\n  1889: fallthrough\n      : @47 (gas: 12)\n  1890: a2 = u64 [s1 + 0x730]\n  1894: a3 = u64 [s1 + 0x738]\n  1898: a1 = 0x100000000\n  1908: a1 = a1 ^ a2\n  1911: a1 = a1 | a3\n  1914: u64 [s1 + 0x1a0] = a2\n  1918: a2 = a2 >> 0x20\n  1921: a2 = a2 <u 0x1\n  1924: u64 [s1 + 0x198] = a3\n  1928: a2 = 0 if a3 != 0\n  1930: a2 = 0 if a1 == 0\n  1932: jump @49 if a2 != 0\n      : @48 (gas: 1)\n  1935: jump @275\n      : @49 (gas: 28)\n  1938: a1 = u64 [s1 + 0x728]\n  1942: u64 [s1 + 0x188] = a1\n  1946: a1 = u64 [s1 + 0x720]\n  1950: u64 [s1 + 0x190] = a1\n  1954: u64 [s1 + 1816] = 0\n  1958: u64 [s1 + 1808] = 0\n  1962: u64 [s1 + 1800] = 0\n  1966: u64 [s1 + 1792] = 0x1\n  1971: u64 [s1 + 1848] = 0\n  1975: u64 [s1 + 1840] = 0\n  1979: u64 [s1 + 1832] = 0\n  1983: u64 [s1 + 1824] = 0\n  1987: u32 [s1 + 1856] = 0x20\n  1992: i32 a1 = s1 + 0x700\n  1996: i32 a3 = s1 + 0x720\n  2000: i32 a4 = s1 + 0x740\n  2004: a2 = 0xffffffffffffffff\n  2007: a0 = 0\n  2009: ecalli 5 // 'get_storage'\n  2011: a0 = u64 [s1 + 0x728]\n  2015: u64 [s1 + 0x1b8] = a0\n  2019: a0 = u64 [s1 + 0x720]\n  2023: u64 [s1 + 0x1b0] = a0\n  2027: a0 = u32 [s1 + 0x730]\n  2031: u64 [s1 + 0x1a8] = a0\n  2035: i32 a0 = s1 + 0x620\n  2039: ecalli 4 // 'caller'\n  2041: fallthrough\n      : @50 (gas: 22)\n  2042: a0 = u64 [s1 + 0x628]\n  2046: a1 = u64 [s1 + 0x620]\n  2050: a2 = i32 [s1 + 0x630]\n  2054: a0 = reverse a0\n  2056: a3 = a0 >> 0x20\n  2059: a1 = reverse a1\n  2061: a4 = a1 << 0x20\n  2064: a3 = a3 | a4\n  2067: a0 = a0 << 0x20\n  2070: a2 = reverse a2\n  2072: a2 = a2 >> 0x20\n  2075: a0 = a0 | a2\n  2078: a1 = a1 >> 0x20\n  2081: a2 = u64 [s1 + 0x1a8]\n  2085: a1 = a1 ^ a2\n  2088: a2 = u64 [s1 + 0x1b0]\n  2092: a0 = a0 ^ a2\n  2095: a0 = a0 | a1\n  2098: a1 = u64 [s1 + 0x1b8]\n  2102: a1 = a1 ^ a3\n  2105: a0 = a0 | a1\n  2108: jump @52 if a0 == 0\n      : @51 (gas: 1)\n  2111: jump @208\n      : @52 (gas: 24)\n  2114: u64 [s1 + 1816] = 0\n  2118: u64 [s1 + 1808] = 0\n  2122: u64 [s1 + 1800] = 0\n  2126: u64 [s1 + 1792] = 0\n  2130: u64 [s1 + 1848] = 0\n  2134: u64 [s1 + 1840] = 0\n  2138: u64 [s1 + 1832] = 0\n  2142: u64 [s1 + 1824] = 0\n  2146: u32 [s1 + 1856] = 0x20\n  2151: i32 a1 = s1 + 0x700\n  2155: i32 a3 = s1 + 0x720\n  2159: i32 a4 = s1 + 0x740\n  2163: a2 = 0xffffffffffffffff\n  2166: a0 = 0\n  2168: ecalli 5 // 'get_storage'\n  2170: a0 = u64 [s1 + 0x730]\n  2174: u64 [s1 + 0x178] = a0\n  2178: a0 = u64 [s1 + 0x728]\n  2182: u64 [s1 + 0x170] = a0\n  2186: a0 = u64 [s1 + 0x720]\n  2190: u64 [s1 + 0x180] = a0\n  2194: a0 = 0x40\n  2197: a1 = 0x20\n  2200: ra = 26, jump @0\n      : @53 [@dyn 13] (gas: 100)\n  2205: a1 = u8 [a0 + 0x11]\n  2208: a2 = u8 [a0 + 0x10]\n  2211: a3 = u8 [a0 + 0x12]\n  2214: a4 = u8 [a0 + 0x13]\n  2217: a1 = a1 << 0x8\n  2220: a1 = a1 | a2\n  2223: a3 = a3 << 0x10\n  2226: a4 = a4 << 0x18\n  2229: a3 = a3 | a4\n  2232: a1 = a1 | a3\n  2235: a2 = u8 [a0 + 0x15]\n  2238: a3 = u8 [a0 + 0x14]\n  2241: a4 = u8 [a0 + 0x16]\n  2244: a5 = u8 [a0 + 0x17]\n  2247: a2 = a2 << 0x8\n  2250: a2 = a2 | a3\n  2253: a4 = a4 << 0x10\n  2256: a5 = a5 << 0x18\n  2259: a4 = a4 | a5\n  2262: a2 = a2 | a4\n  2265: a2 = a2 << 0x20\n  2268: t0 = a2 | a1\n  2271: a2 = u8 [a0 + 0x1]\n  2274: a3 = u8 [a0]\n  2276: a4 = u8 [a0 + 0x2]\n  2279: a5 = u8 [a0 + 0x3]\n  2282: a2 = a2 << 0x8\n  2285: a2 = a2 | a3\n  2288: a4 = a4 << 0x10\n  2291: a5 = a5 << 0x18\n  2294: a4 = a4 | a5\n  2297: a2 = a2 | a4\n  2300: a3 = u8 [a0 + 0x5]\n  2303: a4 = u8 [a0 + 0x4]\n  2306: a5 = u8 [a0 + 0x6]\n  2309: a1 = u8 [a0 + 0x7]\n  2312: a3 = a3 << 0x8\n  2315: a3 = a3 | a4\n  2318: a5 = a5 << 0x10\n  2321: a1 = a1 << 0x18\n  2324: a1 = a1 | a5\n  2327: a1 = a1 | a3\n  2330: a1 = a1 << 0x20\n  2333: t1 = a1 | a2\n  2336: a1 = u8 [a0 + 0x19]\n  2339: a3 = u8 [a0 + 0x18]\n  2342: a4 = u8 [a0 + 0x1a]\n  2345: a5 = u8 [a0 + 0x1b]\n  2348: a1 = a1 << 0x8\n  2351: a1 = a1 | a3\n  2354: a4 = a4 << 0x10\n  2357: a5 = a5 << 0x18\n  2360: a4 = a4 | a5\n  2363: a1 = a1 | a4\n  2366: a3 = u8 [a0 + 0x1d]\n  2369: a4 = u8 [a0 + 0x1c]\n  2372: a5 = u8 [a0 + 0x1e]\n  2375: a2 = u8 [a0 + 0x1f]\n  2378: a3 = a3 << 0x8\n  2381: a3 = a3 | a4\n  2384: a5 = a5 << 0x10\n  2387: a2 = a2 << 0x18\n  2390: a2 = a2 | a5\n  2393: a2 = a2 | a3\n  2396: a2 = a2 << 0x20\n  2399: a3 = a2 | a1\n  2402: a1 = u8 [a0 + 0x9]\n  2405: a2 = u8 [a0 + 0x8]\n  2408: a4 = u8 [a0 + 0xa]\n  2411: a5 = u8 [a0 + 0xb]\n  2414: a1 = a1 << 0x8\n  2417: a1 = a1 | a2\n  2420: a4 = a4 << 0x10\n  2423: a5 = a5 << 0x18\n  2426: a4 = a4 | a5\n  2429: a1 = a1 | a4\n  2432: a2 = u8 [a0 + 0xd]\n  2435: a4 = u8 [a0 + 0xc]\n  2438: a5 = u8 [a0 + 0xe]\n  2441: a0 = u8 [a0 + 0xf]\n  2444: a2 = a2 << 0x8\n  2447: a2 = a2 | a4\n  2450: a5 = a5 << 0x10\n  2453: a0 = a0 << 0x18\n  2456: a0 = a0 | a5\n  2459: a0 = a0 | a2\n  2462: a0 = a0 << 0x20\n  2465: a0 = a0 | a1\n  2468: a4 = reverse a0\n  2470: a3 = reverse a3\n  2472: a2 = reverse t1\n  2474: a5 = reverse t0\n  2476: a0 = a5 | a2\n  2479: a1 = a3 | a4\n  2482: a1 = a1 | a0\n  2485: a1 = a1 >> 0x20\n  2488: a0 = a0 | a4\n  2491: a0 = a0 << 0x20\n  2494: a0 = a0 | a1\n  2497: jump @55 if a0 == 0\n      : @54 (gas: 1)\n  2500: jump @174\n      : @55 (gas: 8)\n  2503: i32 a0 = a3 + 0\n  2505: a1 = 0x20\n  2508: u64 [s1 + 0x1a8] = a0\n  2512: u64 [s1 + 0x168] = a2\n  2516: u64 [s1 + 0x160] = a4\n  2520: u64 [s1 + 0x1b8] = a3\n  2524: u64 [s1 + 0x1b0] = a5\n  2528: ra = 28, jump @0\n      : @56 [@dyn 14] (gas: 43)\n  2533: u8 [a0 + 31] = 0\n  2536: u8 [a0 + 30] = 0\n  2539: u8 [a0 + 29] = 0\n  2542: u8 [a0 + 28] = 0\n  2545: u8 [a0 + 27] = 0\n  2548: u8 [a0 + 26] = 0\n  2551: u8 [a0 + 25] = 0\n  2554: u8 [a0 + 24] = 0\n  2557: u8 [a0 + 23] = 0\n  2560: u8 [a0 + 22] = 0\n  2563: u8 [a0 + 21] = 0\n  2566: u8 [a0 + 20] = 0\n  2569: u8 [a0 + 19] = 0\n  2572: u8 [a0 + 18] = 0\n  2575: u8 [a0 + 17] = 0\n  2578: u8 [a0 + 16] = 0\n  2581: u8 [a0 + 15] = 0\n  2584: u8 [a0 + 14] = 0\n  2587: u8 [a0 + 13] = 0\n  2590: u8 [a0 + 12] = 0\n  2593: u8 [a0 + 11] = 0\n  2596: u8 [a0 + 10] = 0\n  2599: u8 [a0 + 9] = 0\n  2602: u8 [a0 + 8] = 0\n  2605: u8 [a0 + 7] = 0\n  2608: u8 [a0 + 6] = 0\n  2611: u8 [a0 + 5] = 0\n  2614: u8 [a0 + 3] = 0x57\n  2618: u8 [a0 + 2] = 0xc8\n  2623: u8 [a0 + 1] = 0xe2\n  2628: u8 [a0 + 0] = 0x64\n  2631: a1 = u64 [s1 + 0x168]\n  2635: a2 = u64 [s1 + 0x160]\n  2639: a3 = a2 | a1\n  2642: a4 = 0x100000000\n  2652: a1 = 0xfffffffc\n  2662: a2 = u64 [s1 + 0x1b8]\n  2666: a1 = a2 <u a1\n  2669: a2 = u64 [s1 + 0x1b0]\n  2673: a1 = 0 if a2 != 0\n  2675: a1 = 0 if a3 != 0\n  2677: u8 [a0 + 4] = 0\n  2680: jump @58 if a1 != 0\n      : @57 (gas: 1)\n  2683: jump @174\n      : @58 (gas: 6)\n  2686: a0 = u64 [s1 + 0x1a8]\n  2690: i32 a0 = a0 + 0x4\n  2693: a1 = 0x20\n  2696: u64 [s1 + 0x158] = a3\n  2700: u64 [s1 + 0x150] = a4\n  2704: ra = 30, jump @0\n      : @59 [@dyn 15] (gas: 72)\n  2709: a1 = u64 [s1 + 0x198]\n  2713: a1 = reverse a1\n  2715: a2 = u64 [s1 + 0x1a0]\n  2719: a2 = reverse a2\n  2721: a3 = u64 [s1 + 0x188]\n  2725: a3 = reverse a3\n  2727: a4 = u64 [s1 + 0x190]\n  2731: a4 = reverse a4\n  2733: a5 = a4 >> 0x38\n  2736: u8 [a0 + 0x1f] = a5\n  2739: a5 = a4 >> 0x30\n  2742: u8 [a0 + 0x1e] = a5\n  2745: a5 = a4 >> 0x28\n  2748: u8 [a0 + 0x1d] = a5\n  2751: a5 = a4 >> 0x20\n  2754: u8 [a0 + 0x1c] = a5\n  2757: a5 = a4 >> 0x18\n  2760: u8 [a0 + 0x1b] = a5\n  2763: a5 = a4 >> 0x10\n  2766: u8 [a0 + 0x1a] = a5\n  2769: a5 = a4 >> 0x8\n  2772: u8 [a0 + 0x19] = a5\n  2775: u8 [a0 + 0x18] = a4\n  2778: u8 [a0 + 0x10] = a3\n  2781: a4 = a3 >> 0x38\n  2784: u8 [a0 + 0x17] = a4\n  2787: a4 = a3 >> 0x30\n  2790: u8 [a0 + 0x16] = a4\n  2793: a4 = a3 >> 0x28\n  2796: u8 [a0 + 0x15] = a4\n  2799: a4 = a3 >> 0x20\n  2802: u8 [a0 + 0x14] = a4\n  2805: a4 = a3 >> 0x18\n  2808: u8 [a0 + 0x13] = a4\n  2811: a4 = a3 >> 0x10\n  2814: u8 [a0 + 0x12] = a4\n  2817: a3 = a3 >> 0x8\n  2820: u8 [a0 + 0x11] = a3\n  2823: u8 [a0 + 0x8] = a2\n  2826: a3 = a2 >> 0x38\n  2829: u8 [a0 + 0xf] = a3\n  2832: a3 = a2 >> 0x30\n  2835: u8 [a0 + 0xe] = a3\n  2838: a3 = a2 >> 0x28\n  2841: u8 [a0 + 0xd] = a3\n  2844: a3 = a2 >> 0x20\n  2847: u8 [a0 + 0xc] = a3\n  2850: a3 = a2 >> 0x18\n  2853: u8 [a0 + 0xb] = a3\n  2856: a3 = a2 >> 0x10\n  2859: u8 [a0 + 0xa] = a3\n  2862: a2 = a2 >> 0x8\n  2865: u8 [a0 + 0x9] = a2\n  2868: u8 [a0] = a1\n  2870: a2 = a1 >> 0x38\n  2873: u8 [a0 + 0x7] = a2\n  2876: a2 = a1 >> 0x30\n  2879: u8 [a0 + 0x6] = a2\n  2882: a2 = a1 >> 0x28\n  2885: u8 [a0 + 0x5] = a2\n  2888: a2 = a1 >> 0x20\n  2891: u8 [a0 + 0x4] = a2\n  2894: a2 = a1 >> 0x18\n  2897: u8 [a0 + 0x3] = a2\n  2900: a2 = a1 >> 0x10\n  2903: u8 [a0 + 0x2] = a2\n  2906: a1 = a1 >> 0x8\n  2909: u8 [a0 + 0x1] = a1\n  2912: i32 a0 = s1 + 0x640\n  2916: a1 = 0x24\n  2919: ecalli 2 // 'call_data_load'\n  2921: fallthrough\n      : @60 (gas: 9)\n  2922: a0 = u64 [s1 + 0x150]\n  2926: a0 = a0 + 0xffffffffffffffdc\n  2929: a1 = u64 [s1 + 0x1b8]\n  2933: a0 = a1 <u a0\n  2936: a1 = u64 [s1 + 0x1b0]\n  2940: a0 = 0 if a1 != 0\n  2942: a1 = u64 [s1 + 0x158]\n  2946: a0 = 0 if a1 != 0\n  2948: jump @62 if a0 != 0\n      : @61 (gas: 1)\n  2951: jump @174\n      : @62 (gas: 12)\n  2954: a0 = u64 [s1 + 0x640]\n  2958: u64 [s1 + 0x1a0] = a0\n  2962: a0 = u64 [s1 + 0x648]\n  2966: u64 [s1 + 0x198] = a0\n  2970: a0 = u64 [s1 + 0x650]\n  2974: u64 [s1 + 0x190] = a0\n  2978: a0 = u64 [s1 + 0x658]\n  2982: u64 [s1 + 0x188] = a0\n  2986: a0 = u64 [s1 + 0x1a8]\n  2990: i32 a0 = a0 + 0x24\n  2993: a1 = 0x20\n  2996: ra = 32, jump @0\n      : @63 [@dyn 16] (gas: 92)\n  3001: a1 = u64 [s1 + 0x188]\n  3005: a1 = reverse a1\n  3007: a2 = u64 [s1 + 0x190]\n  3011: a2 = reverse a2\n  3013: a3 = u64 [s1 + 0x198]\n  3017: a3 = reverse a3\n  3019: a4 = u64 [s1 + 0x1a0]\n  3023: a4 = reverse a4\n  3025: a5 = a4 >> 0x38\n  3028: u8 [a0 + 0x1f] = a5\n  3031: a5 = a4 >> 0x30\n  3034: u8 [a0 + 0x1e] = a5\n  3037: a5 = a4 >> 0x28\n  3040: u8 [a0 + 0x1d] = a5\n  3043: a5 = a4 >> 0x20\n  3046: u8 [a0 + 0x1c] = a5\n  3049: a5 = a4 >> 0x18\n  3052: u8 [a0 + 0x1b] = a5\n  3055: a5 = a4 >> 0x10\n  3058: u8 [a0 + 0x1a] = a5\n  3061: a5 = a4 >> 0x8\n  3064: u8 [a0 + 0x19] = a5\n  3067: u8 [a0 + 0x18] = a4\n  3070: a4 = a3 >> 0x38\n  3073: u8 [a0 + 0x17] = a4\n  3076: a4 = a3 >> 0x30\n  3079: u8 [a0 + 0x16] = a4\n  3082: a4 = a3 >> 0x28\n  3085: u8 [a0 + 0x15] = a4\n  3088: a4 = a3 >> 0x20\n  3091: u8 [a0 + 0x14] = a4\n  3094: a4 = a3 >> 0x18\n  3097: u8 [a0 + 0x13] = a4\n  3100: a4 = a3 >> 0x10\n  3103: u8 [a0 + 0x12] = a4\n  3106: a4 = a3 >> 0x8\n  3109: u8 [a0 + 0x11] = a4\n  3112: u8 [a0 + 0x10] = a3\n  3115: a3 = a2 >> 0x38\n  3118: u8 [a0 + 0xf] = a3\n  3121: a3 = a2 >> 0x30\n  3124: u8 [a0 + 0xe] = a3\n  3127: a3 = a2 >> 0x28\n  3130: u8 [a0 + 0xd] = a3\n  3133: a3 = a2 >> 0x20\n  3136: u8 [a0 + 0xc] = a3\n  3139: a3 = a2 >> 0x18\n  3142: u8 [a0 + 0xb] = a3\n  3145: a3 = a2 >> 0x10\n  3148: u8 [a0 + 0xa] = a3\n  3151: a3 = a2 >> 0x8\n  3154: u8 [a0 + 0x9] = a3\n  3157: u8 [a0 + 0x8] = a2\n  3160: a2 = a1 >> 0x38\n  3163: u8 [a0 + 0x7] = a2\n  3166: a2 = a1 >> 0x30\n  3169: u8 [a0 + 0x6] = a2\n  3172: a2 = a1 >> 0x28\n  3175: u8 [a0 + 0x5] = a2\n  3178: a2 = a1 >> 0x20\n  3181: u8 [a0 + 0x4] = a2\n  3184: a2 = a1 >> 0x18\n  3187: u8 [a0 + 0x3] = a2\n  3190: a2 = a1 >> 0x10\n  3193: u8 [a0 + 0x2] = a2\n  3196: a2 = a1 >> 0x8\n  3199: u8 [a0 + 0x1] = a2\n  3202: u8 [a0] = a1\n  3204: ecalli 6 // 'ref_time_left'\n  3206: a0 = u64 [s1 + 0x170]\n  3210: a0 = reverse a0\n  3212: a1 = a0 << 0x20\n  3215: a2 = u64 [s1 + 0x178]\n  3219: a2 = reverse a2\n  3221: a2 = a2 >> 0x20\n  3224: a1 = a1 | a2\n  3227: a2 = u64 [s1 + 0x180]\n  3231: a2 = reverse a2\n  3233: a3 = a2 << 0x20\n  3236: a0 = a0 >> 0x20\n  3239: a0 = a0 | a3\n  3242: a2 = a2 >> 0x20\n  3245: u64 [s1 + 0x668] = a0\n  3249: u64 [s1 + 0x660] = a1\n  3253: u32 [s1 + 0x670] = a2\n  3257: u64 [s1 + 1688] = 0\n  3261: u64 [s1 + 1680] = 0\n  3265: u64 [s1 + 1672] = 0\n  3269: u64 [s1 + 1664] = 0\n  3273: a1 = 0x44\n  3276: a0 = u64 [s1 + 0x1a8]\n  3280: ra = 34, jump @0\n      : @64 [@dyn 17] (gas: 4)\n  3285: u64 [s1 + 0x1a0] = a0\n  3289: a1 = 0x20\n  3292: a0 = u64 [s1 + 0x1a8]\n  3296: ra = 36, jump @0\n      : @65 [@dyn 18] (gas: 31)\n  3301: u32 [s1 + 1696] = 0x20\n  3306: u64 [s1 + 1752] = 0xffffffffffffffff\n  3311: u64 [s1 + 1744] = 0xffffffffffffffff\n  3316: u64 [s1 + 1736] = 0xffffffffffffffff\n  3321: u64 [s1 + 1728] = 0xffffffffffffffff\n  3326: a1 = s1 + 0x660\n  3330: a1 = a1 << 0x20\n  3333: a1 = a1 >> 0x20\n  3336: a2 = 0x800000000\n  3346: t0 = a1 | a2\n  3349: a1 = s1 + 0x680\n  3353: a1 = a1 << 0x20\n  3356: a1 = a1 >> 0x20\n  3359: a2 = s1 + 0x6c0\n  3363: a2 = a2 << 0x20\n  3366: a3 = a2 | a1\n  3369: a1 = u64 [s1 + 0x1a0]\n  3373: a1 = a1 << 0x20\n  3376: a1 = a1 >> 0x20\n  3379: a2 = 0x4400000000\n  3389: a4 = a1 | a2\n  3392: a0 = a0 << 0x20\n  3395: a0 = a0 >> 0x20\n  3398: a1 = s1 + 0x6a0\n  3402: a1 = a1 << 0x20\n  3405: a5 = a1 | a0\n  3408: a1 = 0xffffffffffffffff\n  3411: a2 = 0xffffffffffffffff\n  3414: a0 = t0\n  3416: ecalli 0 // 'call'\n  3417: fallthrough\n      : @66 (gas: 1)\n  3418: jump @68 if a0 == 0\n      : @67 (gas: 1)\n  3421: jump @253\n      : @68 (gas: 2)\n  3424: ecalli 8 // 'return_data_size'\n  3426: fallthrough\n      : @69 (gas: 1)\n  3427: jump @71 if a0 <u 32\n      : @70 (gas: 1)\n  3431: jump @261\n      : @71 (gas: 17)\n  3434: ecalli 8 // 'return_data_size'\n  3436: u64 [s1 + 0x1a0] = a0\n  3440: u64 [s1 + 856] = 0\n  3444: u64 [s1 + 848] = 0\n  3448: u64 [s1 + 840] = 0\n  3452: u64 [s1 + 0x340] = a0\n  3456: a0 = u64 [s1 + 0x160]\n  3460: u64 [s1 + 0x370] = a0\n  3464: a0 = u64 [s1 + 0x1b0]\n  3468: u64 [s1 + 0x368] = a0\n  3472: a0 = u64 [s1 + 0x1b8]\n  3476: u64 [s1 + 0x360] = a0\n  3480: a0 = s1 + 0x360\n  3484: a1 = s1 + 0x340\n  3488: a2 = u64 [s1 + 0x168]\n  3492: u64 [s1 + 0x378] = a2\n  3496: ra = 38, jump @287\n      : @72 [@dyn 19] (gas: 2)\n  3501: a1 = u64 [s1 + 0x1a0]\n  3505: jump @275 if a1 <=u 31\n      : @73 (gas: 1)\n  3510: jump @262\n      : @74 (gas: 1)\n  3513: jump @76 if a0 != 17480656\n      : @75 (gas: 1)\n  3520: jump @146\n      : @76 (gas: 1)\n  3523: jump @78 if a0 == 953538513\n      : @77 (gas: 1)\n  3530: jump @175\n      : @78 (gas: 11)\n  3533: a0 = sp + 0xffffffffffffffe0\n  3536: a0 = a0 & 0xffffffffffffffe0\n  3539: u64 [s1 + 0x1b0] = a0\n  3543: sp = a0\n  3545: u64 [a0 + 24] = 0\n  3548: u64 [a0 + 16] = 0\n  3551: u64 [a0 + 8] = 0\n  3554: u64 [a0 + 0] = 0\n  3556: i32 a0 = a0 + 0\n  3558: ecalli 12 // 'value_transferred'\n  3560: fallthrough\n      : @79 (gas: 9)\n  3561: a3 = u64 [s1 + 0x1b0]\n  3565: a0 = u64 [a3 + 0x10]\n  3568: a1 = u64 [a3 + 0x18]\n  3571: a2 = u64 [a3 + 0x8]\n  3574: a3 = u64 [a3]\n  3576: a1 = a1 | a2\n  3579: a0 = a0 | a3\n  3582: a0 = a0 | a1\n  3585: jump @81 if a0 == 0\n      : @80 (gas: 1)\n  3588: jump @275\n      : @81 (gas: 3)\n  3591: a0 = u64 [s1 + 0x1b8]\n  3595: a0 = i32 [a0]\n  3597: jump @83 if a0 >u 3\n      : @82 (gas: 1)\n  3601: jump @275\n      : @83 (gas: 5)\n  3604: u64 [s1 + 1816] = 0\n  3608: u64 [s1 + 1808] = 0\n  3612: u64 [s1 + 1800] = 0\n  3616: u64 [s1 + 1792] = 0\n  3620: jump @171\n      : @84 (gas: 11)\n  3623: a0 = sp + 0xffffffffffffffe0\n  3626: a0 = a0 & 0xffffffffffffffe0\n  3629: u64 [s1 + 0x1b0] = a0\n  3633: sp = a0\n  3635: u64 [a0 + 24] = 0\n  3638: u64 [a0 + 16] = 0\n  3641: u64 [a0 + 8] = 0\n  3644: u64 [a0 + 0] = 0\n  3646: i32 a0 = a0 + 0\n  3648: ecalli 12 // 'value_transferred'\n  3650: fallthrough\n      : @85 (gas: 9)\n  3651: a3 = u64 [s1 + 0x1b0]\n  3655: a0 = u64 [a3 + 0x10]\n  3658: a1 = u64 [a3 + 0x18]\n  3661: a2 = u64 [a3 + 0x8]\n  3664: a3 = u64 [a3]\n  3666: a1 = a1 | a2\n  3669: a0 = a0 | a3\n  3672: a0 = a0 | a1\n  3675: jump @87 if a0 == 0\n      : @86 (gas: 1)\n  3678: jump @275\n      : @87 (gas: 3)\n  3681: a0 = u64 [s1 + 0x1b8]\n  3685: a0 = i32 [a0]\n  3687: jump @89 if a0 >u 35\n      : @88 (gas: 1)\n  3691: jump @275\n      : @89 (gas: 4)\n  3694: i32 a0 = s1 + 0x720\n  3698: a1 = 0x4\n  3701: ecalli 2 // 'call_data_load'\n  3703: fallthrough\n      : @90 (gas: 12)\n  3704: a1 = u64 [s1 + 0x730]\n  3708: a2 = u64 [s1 + 0x738]\n  3712: a0 = 0x100000000\n  3722: a0 = a0 ^ a1\n  3725: a0 = a0 | a2\n  3728: u64 [s1 + 0x198] = a1\n  3732: a1 = a1 >> 0x20\n  3735: a1 = a1 <u 0x1\n  3738: u64 [s1 + 0x190] = a2\n  3742: a1 = 0 if a2 != 0\n  3744: a1 = 0 if a0 == 0\n  3746: jump @92 if a1 != 0\n      : @91 (gas: 1)\n  3749: jump @280\n      : @92 (gas: 28)\n  3752: a0 = u64 [s1 + 0x728]\n  3756: u64 [s1 + 0x180] = a0\n  3760: a0 = u64 [s1 + 0x720]\n  3764: u64 [s1 + 0x188] = a0\n  3768: u64 [s1 + 1816] = 0\n  3772: u64 [s1 + 1808] = 0\n  3776: u64 [s1 + 1800] = 0\n  3780: u64 [s1 + 1792] = 0\n  3784: u64 [s1 + 1848] = 0\n  3788: u64 [s1 + 1840] = 0\n  3792: u64 [s1 + 1832] = 0\n  3796: u64 [s1 + 1824] = 0\n  3800: u32 [s1 + 1856] = 0x20\n  3805: i32 a1 = s1 + 0x700\n  3809: i32 a3 = s1 + 0x720\n  3813: i32 a4 = s1 + 0x740\n  3817: a2 = 0xffffffffffffffff\n  3820: a0 = 0\n  3822: ecalli 5 // 'get_storage'\n  3824: a0 = u64 [s1 + 0x730]\n  3828: u64 [s1 + 0x1a8] = a0\n  3832: a0 = u64 [s1 + 0x728]\n  3836: u64 [s1 + 0x1a0] = a0\n  3840: a0 = u64 [s1 + 0x720]\n  3844: u64 [s1 + 0x1b0] = a0\n  3848: a0 = 0x40\n  3851: a1 = 0x20\n  3854: ra = 40, jump @0\n      : @93 [@dyn 20] (gas: 100)\n  3859: a1 = u8 [a0 + 0x11]\n  3862: a2 = u8 [a0 + 0x10]\n  3865: a3 = u8 [a0 + 0x12]\n  3868: a4 = u8 [a0 + 0x13]\n  3871: a1 = a1 << 0x8\n  3874: a1 = a1 | a2\n  3877: a3 = a3 << 0x10\n  3880: a4 = a4 << 0x18\n  3883: a3 = a3 | a4\n  3886: a1 = a1 | a3\n  3889: a2 = u8 [a0 + 0x15]\n  3892: a3 = u8 [a0 + 0x14]\n  3895: a4 = u8 [a0 + 0x16]\n  3898: a5 = u8 [a0 + 0x17]\n  3901: a2 = a2 << 0x8\n  3904: a2 = a2 | a3\n  3907: a4 = a4 << 0x10\n  3910: a5 = a5 << 0x18\n  3913: a4 = a4 | a5\n  3916: a2 = a2 | a4\n  3919: a2 = a2 << 0x20\n  3922: t0 = a2 | a1\n  3925: a2 = u8 [a0 + 0x1]\n  3928: a3 = u8 [a0]\n  3930: a4 = u8 [a0 + 0x2]\n  3933: a5 = u8 [a0 + 0x3]\n  3936: a2 = a2 << 0x8\n  3939: a2 = a2 | a3\n  3942: a4 = a4 << 0x10\n  3945: a5 = a5 << 0x18\n  3948: a4 = a4 | a5\n  3951: a2 = a2 | a4\n  3954: a3 = u8 [a0 + 0x5]\n  3957: a4 = u8 [a0 + 0x4]\n  3960: a5 = u8 [a0 + 0x6]\n  3963: a1 = u8 [a0 + 0x7]\n  3966: a3 = a3 << 0x8\n  3969: a3 = a3 | a4\n  3972: a5 = a5 << 0x10\n  3975: a1 = a1 << 0x18\n  3978: a1 = a1 | a5\n  3981: a1 = a1 | a3\n  3984: a1 = a1 << 0x20\n  3987: t1 = a1 | a2\n  3990: a1 = u8 [a0 + 0x19]\n  3993: a3 = u8 [a0 + 0x18]\n  3996: a4 = u8 [a0 + 0x1a]\n  3999: a5 = u8 [a0 + 0x1b]\n  4002: a1 = a1 << 0x8\n  4005: a1 = a1 | a3\n  4008: a4 = a4 << 0x10\n  4011: a5 = a5 << 0x18\n  4014: a4 = a4 | a5\n  4017: a1 = a1 | a4\n  4020: a3 = u8 [a0 + 0x1d]\n  4023: a4 = u8 [a0 + 0x1c]\n  4026: a5 = u8 [a0 + 0x1e]\n  4029: a2 = u8 [a0 + 0x1f]\n  4032: a3 = a3 << 0x8\n  4035: a3 = a3 | a4\n  4038: a5 = a5 << 0x10\n  4041: a2 = a2 << 0x18\n  4044: a2 = a2 | a5\n  4047: a2 = a2 | a3\n  4050: a2 = a2 << 0x20\n  4053: a3 = a2 | a1\n  4056: a1 = u8 [a0 + 0x9]\n  4059: a2 = u8 [a0 + 0x8]\n  4062: a4 = u8 [a0 + 0xa]\n  4065: a5 = u8 [a0 + 0xb]\n  4068: a1 = a1 << 0x8\n  4071: a1 = a1 | a2\n  4074: a4 = a4 << 0x10\n  4077: a5 = a5 << 0x18\n  4080: a4 = a4 | a5\n  4083: a1 = a1 | a4\n  4086: a2 = u8 [a0 + 0xd]\n  4089: a4 = u8 [a0 + 0xc]\n  4092: a5 = u8 [a0 + 0xe]\n  4095: a0 = u8 [a0 + 0xf]\n  4098: a2 = a2 << 0x8\n  4101: a2 = a2 | a4\n  4104: a5 = a5 << 0x10\n  4107: a0 = a0 << 0x18\n  4110: a0 = a0 | a5\n  4113: a0 = a0 | a2\n  4116: a0 = a0 << 0x20\n  4119: a0 = a0 | a1\n  4122: a2 = reverse a0\n  4124: a5 = reverse a3\n  4126: a3 = reverse t1\n  4128: a4 = reverse t0\n  4130: a0 = a4 | a3\n  4133: a1 = a5 | a2\n  4136: a1 = a1 | a0\n  4139: a1 = a1 >> 0x20\n  4142: a0 = a0 | a2\n  4145: a0 = a0 << 0x20\n  4148: a0 = a0 | a1\n  4151: jump @95 if a0 == 0\n      : @94 (gas: 1)\n  4154: jump @174\n      : @95 (gas: 8)\n  4157: i32 a0 = a5 + 0\n  4159: a1 = 0x20\n  4162: u64 [s1 + 0x1b8] = a0\n  4166: u64 [s1 + 0x178] = a2\n  4170: u64 [s1 + 0x170] = a3\n  4174: u64 [s1 + 0x168] = a4\n  4178: u64 [s1 + 0x160] = a5\n  4182: ra = 42, jump @0\n      : @96 [@dyn 21] (gas: 42)\n  4187: u8 [a0 + 3] = 0x1c\n  4191: u8 [a0 + 2] = 0x15\n  4195: u8 [a0 + 1] = 0x62\n  4199: u8 [a0 + 0] = 0x84\n  4203: a1 = u64 [s1 + 0x178]\n  4207: a2 = u64 [s1 + 0x170]\n  4211: a2 = a2 | a1\n  4214: a1 = 0xfffffffc\n  4224: a3 = u64 [s1 + 0x160]\n  4228: a1 = a3 <u a1\n  4231: a3 = u64 [s1 + 0x168]\n  4235: a1 = 0 if a3 != 0\n  4237: a1 = 0 if a2 != 0\n  4239: u8 [a0 + 31] = 0\n  4242: u8 [a0 + 30] = 0\n  4245: u8 [a0 + 29] = 0\n  4248: u8 [a0 + 28] = 0\n  4251: u8 [a0 + 27] = 0\n  4254: u8 [a0 + 26] = 0\n  4257: u8 [a0 + 25] = 0\n  4260: u8 [a0 + 24] = 0\n  4263: u8 [a0 + 23] = 0\n  4266: u8 [a0 + 22] = 0\n  4269: u8 [a0 + 21] = 0\n  4272: u8 [a0 + 20] = 0\n  4275: u8 [a0 + 19] = 0\n  4278: u8 [a0 + 18] = 0\n  4281: u8 [a0 + 17] = 0\n  4284: u8 [a0 + 16] = 0\n  4287: u8 [a0 + 15] = 0\n  4290: u8 [a0 + 14] = 0\n  4293: u8 [a0 + 13] = 0\n  4296: u8 [a0 + 12] = 0\n  4299: u8 [a0 + 11] = 0\n  4302: u8 [a0 + 10] = 0\n  4305: u8 [a0 + 9] = 0\n  4308: u8 [a0 + 8] = 0\n  4311: u8 [a0 + 7] = 0\n  4314: u8 [a0 + 6] = 0\n  4317: u8 [a0 + 5] = 0\n  4320: u8 [a0 + 4] = 0\n  4323: jump @98 if a1 != 0\n      : @97 (gas: 1)\n  4326: jump @174\n      : @98 (gas: 4)\n  4329: a0 = u64 [s1 + 0x1b8]\n  4333: i32 a0 = a0 + 0x4\n  4336: a1 = 0x20\n  4339: ra = 44, jump @0\n      : @99 [@dyn 22] (gas: 92)\n  4344: a1 = u64 [s1 + 0x190]\n  4348: a1 = reverse a1\n  4350: a2 = u64 [s1 + 0x198]\n  4354: a2 = reverse a2\n  4356: a3 = u64 [s1 + 0x180]\n  4360: a3 = reverse a3\n  4362: a4 = u64 [s1 + 0x188]\n  4366: a4 = reverse a4\n  4368: a5 = a4 >> 0x38\n  4371: u8 [a0 + 0x1f] = a5\n  4374: a5 = a4 >> 0x30\n  4377: u8 [a0 + 0x1e] = a5\n  4380: a5 = a4 >> 0x28\n  4383: u8 [a0 + 0x1d] = a5\n  4386: a5 = a4 >> 0x20\n  4389: u8 [a0 + 0x1c] = a5\n  4392: a5 = a4 >> 0x18\n  4395: u8 [a0 + 0x1b] = a5\n  4398: a5 = a4 >> 0x10\n  4401: u8 [a0 + 0x1a] = a5\n  4404: a5 = a4 >> 0x8\n  4407: u8 [a0 + 0x19] = a5\n  4410: u8 [a0 + 0x18] = a4\n  4413: u8 [a0 + 0x10] = a3\n  4416: a4 = a3 >> 0x38\n  4419: u8 [a0 + 0x17] = a4\n  4422: a4 = a3 >> 0x30\n  4425: u8 [a0 + 0x16] = a4\n  4428: a4 = a3 >> 0x28\n  4431: u8 [a0 + 0x15] = a4\n  4434: a4 = a3 >> 0x20\n  4437: u8 [a0 + 0x14] = a4\n  4440: a4 = a3 >> 0x18\n  4443: u8 [a0 + 0x13] = a4\n  4446: a4 = a3 >> 0x10\n  4449: u8 [a0 + 0x12] = a4\n  4452: a3 = a3 >> 0x8\n  4455: u8 [a0 + 0x11] = a3\n  4458: u8 [a0 + 0x8] = a2\n  4461: a3 = a2 >> 0x38\n  4464: u8 [a0 + 0xf] = a3\n  4467: a3 = a2 >> 0x30\n  4470: u8 [a0 + 0xe] = a3\n  4473: a3 = a2 >> 0x28\n  4476: u8 [a0 + 0xd] = a3\n  4479: a3 = a2 >> 0x20\n  4482: u8 [a0 + 0xc] = a3\n  4485: a3 = a2 >> 0x18\n  4488: u8 [a0 + 0xb] = a3\n  4491: a3 = a2 >> 0x10\n  4494: u8 [a0 + 0xa] = a3\n  4497: a2 = a2 >> 0x8\n  4500: u8 [a0 + 0x9] = a2\n  4503: u8 [a0] = a1\n  4505: a2 = a1 >> 0x38\n  4508: u8 [a0 + 0x7] = a2\n  4511: a2 = a1 >> 0x30\n  4514: u8 [a0 + 0x6] = a2\n  4517: a2 = a1 >> 0x28\n  4520: u8 [a0 + 0x5] = a2\n  4523: a2 = a1 >> 0x20\n  4526: u8 [a0 + 0x4] = a2\n  4529: a2 = a1 >> 0x18\n  4532: u8 [a0 + 0x3] = a2\n  4535: a2 = a1 >> 0x10\n  4538: u8 [a0 + 0x2] = a2\n  4541: a1 = a1 >> 0x8\n  4544: u8 [a0 + 0x1] = a1\n  4547: ecalli 6 // 'ref_time_left'\n  4549: a0 = u64 [s1 + 0x1a0]\n  4553: a0 = reverse a0\n  4555: a1 = a0 << 0x20\n  4558: a2 = u64 [s1 + 0x1a8]\n  4562: a2 = reverse a2\n  4564: a2 = a2 >> 0x20\n  4567: a1 = a1 | a2\n  4570: a2 = u64 [s1 + 0x1b0]\n  4574: a2 = reverse a2\n  4576: a3 = a2 << 0x20\n  4579: a0 = a0 >> 0x20\n  4582: a0 = a0 | a3\n  4585: a2 = a2 >> 0x20\n  4588: u64 [s1 + 0x568] = a0\n  4592: u64 [s1 + 0x560] = a1\n  4596: u32 [s1 + 0x570] = a2\n  4600: u64 [s1 + 1432] = 0\n  4604: u64 [s1 + 1424] = 0\n  4608: u64 [s1 + 1416] = 0\n  4612: u64 [s1 + 1408] = 0\n  4616: a1 = 0x24\n  4619: a0 = u64 [s1 + 0x1b8]\n  4623: ra = 46, jump @0\n      : @100 [@dyn 23] (gas: 4)\n  4628: u64 [s1 + 0x1b0] = a0\n  4632: a0 = u64 [s1 + 0x1b8]\n  4636: a1 = 0\n  4638: ra = 48, jump @0\n      : @101 [@dyn 24] (gas: 31)\n  4643: u32 [s1 + 1440] = 0\n  4647: u64 [s1 + 1496] = 0\n  4651: u64 [s1 + 1488] = 0\n  4655: u64 [s1 + 1480] = 0\n  4659: u64 [s1 + 1472] = 0\n  4663: a1 = s1 + 0x560\n  4667: a1 = a1 << 0x20\n  4670: a1 = a1 >> 0x20\n  4673: a2 = 0x1800000000\n  4683: t0 = a1 | a2\n  4686: a1 = s1 + 0x580\n  4690: a1 = a1 << 0x20\n  4693: a1 = a1 >> 0x20\n  4696: a2 = s1 + 0x5c0\n  4700: a2 = a2 << 0x20\n  4703: a3 = a2 | a1\n  4706: a1 = u64 [s1 + 0x1b0]\n  4710: a1 = a1 << 0x20\n  4713: a1 = a1 >> 0x20\n  4716: a2 = 0x2400000000\n  4726: a4 = a1 | a2\n  4729: a0 = a0 << 0x20\n  4732: a0 = a0 >> 0x20\n  4735: a1 = s1 + 0x5a0\n  4739: a1 = a1 << 0x20\n  4742: a5 = a1 | a0\n  4745: a1 = 0xffffffffffffffff\n  4748: a2 = 0xffffffffffffffff\n  4751: a0 = t0\n  4753: ecalli 0 // 'call'\n  4754: fallthrough\n      : @102 (gas: 1)\n  4755: jump @104 if a0 == 0\n      : @103 (gas: 1)\n  4758: jump @230\n      : @104 (gas: 2)\n  4761: ecalli 8 // 'return_data_size'\n  4763: fallthrough\n      : @105 (gas: 3)\n  4764: a2 = a0\n  4766: a0 = a0 >> 0x20\n  4769: jump @107 if a0 == 0\n      : @106 (gas: 1)\n  4772: jump @174\n      : @107 (gas: 5)\n  4775: i32 a1 = a2 + 0\n  4777: u64 [s1 + 0x1a8] = a1\n  4781: a0 = u64 [s1 + 0x1b8]\n  4785: u64 [s1 + 0x1b0] = a2\n  4789: ra = 50, jump @0\n      : @108 [@dyn 25] (gas: 7)\n  4794: a1 = u64 [s1 + 0x1b0]\n  4798: u32 [s1 + 0x600] = a1\n  4802: i32 a0 = a0 + 0\n  4804: i32 a1 = s1 + 0x600\n  4808: a2 = 0\n  4810: ecalli 7 // 'return_data_copy'\n  4812: fallthrough\n      : @109 (gas: 3)\n  4813: a0 = i32 [s1 + 0x600]\n  4817: a1 = u64 [s1 + 0x1a8]\n  4821: jump @111 if a0 >=u a1\n      : @110 (gas: 1)\n  4824: jump @174\n      : @111 (gas: 16)\n  4827: u64 [s1 + 792] = 0\n  4831: u64 [s1 + 784] = 0\n  4835: u64 [s1 + 776] = 0\n  4839: a0 = u64 [s1 + 0x1b0]\n  4843: u64 [s1 + 0x300] = a0\n  4847: a0 = u64 [s1 + 0x160]\n  4851: u64 [s1 + 0x320] = a0\n  4855: a0 = u64 [s1 + 0x168]\n  4859: u64 [s1 + 0x328] = a0\n  4863: a0 = u64 [s1 + 0x178]\n  4867: u64 [s1 + 0x330] = a0\n  4871: a0 = s1 + 0x320\n  4875: a1 = s1 + 0x300\n  4879: a2 = u64 [s1 + 0x170]\n  4883: u64 [s1 + 0x338] = a2\n  4887: ra = 52, jump @287\n      : @112 [@dyn 26] (gas: 2)\n  4892: a1 = u64 [s1 + 0x1b0]\n  4896: jump @114 if a1 >u 31\n      : @113 (gas: 1)\n  4900: jump @275\n      : @114 (gas: 3)\n  4903: a1 = 0x20\n  4906: a0 = u64 [s1 + 0x1b8]\n  4910: ra = 54, jump @0\n      : @115 [@dyn 27] (gas: 74)\n  4915: a1 = u8 [a0 + 0x9]\n  4918: a2 = u8 [a0 + 0x8]\n  4921: a3 = u8 [a0 + 0xa]\n  4924: a4 = u8 [a0 + 0xb]\n  4927: a1 = a1 << 0x8\n  4930: a1 = a1 | a2\n  4933: a3 = a3 << 0x10\n  4936: a4 = a4 << 0x18\n  4939: a3 = a3 | a4\n  4942: a1 = a1 | a3\n  4945: a2 = u8 [a0 + 0xd]\n  4948: a3 = u8 [a0 + 0xc]\n  4951: a4 = u8 [a0 + 0xe]\n  4954: a5 = u8 [a0 + 0xf]\n  4957: a2 = a2 << 0x8\n  4960: a2 = a2 | a3\n  4963: a4 = a4 << 0x10\n  4966: a5 = a5 << 0x18\n  4969: a4 = a4 | a5\n  4972: a2 = a2 | a4\n  4975: a2 = a2 << 0x20\n  4978: t0 = a2 | a1\n  4981: a2 = u8 [a0 + 0x1]\n  4984: a3 = u8 [a0]\n  4986: a4 = u8 [a0 + 0x2]\n  4989: a5 = u8 [a0 + 0x3]\n  4992: a2 = a2 << 0x8\n  4995: a2 = a2 | a3\n  4998: a4 = a4 << 0x10\n  5001: a5 = a5 << 0x18\n  5004: a4 = a4 | a5\n  5007: a2 = a2 | a4\n  5010: a3 = u8 [a0 + 0x5]\n  5013: a4 = u8 [a0 + 0x4]\n  5016: a5 = u8 [a0 + 0x6]\n  5019: a1 = u8 [a0 + 0x7]\n  5022: a3 = a3 << 0x8\n  5025: a3 = a3 | a4\n  5028: a5 = a5 << 0x10\n  5031: a1 = a1 << 0x18\n  5034: a1 = a1 | a5\n  5037: a1 = a1 | a3\n  5040: a1 = a1 << 0x20\n  5043: t1 = a1 | a2\n  5046: a1 = u8 [a0 + 0x11]\n  5049: a3 = u8 [a0 + 0x10]\n  5052: a4 = u8 [a0 + 0x12]\n  5055: a5 = u8 [a0 + 0x13]\n  5058: a1 = a1 << 0x8\n  5061: a1 = a1 | a3\n  5064: a4 = a4 << 0x10\n  5067: a5 = a5 << 0x18\n  5070: a4 = a4 | a5\n  5073: a1 = a1 | a4\n  5076: a3 = u8 [a0 + 0x15]\n  5079: a4 = u8 [a0 + 0x14]\n  5082: a5 = u8 [a0 + 0x16]\n  5085: a2 = u8 [a0 + 0x17]\n  5088: a3 = a3 << 0x8\n  5091: a3 = a3 | a4\n  5094: a5 = a5 << 0x10\n  5097: a2 = a2 << 0x18\n  5100: a2 = a2 | a5\n  5103: a2 = a2 | a3\n  5106: a2 = a2 << 0x20\n  5109: a1 = a1 | a2\n  5112: a3 = reverse a1\n  5114: t1 = reverse t1\n  5116: a1 = reverse t0\n  5118: u64 [s1 + 0x1a8] = a1\n  5122: a4 = a1 | t1\n  5125: a5 = a3 <u 0x1\n  5128: a5 = 0 if a4 != 0\n  5130: jump @117 if a5 != 0\n      : @116 (gas: 1)\n  5133: jump @275\n      : @117 (gas: 77)\n  5136: a4 = u8 [a0 + 0x19]\n  5139: a5 = u8 [a0 + 0x18]\n  5142: a2 = u8 [a0 + 0x1a]\n  5145: a1 = u8 [a0 + 0x1b]\n  5148: a4 = a4 << 0x8\n  5151: a4 = a4 | a5\n  5154: a2 = a2 << 0x10\n  5157: a1 = a1 << 0x18\n  5160: a1 = a1 | a2\n  5163: a1 = a1 | a4\n  5166: a2 = u8 [a0 + 0x1d]\n  5169: a4 = u8 [a0 + 0x1c]\n  5172: a5 = u8 [a0 + 0x1e]\n  5175: a0 = u8 [a0 + 0x1f]\n  5178: a2 = a2 << 0x8\n  5181: a2 = a2 | a4\n  5184: a5 = a5 << 0x10\n  5187: a0 = a0 << 0x18\n  5190: a0 = a0 | a5\n  5193: a0 = a0 | a2\n  5196: a0 = a0 << 0x20\n  5199: a0 = a0 | a1\n  5202: a0 = reverse a0\n  5204: a4 = u64 [s1 + 0x160]\n  5208: a5 = a0 + a4\n  5211: a1 = a5 <u a0\n  5214: t0 = u64 [s1 + 0x168]\n  5218: a0 = a3 + t0\n  5221: t2 = a0 + a1\n  5224: a2 = t2 ^ a3\n  5227: a0 = t2 <u a3\n  5230: a0 = a1 if a2 == 0\n  5233: a2 = u64 [s1 + 0x1b0]\n  5237: a2 = a2 + a4\n  5240: ra = a2 <u a4\n  5243: a1 = a5 + 0x1f\n  5246: u64 [s1 + 0x1b8] = a5\n  5250: a3 = a1 <u a5\n  5253: u64 [s1 + 0x1b0] = a3\n  5257: u64 [s1 + 0x1a0] = a2\n  5261: a5 = a1 <u a2\n  5264: a2 = t0 + ra\n  5267: a1 = t2 + a3\n  5270: a4 = a1 ^ a2\n  5273: a3 = a1 <u a2\n  5276: a5 = a3 if a4 != 0\n  5279: u64 [s1 + 0x198] = a2\n  5283: a2 = a2 <u t0\n  5286: a2 = ra if ra == 0\n  5289: a3 = u64 [s1 + 0x178]\n  5293: ra = a3 + a2\n  5296: a2 = ra <u a3\n  5299: a4 = u64 [s1 + 0x170]\n  5303: t0 = a4 + a2\n  5306: t1 = t1 + a4\n  5309: a4 = u64 [s1 + 0x1a8]\n  5313: a2 = a4 + a3\n  5316: a3 = a2 <u a4\n  5319: a3 = a3 + t1\n  5322: a4 = a2 + a0\n  5325: a0 = a4 <u a2\n  5328: t1 = a3 + a0\n  5331: a0 = a1 <u t2\n  5334: a1 = u64 [s1 + 0x1b0]\n  5338: a0 = a1 if a1 == 0\n  5341: a0 = a0 + a4\n  5344: a1 = a0 <u a4\n  5347: a1 = a1 + t1\n  5350: a2 = a1 ^ t0\n  5353: u64 [s1 + 0x1a8] = t0\n  5357: a1 = a1 <u t0\n  5360: a3 = a0 <u ra\n  5363: a1 = a3 if a2 == 0\n  5366: a0 = a0 ^ ra\n  5369: a0 = a0 | a2\n  5372: a5 = a1 if a0 != 0\n  5375: jump @119 if a5 != 0\n      : @118 (gas: 1)\n  5378: jump @275\n      : @119 (gas: 9)\n  5381: a2 = u64 [s1 + 0x1b8]\n  5385: a0 = a2 | a4\n  5388: a1 = t2 | t1\n  5391: a0 = a0 | a1\n  5394: a0 = a0 >> 0x20\n  5397: a1 = a1 | a4\n  5400: a1 = a1 << 0x20\n  5403: a0 = a0 | a1\n  5406: jump @121 if a0 == 0\n      : @120 (gas: 1)\n  5409: jump @174\n      : @121 (gas: 7)\n  5412: u64 [s1 + 0x158] = t1\n  5416: u64 [s1 + 0x160] = a4\n  5420: u64 [s1 + 0x170] = ra\n  5424: u64 [s1 + 0x178] = t2\n  5428: i32 a0 = a2 + 0\n  5430: a1 = 0x20\n  5433: ra = 56, jump @0\n      : @122 [@dyn 28] (gas: 76)\n  5438: a1 = u8 [a0 + 0x9]\n  5441: a2 = u8 [a0 + 0x8]\n  5444: a3 = u8 [a0 + 0xa]\n  5447: a4 = u8 [a0 + 0xb]\n  5450: a1 = a1 << 0x8\n  5453: a1 = a1 | a2\n  5456: a3 = a3 << 0x10\n  5459: a4 = a4 << 0x18\n  5462: a3 = a3 | a4\n  5465: a1 = a1 | a3\n  5468: a2 = u8 [a0 + 0xd]\n  5471: a3 = u8 [a0 + 0xc]\n  5474: a4 = u8 [a0 + 0xe]\n  5477: a5 = u8 [a0 + 0xf]\n  5480: a2 = a2 << 0x8\n  5483: a2 = a2 | a3\n  5486: a4 = a4 << 0x10\n  5489: a5 = a5 << 0x18\n  5492: a4 = a4 | a5\n  5495: a2 = a2 | a4\n  5498: a2 = a2 << 0x20\n  5501: t2 = a2 | a1\n  5504: a1 = u8 [a0 + 0x1]\n  5507: a2 = u8 [a0]\n  5509: a3 = u8 [a0 + 0x2]\n  5512: a4 = u8 [a0 + 0x3]\n  5515: a1 = a1 << 0x8\n  5518: a1 = a1 | a2\n  5521: a3 = a3 << 0x10\n  5524: a4 = a4 << 0x18\n  5527: a3 = a3 | a4\n  5530: a1 = a1 | a3\n  5533: a2 = u8 [a0 + 0x5]\n  5536: a3 = u8 [a0 + 0x4]\n  5539: a4 = u8 [a0 + 0x6]\n  5542: a5 = u8 [a0 + 0x7]\n  5545: a2 = a2 << 0x8\n  5548: a2 = a2 | a3\n  5551: a4 = a4 << 0x10\n  5554: a5 = a5 << 0x18\n  5557: a4 = a4 | a5\n  5560: a2 = a2 | a4\n  5563: a2 = a2 << 0x20\n  5566: t0 = a2 | a1\n  5569: a1 = u8 [a0 + 0x11]\n  5572: a2 = u8 [a0 + 0x10]\n  5575: a3 = u8 [a0 + 0x12]\n  5578: a4 = u8 [a0 + 0x13]\n  5581: a1 = a1 << 0x8\n  5584: a1 = a1 | a2\n  5587: a3 = a3 << 0x10\n  5590: a4 = a4 << 0x18\n  5593: a3 = a3 | a4\n  5596: a1 = a1 | a3\n  5599: a2 = u8 [a0 + 0x15]\n  5602: a3 = u8 [a0 + 0x14]\n  5605: a4 = u8 [a0 + 0x16]\n  5608: a5 = u8 [a0 + 0x17]\n  5611: a2 = a2 << 0x8\n  5614: a2 = a2 | a3\n  5617: a4 = a4 << 0x10\n  5620: a5 = a5 << 0x18\n  5623: a4 = a4 | a5\n  5626: a2 = a2 | a4\n  5629: a2 = a2 << 0x20\n  5632: a1 = a1 | a2\n  5635: u64 [s1 + 0x148] = a1\n  5639: t1 = reverse a1\n  5641: u64 [s1 + 0x150] = t0\n  5645: t0 = reverse t0\n  5647: u64 [s1 + 0x168] = t2\n  5651: a2 = reverse t2\n  5653: a4 = a2 | t0\n  5656: a5 = t1 <u 0x1\n  5659: a5 = 0 if a4 != 0\n  5661: jump @124 if a5 != 0\n      : @123 (gas: 1)\n  5664: jump @285\n      : @124 (gas: 41)\n  5667: a4 = u8 [a0 + 0x19]\n  5670: a5 = u8 [a0 + 0x18]\n  5673: a3 = u8 [a0 + 0x1a]\n  5676: a1 = u8 [a0 + 0x1b]\n  5679: a4 = a4 << 0x8\n  5682: a4 = a4 | a5\n  5685: a3 = a3 << 0x10\n  5688: a1 = a1 << 0x18\n  5691: a1 = a1 | a3\n  5694: a1 = a1 | a4\n  5697: a3 = u8 [a0 + 0x1d]\n  5700: a4 = u8 [a0 + 0x1c]\n  5703: a5 = u8 [a0 + 0x1e]\n  5706: a0 = u8 [a0 + 0x1f]\n  5709: a3 = a3 << 0x8\n  5712: a3 = a3 | a4\n  5715: a5 = a5 << 0x10\n  5718: a0 = a0 << 0x18\n  5721: a0 = a0 | a5\n  5724: a0 = a0 | a3\n  5727: a0 = a0 << 0x20\n  5730: a0 = a0 | a1\n  5733: u64 [s1 + 0x140] = a0\n  5737: a0 = reverse a0\n  5739: a1 = a2 >> 0x3b\n  5742: t0 = t0 << 0x5\n  5745: a1 = t0 | a1\n  5748: u64 [s1 + 0x1b0] = a1\n  5752: a1 = t1 >> 0x3b\n  5755: a2 = a2 << 0x5\n  5758: a1 = a1 | a2\n  5761: u64 [s1 + 0x190] = a1\n  5765: a1 = a0 >> 0x3b\n  5768: t1 = t1 << 0x5\n  5771: a1 = t1 | a1\n  5774: u64 [s1 + 0x188] = a1\n  5778: a0 = a0 << 0x5\n  5781: u64 [s1 + 0x180] = a0\n  5785: a0 = 0x40\n  5788: a1 = 0x20\n  5791: ra = 58, jump @0\n      : @125 [@dyn 29] (gas: 119)\n  5796: a1 = u8 [a0 + 0x1]\n  5799: a2 = u8 [a0]\n  5801: a3 = u8 [a0 + 0x2]\n  5804: a4 = u8 [a0 + 0x3]\n  5807: a1 = a1 << 0x8\n  5810: a1 = a1 | a2\n  5813: a3 = a3 << 0x10\n  5816: a4 = a4 << 0x18\n  5819: a3 = a3 | a4\n  5822: a1 = a1 | a3\n  5825: a2 = u8 [a0 + 0x5]\n  5828: a3 = u8 [a0 + 0x4]\n  5831: a4 = u8 [a0 + 0x6]\n  5834: a5 = u8 [a0 + 0x7]\n  5837: a2 = a2 << 0x8\n  5840: a2 = a2 | a3\n  5843: a4 = a4 << 0x10\n  5846: a5 = a5 << 0x18\n  5849: a4 = a4 | a5\n  5852: a2 = a2 | a4\n  5855: a2 = a2 << 0x20\n  5858: t0 = a2 | a1\n  5861: a2 = u8 [a0 + 0x9]\n  5864: a3 = u8 [a0 + 0x8]\n  5867: a4 = u8 [a0 + 0xa]\n  5870: a5 = u8 [a0 + 0xb]\n  5873: a2 = a2 << 0x8\n  5876: a2 = a2 | a3\n  5879: a4 = a4 << 0x10\n  5882: a5 = a5 << 0x18\n  5885: a4 = a4 | a5\n  5888: a2 = a2 | a4\n  5891: a3 = u8 [a0 + 0xd]\n  5894: a4 = u8 [a0 + 0xc]\n  5897: a5 = u8 [a0 + 0xe]\n  5900: a1 = u8 [a0 + 0xf]\n  5903: a3 = a3 << 0x8\n  5906: a3 = a3 | a4\n  5909: a5 = a5 << 0x10\n  5912: a1 = a1 << 0x18\n  5915: a1 = a1 | a5\n  5918: a1 = a1 | a3\n  5921: a1 = a1 << 0x20\n  5924: t1 = a1 | a2\n  5927: a1 = u8 [a0 + 0x11]\n  5930: a3 = u8 [a0 + 0x10]\n  5933: a4 = u8 [a0 + 0x12]\n  5936: a5 = u8 [a0 + 0x13]\n  5939: a1 = a1 << 0x8\n  5942: a1 = a1 | a3\n  5945: a4 = a4 << 0x10\n  5948: a5 = a5 << 0x18\n  5951: a4 = a4 | a5\n  5954: a1 = a1 | a4\n  5957: a3 = u8 [a0 + 0x15]\n  5960: a4 = u8 [a0 + 0x14]\n  5963: a5 = u8 [a0 + 0x16]\n  5966: a2 = u8 [a0 + 0x17]\n  5969: a3 = a3 << 0x8\n  5972: a3 = a3 | a4\n  5975: a5 = a5 << 0x10\n  5978: a2 = a2 << 0x18\n  5981: a2 = a2 | a5\n  5984: a2 = a2 | a3\n  5987: a2 = a2 << 0x20\n  5990: a3 = a2 | a1\n  5993: a1 = u8 [a0 + 0x19]\n  5996: a2 = u8 [a0 + 0x18]\n  5999: a4 = u8 [a0 + 0x1a]\n  6002: a5 = u8 [a0 + 0x1b]\n  6005: a1 = a1 << 0x8\n  6008: a1 = a1 | a2\n  6011: a4 = a4 << 0x10\n  6014: a5 = a5 << 0x18\n  6017: a4 = a4 | a5\n  6020: a1 = a1 | a4\n  6023: a2 = u8 [a0 + 0x1d]\n  6026: a4 = u8 [a0 + 0x1c]\n  6029: a5 = u8 [a0 + 0x1e]\n  6032: a0 = u8 [a0 + 0x1f]\n  6035: a2 = a2 << 0x8\n  6038: a2 = a2 | a4\n  6041: a5 = a5 << 0x10\n  6044: a0 = a0 << 0x18\n  6047: a0 = a0 | a5\n  6050: a0 = a0 | a2\n  6053: a0 = a0 << 0x20\n  6056: a0 = a0 | a1\n  6059: t2 = reverse a0\n  6061: u64 [s1 + 0x30] = t2\n  6064: ra = reverse a3\n  6066: u64 [s1 + 0x40] = ra\n  6069: t1 = reverse t1\n  6071: u64 [s1 + 0x38] = t1\n  6074: a5 = reverse t0\n  6076: u64 [s1 + 0x48] = a5\n  6079: a1 = u64 [s1 + 0x180]\n  6083: a0 = a1 + 0x20\n  6086: a1 = a0 <u a1\n  6089: a3 = u64 [s1 + 0x188]\n  6093: a2 = a3 + a1\n  6096: a3 = a2 <u a3\n  6099: a3 = a1 if a1 == 0\n  6102: a1 = u64 [s1 + 0x190]\n  6106: a3 = a3 + a1\n  6109: a1 = a3 <u a1\n  6112: a4 = u64 [s1 + 0x1b0]\n  6116: a4 = a4 + a1\n  6119: u64 [s1 + 0x2c0] = a0\n  6123: u64 [s1 + 0x2c8] = a2\n  6127: u64 [s1 + 0x2d0] = a3\n  6131: u64 [s1 + 0x2f8] = a5\n  6135: u64 [s1 + 0x2f0] = t1\n  6139: u64 [s1 + 0x2e8] = ra\n  6143: u64 [s1 + 0x2e0] = t2\n  6147: a0 = s1 + 0x2e0\n  6151: a1 = s1 + 0x2c0\n  6155: u64 [s1 + 0x2d8] = a4\n  6159: ra = 60, jump @287\n      : @126 [@dyn 30] (gas: 12)\n  6164: a1 = u64 [s1 + 0x40]\n  6167: a3 = u64 [s1 + 0x30]\n  6170: a0 = u64 [s1 + 0x48]\n  6173: a0 = a0 | a1\n  6176: a5 = u64 [s1 + 0x38]\n  6179: a1 = a3 | a5\n  6182: a1 = a1 | a0\n  6185: a1 = a1 >> 0x20\n  6188: a0 = a0 | a5\n  6191: a0 = a0 << 0x20\n  6194: a0 = a0 | a1\n  6197: jump @174 if a0 != 0\n      : @127 (gas: 4)\n  6201: i32 a0 = a3 + 0\n  6203: a1 = 0x20\n  6206: u64 [s1 + 0x28] = a0\n  6209: ra = 62, jump @0\n      : @128 [@dyn 31] (gas: 116)\n  6214: a1 = u64 [s1 + 0x1b8]\n  6218: a3 = a1 + 0x20\n  6221: t0 = a3 <u a1\n  6224: a2 = u64 [s1 + 0x180]\n  6228: a2 = a2 + a3\n  6231: t2 = u64 [s1 + 0x178]\n  6235: ra = t2 + t0\n  6238: a1 = u64 [s1 + 0x188]\n  6242: a1 = a1 + ra\n  6245: u64 [s1 + 0x1b8] = a3\n  6249: a4 = a2 <u a3\n  6252: a5 = a1 + a4\n  6255: a1 = a5 ^ ra\n  6258: a3 = a5 <u ra\n  6261: a3 = a4 if a1 == 0\n  6264: a1 = u64 [s1 + 0x198]\n  6268: a4 = a5 ^ a1\n  6271: u64 [s1 + 0x68] = a5\n  6274: a5 = a1 <u a5\n  6277: a1 = u64 [s1 + 0x1a0]\n  6281: u64 [s1 + 0x70] = a2\n  6284: t1 = a1 <u a2\n  6287: t1 = a5 if a4 != 0\n  6290: a4 = ra <u t2\n  6293: a4 = t0 if t0 == 0\n  6296: a2 = u64 [s1 + 0x160]\n  6300: a1 = a2 + a4\n  6303: a2 = a1 <u a2\n  6306: a4 = u64 [s1 + 0x158]\n  6310: t2 = a4 + a2\n  6313: a2 = u64 [s1 + 0x190]\n  6317: a2 = a2 + a1\n  6320: a4 = u64 [s1 + 0x1b0]\n  6324: a4 = a4 + t2\n  6327: u64 [s1 + 0x1b0] = a1\n  6331: a5 = a2 <u a1\n  6334: a4 = a4 + a5\n  6337: a1 = a2 + a3\n  6340: a2 = a1 <u a2\n  6343: a4 = a4 + a2\n  6346: a3 = u64 [s1 + 0x1a8]\n  6350: a2 = a4 ^ a3\n  6353: u64 [s1 + 0x58] = a4\n  6356: a3 = a3 <u a4\n  6359: a5 = u64 [s1 + 0x170]\n  6363: a4 = a5 <u a1\n  6366: a4 = a3 if a2 != 0\n  6369: u64 [s1 + 0x60] = a1\n  6372: a3 = a1 ^ a5\n  6375: a2 = a2 | a3\n  6378: t1 = a4 if a2 != 0\n  6381: a3 = u64 [s1 + 0x168]\n  6385: a2 = a3 >> 0x38\n  6388: u8 [a0 + 0xf] = a2\n  6391: a2 = a3 >> 0x30\n  6394: u8 [a0 + 0xe] = a2\n  6397: a2 = a3 >> 0x28\n  6400: u8 [a0 + 0xd] = a2\n  6403: a2 = a3 >> 0x20\n  6406: u8 [a0 + 0xc] = a2\n  6409: a2 = a3 >> 0x18\n  6412: u8 [a0 + 0xb] = a2\n  6415: a2 = a3 >> 0x10\n  6418: u8 [a0 + 0xa] = a2\n  6421: a2 = a3 >> 0x8\n  6424: u8 [a0 + 0x9] = a2\n  6427: a4 = u64 [s1 + 0x150]\n  6431: a2 = a4 >> 0x38\n  6434: u8 [a0 + 0x7] = a2\n  6437: a2 = a4 >> 0x30\n  6440: u8 [a0 + 0x6] = a2\n  6443: a2 = a4 >> 0x28\n  6446: u8 [a0 + 0x5] = a2\n  6449: a2 = a4 >> 0x20\n  6452: u8 [a0 + 0x4] = a2\n  6455: a2 = a4 >> 0x18\n  6458: u8 [a0 + 0x3] = a2\n  6461: a2 = a4 >> 0x10\n  6464: u8 [a0 + 0x2] = a2\n  6467: a2 = a4 >> 0x8\n  6470: u8 [a0 + 0x1] = a2\n  6473: a5 = u64 [s1 + 0x148]\n  6477: a2 = a5 >> 0x38\n  6480: u8 [a0 + 0x17] = a2\n  6483: a2 = a5 >> 0x30\n  6486: u8 [a0 + 0x16] = a2\n  6489: a2 = a5 >> 0x28\n  6492: u8 [a0 + 0x15] = a2\n  6495: a2 = a5 >> 0x20\n  6498: u8 [a0 + 0x14] = a2\n  6501: a2 = a5 >> 0x18\n  6504: u8 [a0 + 0x13] = a2\n  6507: a2 = a5 >> 0x10\n  6510: u8 [a0 + 0x12] = a2\n  6513: a2 = a5 >> 0x8\n  6516: u8 [a0 + 0x11] = a2\n  6519: a1 = u64 [s1 + 0x140]\n  6523: a2 = a1 >> 0x38\n  6526: u8 [a0 + 0x1f] = a2\n  6529: a2 = a1 >> 0x30\n  6532: u8 [a0 + 0x1e] = a2\n  6535: a2 = a1 >> 0x28\n  6538: u8 [a0 + 0x1d] = a2\n  6541: a2 = a1 >> 0x20\n  6544: u8 [a0 + 0x1c] = a2\n  6547: a2 = a1 >> 0x18\n  6550: u8 [a0 + 0x1b] = a2\n  6553: a2 = a1 >> 0x10\n  6556: u8 [a0 + 0x1a] = a2\n  6559: a2 = a1 >> 0x8\n  6562: u8 [a0 + 0x19] = a2\n  6565: u8 [a0 + 0x10] = a5\n  6568: u8 [a0 + 0x8] = a3\n  6571: u8 [a0] = a4\n  6573: u8 [a0 + 0x18] = a1\n  6576: jump @130 if t1 == 0\n      : @129 (gas: 1)\n  6579: jump @275\n      : @130 (gas: 7)\n  6582: a0 = a4 | a5\n  6585: a1 = a1 | a3\n  6588: a0 = a0 | a1\n  6591: a1 = u64 [s1 + 0x40]\n  6594: t0 = u64 [s1 + 0x1b8]\n  6598: a4 = u64 [s1 + 0x1b0]\n  6602: jump @137 if a0 == 0\n      : @131 (gas: 8)\n  6606: a0 = 0xffffffe0\n  6616: u64 [s1 + 0x50] = a0\n  6619: t1 = u64 [s1 + 0x30]\n  6622: a5 = a1\n  6624: a2 = u64 [s1 + 0x38]\n  6627: a0 = u64 [s1 + 0x48]\n  6630: u64 [s1 + 0x1a8] = a0\n  6634: fallthrough\n      : @132 (gas: 8)\n  6635: a0 = t0 | a4\n  6638: a1 = ra | t2\n  6641: a0 = a0 | a1\n  6644: a0 = a0 >> 0x20\n  6647: a1 = a1 | a4\n  6650: a1 = a1 << 0x20\n  6653: a0 = a0 | a1\n  6656: jump @174 if a0 != 0\n      : @133 (gas: 10)\n  6660: u64 [s1 + 0x1b0] = a4\n  6664: u64 [s1 + 0x180] = ra\n  6668: u64 [s1 + 0x188] = t2\n  6672: i32 a0 = t0 + 0\n  6674: a1 = 0x20\n  6677: u64 [s1 + 0x1b8] = t0\n  6681: u64 [s1 + 0x1a0] = a2\n  6685: u64 [s1 + 0x198] = t1\n  6689: u64 [s1 + 0x190] = a5\n  6693: ra = 64, jump @0\n      : @134 [@dyn 32] (gas: 10)\n  6698: a1 = u64 [s1 + 0x190]\n  6702: a4 = u64 [s1 + 0x198]\n  6706: a5 = u64 [s1 + 0x1a0]\n  6710: a3 = u64 [s1 + 0x1a8]\n  6714: t0 = a5 | a3\n  6717: a2 = u64 [s1 + 0x50]\n  6720: a2 = a4 <u a2\n  6723: a2 = 0 if a1 != 0\n  6725: a2 = 0 if t0 != 0\n  6727: jump @174 if a2 == 0\n      : @135 (gas: 80)\n  6731: a2 = a4 + 0x20\n  6734: a4 = a2 <u a4\n  6737: t0 = a2\n  6739: u64 [s1 + 0xf8] = a2\n  6743: a2 = a1 + a4\n  6746: u64 [s1 + 0x198] = a2\n  6750: a1 = a2 <u a1\n  6753: a1 = a4 if a4 == 0\n  6756: a2 = u8 [a0]\n  6758: u64 [s1 + 0x190] = a2\n  6762: a2 = u8 [a0 + 0x1]\n  6765: u64 [s1 + 0x178] = a2\n  6769: a2 = u8 [a0 + 0x2]\n  6772: u64 [s1 + 0x170] = a2\n  6776: a2 = u8 [a0 + 0x3]\n  6779: u64 [s1 + 0x168] = a2\n  6783: a2 = u8 [a0 + 0x4]\n  6786: u64 [s1 + 0x160] = a2\n  6790: a2 = u8 [a0 + 0x5]\n  6793: u64 [s1 + 0x158] = a2\n  6797: a2 = u8 [a0 + 0x6]\n  6800: u64 [s1 + 0x150] = a2\n  6804: a2 = u8 [a0 + 0x7]\n  6807: u64 [s1 + 0x148] = a2\n  6811: a2 = u8 [a0 + 0x8]\n  6814: u64 [s1 + 0x140] = a2\n  6818: a2 = u8 [a0 + 0x9]\n  6821: u64 [s1 + 0x138] = a2\n  6825: a2 = u8 [a0 + 0xa]\n  6828: u64 [s1 + 0x130] = a2\n  6832: a2 = u8 [a0 + 0xb]\n  6835: u64 [s1 + 0x128] = a2\n  6839: a2 = u8 [a0 + 0xc]\n  6842: u64 [s1 + 0x120] = a2\n  6846: a2 = u8 [a0 + 0xd]\n  6849: u64 [s1 + 0x118] = a2\n  6853: a2 = u8 [a0 + 0xe]\n  6856: u64 [s1 + 0x108] = a2\n  6860: a2 = u8 [a0 + 0xf]\n  6863: u64 [s1 + 0x100] = a2\n  6867: a2 = u8 [a0 + 0x10]\n  6870: u64 [s1 + 0xf0] = a2\n  6874: a2 = u8 [a0 + 0x11]\n  6877: u64 [s1 + 0xe8] = a2\n  6881: a2 = u8 [a0 + 0x12]\n  6884: u64 [s1 + 0xe0] = a2\n  6888: a2 = u8 [a0 + 0x13]\n  6891: u64 [s1 + 0xd8] = a2\n  6895: a2 = u8 [a0 + 0x14]\n  6898: u64 [s1 + 0xd0] = a2\n  6902: a2 = u8 [a0 + 0x15]\n  6905: u64 [s1 + 0xc8] = a2\n  6909: a2 = u8 [a0 + 0x16]\n  6912: u64 [s1 + 0xc0] = a2\n  6916: a2 = u8 [a0 + 0x17]\n  6919: u64 [s1 + 0xb8] = a2\n  6923: a2 = u8 [a0 + 0x18]\n  6926: u64 [s1 + 0xb0] = a2\n  6930: a2 = u8 [a0 + 0x19]\n  6933: u64 [s1 + 0xa8] = a2\n  6937: a2 = u8 [a0 + 0x1a]\n  6940: u64 [s1 + 0xa0] = a2\n  6944: a2 = u8 [a0 + 0x1b]\n  6947: u64 [s1 + 0x98] = a2\n  6951: a2 = u8 [a0 + 0x1c]\n  6954: u64 [s1 + 0x90] = a2\n  6958: a2 = u8 [a0 + 0x1d]\n  6961: u64 [s1 + 0x88] = a2\n  6965: a2 = u8 [a0 + 0x1e]\n  6968: u64 [s1 + 0x80] = a2\n  6972: a0 = u8 [a0 + 0x1f]\n  6975: u64 [s1 + 0x78] = a0\n  6978: a1 = a1 + a5\n  6981: u64 [s1 + 0x110] = a1\n  6985: a0 = a1 <u a5\n  6988: a3 = a3 + a0\n  6991: u64 [s1 + 0x1a8] = a3\n  6995: i32 a0 = t0 + 0\n  6997: a1 = 0x20\n  7000: ra = 66, jump @0\n      : @136 [@dyn 33] (gas: 96)\n  7005: a1 = u64 [s1 + 0x1b8]\n  7009: t0 = a1 + 0x20\n  7012: t2 = t0 <u a1\n  7015: a4 = u64 [s1 + 0x180]\n  7019: t1 = a4 + t2\n  7022: a1 = u64 [s1 + 0x70]\n  7025: a5 = t0 <u a1\n  7028: a2 = u64 [s1 + 0x68]\n  7031: a1 = t1 ^ a2\n  7034: a3 = t1 <u a2\n  7037: a3 = a5 if a1 == 0\n  7040: a1 = t1 <u a4\n  7043: a1 = t2 if t2 == 0\n  7046: a2 = u64 [s1 + 0x1b0]\n  7050: a4 = a2 + a1\n  7053: a1 = a4 <u a2\n  7056: t2 = u64 [s1 + 0x188]\n  7060: t2 = t2 + a1\n  7063: a1 = u64 [s1 + 0x60]\n  7066: ra = a4 <u a1\n  7069: a2 = u64 [s1 + 0x58]\n  7072: a5 = t2 ^ a2\n  7075: a2 = t2 <u a2\n  7078: a2 = ra if a5 == 0\n  7081: a1 = a1 ^ a4\n  7084: a1 = a1 | a5\n  7087: a3 = a2 if a1 != 0\n  7090: a1 = u64 [s1 + 0x78]\n  7093: u8 [a0 + 0x1f] = a1\n  7096: a1 = u64 [s1 + 0x80]\n  7100: u8 [a0 + 0x1e] = a1\n  7103: a1 = u64 [s1 + 0x88]\n  7107: u8 [a0 + 0x1d] = a1\n  7110: a1 = u64 [s1 + 0x90]\n  7114: u8 [a0 + 0x1c] = a1\n  7117: a1 = u64 [s1 + 0x98]\n  7121: u8 [a0 + 0x1b] = a1\n  7124: a1 = u64 [s1 + 0xa0]\n  7128: u8 [a0 + 0x1a] = a1\n  7131: a1 = u64 [s1 + 0xa8]\n  7135: u8 [a0 + 0x19] = a1\n  7138: a1 = u64 [s1 + 0xb0]\n  7142: u8 [a0 + 0x18] = a1\n  7145: a1 = u64 [s1 + 0xb8]\n  7149: u8 [a0 + 0x17] = a1\n  7152: a1 = u64 [s1 + 0xc0]\n  7156: u8 [a0 + 0x16] = a1\n  7159: a1 = u64 [s1 + 0xc8]\n  7163: u8 [a0 + 0x15] = a1\n  7166: a1 = u64 [s1 + 0xd0]\n  7170: u8 [a0 + 0x14] = a1\n  7173: a1 = u64 [s1 + 0xd8]\n  7177: u8 [a0 + 0x13] = a1\n  7180: a1 = u64 [s1 + 0xe0]\n  7184: u8 [a0 + 0x12] = a1\n  7187: a1 = u64 [s1 + 0xe8]\n  7191: u8 [a0 + 0x11] = a1\n  7194: a1 = u64 [s1 + 0xf0]\n  7198: u8 [a0 + 0x10] = a1\n  7201: a1 = u64 [s1 + 0x100]\n  7205: u8 [a0 + 0xf] = a1\n  7208: a1 = u64 [s1 + 0x108]\n  7212: u8 [a0 + 0xe] = a1\n  7215: a1 = u64 [s1 + 0x118]\n  7219: u8 [a0 + 0xd] = a1\n  7222: a1 = u64 [s1 + 0x120]\n  7226: u8 [a0 + 0xc] = a1\n  7229: a1 = u64 [s1 + 0x128]\n  7233: u8 [a0 + 0xb] = a1\n  7236: a1 = u64 [s1 + 0x130]\n  7240: u8 [a0 + 0xa] = a1\n  7243: a1 = u64 [s1 + 0x138]\n  7247: u8 [a0 + 0x9] = a1\n  7250: a1 = u64 [s1 + 0x140]\n  7254: u8 [a0 + 0x8] = a1\n  7257: a1 = u64 [s1 + 0x148]\n  7261: u8 [a0 + 0x7] = a1\n  7264: a1 = u64 [s1 + 0x150]\n  7268: u8 [a0 + 0x6] = a1\n  7271: a1 = u64 [s1 + 0x158]\n  7275: u8 [a0 + 0x5] = a1\n  7278: a1 = u64 [s1 + 0x160]\n  7282: u8 [a0 + 0x4] = a1\n  7285: a1 = u64 [s1 + 0x168]\n  7289: u8 [a0 + 0x3] = a1\n  7292: a1 = u64 [s1 + 0x170]\n  7296: u8 [a0 + 0x2] = a1\n  7299: a1 = u64 [s1 + 0x178]\n  7303: u8 [a0 + 0x1] = a1\n  7306: a1 = u64 [s1 + 0x190]\n  7310: u8 [a0] = a1\n  7312: ra = t1\n  7314: t1 = u64 [s1 + 0xf8]\n  7318: a5 = u64 [s1 + 0x198]\n  7322: a2 = u64 [s1 + 0x110]\n  7326: jump @132 if a3 != 0\n      : @137 (gas: 3)\n  7330: a0 = 0x40\n  7333: a1 = 0x20\n  7336: ra = 68, jump @0\n      : @138 [@dyn 34] (gas: 100)\n  7341: a1 = u8 [a0 + 0x19]\n  7344: a2 = u8 [a0 + 0x18]\n  7347: a3 = u8 [a0 + 0x1a]\n  7350: a4 = u8 [a0 + 0x1b]\n  7353: a1 = a1 << 0x8\n  7356: a1 = a1 | a2\n  7359: a3 = a3 << 0x10\n  7362: a4 = a4 << 0x18\n  7365: a3 = a3 | a4\n  7368: a1 = a1 | a3\n  7371: a2 = u8 [a0 + 0x1d]\n  7374: a3 = u8 [a0 + 0x1c]\n  7377: a4 = u8 [a0 + 0x1e]\n  7380: a5 = u8 [a0 + 0x1f]\n  7383: a2 = a2 << 0x8\n  7386: a2 = a2 | a3\n  7389: a4 = a4 << 0x10\n  7392: a5 = a5 << 0x18\n  7395: a4 = a4 | a5\n  7398: a2 = a2 | a4\n  7401: a2 = a2 << 0x20\n  7404: t0 = a2 | a1\n  7407: a2 = u8 [a0 + 0x11]\n  7410: a3 = u8 [a0 + 0x10]\n  7413: a4 = u8 [a0 + 0x12]\n  7416: a5 = u8 [a0 + 0x13]\n  7419: a2 = a2 << 0x8\n  7422: a2 = a2 | a3\n  7425: a4 = a4 << 0x10\n  7428: a5 = a5 << 0x18\n  7431: a4 = a4 | a5\n  7434: a2 = a2 | a4\n  7437: a3 = u8 [a0 + 0x15]\n  7440: a4 = u8 [a0 + 0x14]\n  7443: a5 = u8 [a0 + 0x16]\n  7446: a1 = u8 [a0 + 0x17]\n  7449: a3 = a3 << 0x8\n  7452: a3 = a3 | a4\n  7455: a5 = a5 << 0x10\n  7458: a1 = a1 << 0x18\n  7461: a1 = a1 | a5\n  7464: a1 = a1 | a3\n  7467: a1 = a1 << 0x20\n  7470: t1 = a1 | a2\n  7473: a1 = u8 [a0 + 0x9]\n  7476: a3 = u8 [a0 + 0x8]\n  7479: a4 = u8 [a0 + 0xa]\n  7482: a5 = u8 [a0 + 0xb]\n  7485: a1 = a1 << 0x8\n  7488: a1 = a1 | a3\n  7491: a4 = a4 << 0x10\n  7494: a5 = a5 << 0x18\n  7497: a4 = a4 | a5\n  7500: a1 = a1 | a4\n  7503: a3 = u8 [a0 + 0xd]\n  7506: a4 = u8 [a0 + 0xc]\n  7509: a5 = u8 [a0 + 0xe]\n  7512: a2 = u8 [a0 + 0xf]\n  7515: a3 = a3 << 0x8\n  7518: a3 = a3 | a4\n  7521: a5 = a5 << 0x10\n  7524: a2 = a2 << 0x18\n  7527: a2 = a2 | a5\n  7530: a2 = a2 | a3\n  7533: a2 = a2 << 0x20\n  7536: a3 = a2 | a1\n  7539: a1 = u8 [a0 + 0x1]\n  7542: a2 = u8 [a0]\n  7544: a4 = u8 [a0 + 0x2]\n  7547: a5 = u8 [a0 + 0x3]\n  7550: a1 = a1 << 0x8\n  7553: a1 = a1 | a2\n  7556: a4 = a4 << 0x10\n  7559: a5 = a5 << 0x18\n  7562: a4 = a4 | a5\n  7565: a1 = a1 | a4\n  7568: a2 = u8 [a0 + 0x5]\n  7571: a4 = u8 [a0 + 0x4]\n  7574: a5 = u8 [a0 + 0x6]\n  7577: a0 = u8 [a0 + 0x7]\n  7580: a2 = a2 << 0x8\n  7583: a2 = a2 | a4\n  7586: a5 = a5 << 0x10\n  7589: a0 = a0 << 0x18\n  7592: a0 = a0 | a5\n  7595: a0 = a0 | a2\n  7598: a0 = a0 << 0x20\n  7601: a0 = a0 | a1\n  7604: a4 = reverse a0\n  7606: a5 = reverse a3\n  7608: a3 = reverse t1\n  7610: a2 = reverse t0\n  7612: a0 = a3 | a4\n  7615: a1 = a2 | a5\n  7618: a1 = a1 | a0\n  7621: a1 = a1 >> 0x20\n  7624: a0 = a0 | a5\n  7627: a0 = a0 << 0x20\n  7630: a0 = a0 | a1\n  7633: jump @174 if a0 != 0\n      : @139 (gas: 20)\n  7637: a0 = a2 + 0x20\n  7640: u64 [s1 + 0x1b0] = a0\n  7644: t0 = a0 <u a2\n  7647: a0 = a3 + t0\n  7650: u64 [s1 + 0x1b8] = a0\n  7654: a1 = a0 <u a3\n  7657: a1 = t0 if t0 == 0\n  7660: a1 = a1 + a5\n  7663: u64 [s1 + 0x1a0] = a1\n  7667: a0 = a1 <u a5\n  7670: a0 = a0 + a4\n  7673: u64 [s1 + 0x1a8] = a0\n  7677: i32 a0 = a2 + 0\n  7679: a1 = 0x20\n  7682: u64 [s1 + 0x10] = a0\n  7685: u64 [s1 + 0x50] = a2\n  7688: u64 [s1 + 0x20] = a3\n  7691: u64 [s1 + 0x18] = a4\n  7694: u64 [s1 + 0x58] = a5\n  7697: ra = 70, jump @0\n      : @140 [@dyn 35] (gas: 35)\n  7702: u8 [a0 + 31] = 0x20\n  7706: u8 [a0 + 30] = 0\n  7709: u8 [a0 + 29] = 0\n  7712: u8 [a0 + 28] = 0\n  7715: u8 [a0 + 27] = 0\n  7718: u8 [a0 + 26] = 0\n  7721: u8 [a0 + 25] = 0\n  7724: u8 [a0 + 24] = 0\n  7727: u8 [a0 + 23] = 0\n  7730: u8 [a0 + 22] = 0\n  7733: u8 [a0 + 21] = 0\n  7736: u8 [a0 + 20] = 0\n  7739: u8 [a0 + 19] = 0\n  7742: u8 [a0 + 18] = 0\n  7745: u8 [a0 + 17] = 0\n  7748: u8 [a0 + 16] = 0\n  7751: u8 [a0 + 15] = 0\n  7754: u8 [a0 + 14] = 0\n  7757: u8 [a0 + 13] = 0\n  7760: u8 [a0 + 12] = 0\n  7763: u8 [a0 + 11] = 0\n  7766: u8 [a0 + 10] = 0\n  7769: u8 [a0 + 9] = 0\n  7772: u8 [a0 + 8] = 0\n  7775: u8 [a0 + 7] = 0\n  7778: u8 [a0 + 6] = 0\n  7781: u8 [a0 + 5] = 0\n  7784: u8 [a0 + 4] = 0\n  7787: u8 [a0 + 3] = 0\n  7790: u8 [a0 + 2] = 0\n  7793: u8 [a0 + 1] = 0\n  7796: u8 [a0 + 0] = 0\n  7798: a1 = 0x20\n  7801: a0 = u64 [s1 + 0x28]\n  7804: ra = 72, jump @0\n      : @141 [@dyn 36] (gas: 12)\n  7809: t0 = u64 [s1 + 0x1b0]\n  7813: a3 = u64 [s1 + 0x1a0]\n  7817: a1 = t0 | a3\n  7820: a2 = u64 [s1 + 0x1b8]\n  7824: a4 = u64 [s1 + 0x1a8]\n  7828: a2 = a2 | a4\n  7831: a1 = a1 | a2\n  7834: a1 = a1 >> 0x20\n  7837: a2 = a2 | a3\n  7840: a2 = a2 << 0x20\n  7843: a1 = a1 | a2\n  7846: jump @174 if a1 != 0\n      : @142 (gas: 95)\n  7850: a1 = u8 [a0 + 0x19]\n  7853: a2 = u8 [a0 + 0x18]\n  7856: a3 = u8 [a0 + 0x1a]\n  7859: a4 = u8 [a0 + 0x1b]\n  7862: a1 = a1 << 0x8\n  7865: a1 = a1 | a2\n  7868: a3 = a3 << 0x10\n  7871: a4 = a4 << 0x18\n  7874: a3 = a3 | a4\n  7877: a1 = a1 | a3\n  7880: a2 = u8 [a0 + 0x1d]\n  7883: a3 = u8 [a0 + 0x1c]\n  7886: a4 = u8 [a0 + 0x1e]\n  7889: a5 = u8 [a0 + 0x1f]\n  7892: a2 = a2 << 0x8\n  7895: a2 = a2 | a3\n  7898: a4 = a4 << 0x10\n  7901: a5 = a5 << 0x18\n  7904: a4 = a4 | a5\n  7907: a2 = a2 | a4\n  7910: a2 = a2 << 0x20\n  7913: a1 = a1 | a2\n  7916: u64 [s1 + 0x190] = a1\n  7920: a1 = u8 [a0 + 0x11]\n  7923: a2 = u8 [a0 + 0x10]\n  7926: a3 = u8 [a0 + 0x12]\n  7929: a4 = u8 [a0 + 0x13]\n  7932: a1 = a1 << 0x8\n  7935: a1 = a1 | a2\n  7938: a3 = a3 << 0x10\n  7941: a4 = a4 << 0x18\n  7944: a3 = a3 | a4\n  7947: a1 = a1 | a3\n  7950: a2 = u8 [a0 + 0x15]\n  7953: a3 = u8 [a0 + 0x14]\n  7956: a4 = u8 [a0 + 0x16]\n  7959: a5 = u8 [a0 + 0x17]\n  7962: a2 = a2 << 0x8\n  7965: a2 = a2 | a3\n  7968: a4 = a4 << 0x10\n  7971: a5 = a5 << 0x18\n  7974: a4 = a4 | a5\n  7977: a2 = a2 | a4\n  7980: a2 = a2 << 0x20\n  7983: a1 = a1 | a2\n  7986: u64 [s1 + 0x198] = a1\n  7990: a1 = u8 [a0 + 0x9]\n  7993: a2 = u8 [a0 + 0x8]\n  7996: a3 = u8 [a0 + 0xa]\n  7999: a4 = u8 [a0 + 0xb]\n  8002: a1 = a1 << 0x8\n  8005: a1 = a1 | a2\n  8008: a3 = a3 << 0x10\n  8011: a4 = a4 << 0x18\n  8014: a3 = a3 | a4\n  8017: a1 = a1 | a3\n  8020: a2 = u8 [a0 + 0xd]\n  8023: a3 = u8 [a0 + 0xc]\n  8026: a4 = u8 [a0 + 0xe]\n  8029: a5 = u8 [a0 + 0xf]\n  8032: a2 = a2 << 0x8\n  8035: a2 = a2 | a3\n  8038: a4 = a4 << 0x10\n  8041: a5 = a5 << 0x18\n  8044: a4 = a4 | a5\n  8047: a2 = a2 | a4\n  8050: a2 = a2 << 0x20\n  8053: a1 = a1 | a2\n  8056: u64 [s1 + 0x188] = a1\n  8060: a1 = u8 [a0 + 0x1]\n  8063: a2 = u8 [a0]\n  8065: a3 = u8 [a0 + 0x2]\n  8068: a4 = u8 [a0 + 0x3]\n  8071: a1 = a1 << 0x8\n  8074: a1 = a1 | a2\n  8077: a3 = a3 << 0x10\n  8080: a4 = a4 << 0x18\n  8083: a3 = a3 | a4\n  8086: a1 = a1 | a3\n  8089: a2 = u8 [a0 + 0x5]\n  8092: a3 = u8 [a0 + 0x4]\n  8095: a4 = u8 [a0 + 0x6]\n  8098: a0 = u8 [a0 + 0x7]\n  8101: a2 = a2 << 0x8\n  8104: a2 = a2 | a3\n  8107: a4 = a4 << 0x10\n  8110: a0 = a0 << 0x18\n  8113: a0 = a0 | a4\n  8116: a0 = a0 | a2\n  8119: a0 = a0 << 0x20\n  8122: a0 = a0 | a1\n  8125: u64 [s1 + 0x180] = a0\n  8129: i32 a0 = t0 + 0\n  8131: a1 = 0x20\n  8134: ra = 74, jump @0\n      : @143 [@dyn 37] (gas: 84)\n  8139: t2 = u64 [s1 + 0x190]\n  8143: t0 = u64 [s1 + 0x198]\n  8147: u8 [a0 + 0x10] = t0\n  8150: a2 = u64 [s1 + 0x188]\n  8154: a1 = a2 >> 0x38\n  8157: u8 [a0 + 0xf] = a1\n  8160: a1 = a2 >> 0x30\n  8163: u8 [a0 + 0xe] = a1\n  8166: a1 = a2 >> 0x28\n  8169: u8 [a0 + 0xd] = a1\n  8172: a1 = a2 >> 0x20\n  8175: u8 [a0 + 0xc] = a1\n  8178: a1 = a2 >> 0x18\n  8181: u8 [a0 + 0xb] = a1\n  8184: a1 = a2 >> 0x10\n  8187: u8 [a0 + 0xa] = a1\n  8190: a1 = a2 >> 0x8\n  8193: u8 [a0 + 0x9] = a1\n  8196: u8 [a0 + 0x8] = a2\n  8199: a4 = a2\n  8201: ra = u64 [s1 + 0x180]\n  8205: a1 = ra >> 0x38\n  8208: u8 [a0 + 0x7] = a1\n  8211: a1 = ra >> 0x30\n  8214: u8 [a0 + 0x6] = a1\n  8217: a1 = ra >> 0x28\n  8220: u8 [a0 + 0x5] = a1\n  8223: a1 = ra >> 0x20\n  8226: u8 [a0 + 0x4] = a1\n  8229: a1 = ra >> 0x18\n  8232: u8 [a0 + 0x3] = a1\n  8235: a1 = ra >> 0x10\n  8238: u8 [a0 + 0x2] = a1\n  8241: a1 = ra >> 0x8\n  8244: u8 [a0 + 0x1] = a1\n  8247: u8 [a0] = ra\n  8249: u8 [a0 + 0x18] = t2\n  8252: a1 = t0 >> 0x38\n  8255: u8 [a0 + 0x17] = a1\n  8258: a1 = t0 >> 0x30\n  8261: u8 [a0 + 0x16] = a1\n  8264: a1 = t0 >> 0x28\n  8267: u8 [a0 + 0x15] = a1\n  8270: a1 = t0 >> 0x20\n  8273: u8 [a0 + 0x14] = a1\n  8276: a1 = t0 >> 0x18\n  8279: u8 [a0 + 0x13] = a1\n  8282: a1 = t0 >> 0x10\n  8285: u8 [a0 + 0x12] = a1\n  8288: a1 = t0 >> 0x8\n  8291: u8 [a0 + 0x11] = a1\n  8294: a1 = t2 >> 0x38\n  8297: u8 [a0 + 0x1f] = a1\n  8300: a1 = t2 >> 0x30\n  8303: u8 [a0 + 0x1e] = a1\n  8306: a1 = t2 >> 0x28\n  8309: u8 [a0 + 0x1d] = a1\n  8312: a1 = t2 >> 0x20\n  8315: u8 [a0 + 0x1c] = a1\n  8318: a1 = t2 >> 0x18\n  8321: u8 [a0 + 0x1b] = a1\n  8324: a1 = t2 >> 0x10\n  8327: u8 [a0 + 0x1a] = a1\n  8330: a1 = t2 >> 0x8\n  8333: u8 [a0 + 0x19] = a1\n  8336: a1 = u64 [s1 + 0x50]\n  8339: a0 = a1 + 0x40\n  8342: u64 [s1 + 0x1b0] = a0\n  8346: a0 = a0 <u a1\n  8349: a2 = u64 [s1 + 0x20]\n  8352: a1 = a2 + a0\n  8355: u64 [s1 + 0x1a8] = a1\n  8359: a1 = a1 <u a2\n  8362: a1 = a0 if a0 == 0\n  8365: a5 = u64 [s1 + 0x58]\n  8368: a3 = a5 + a1\n  8371: a0 = ra | t0\n  8374: a1 = a4 | t2\n  8377: a0 = a0 | a1\n  8380: a1 = a3 <u a5\n  8383: a5 = u64 [s1 + 0x18]\n  8386: a1 = a1 + a5\n  8389: u64 [s1 + 0x1a0] = a1\n  8393: jump @145 if a0 == 0\n      : @144 (gas: 1)\n  8396: jump @263\n      : @145 (gas: 3)\n  8399: t1 = u64 [s1 + 0x1b0]\n  8403: a2 = u64 [s1 + 0x1a8]\n  8407: jump @271\n      : @146 (gas: 11)\n  8410: a0 = sp + 0xffffffffffffffe0\n  8413: a0 = a0 & 0xffffffffffffffe0\n  8416: u64 [s1 + 0x1b0] = a0\n  8420: sp = a0\n  8422: u64 [a0 + 24] = 0\n  8425: u64 [a0 + 16] = 0\n  8428: u64 [a0 + 8] = 0\n  8431: u64 [a0 + 0] = 0\n  8433: i32 a0 = a0 + 0\n  8435: ecalli 12 // 'value_transferred'\n  8437: fallthrough\n      : @147 (gas: 9)\n  8438: a3 = u64 [s1 + 0x1b0]\n  8442: a0 = u64 [a3 + 0x10]\n  8445: a1 = u64 [a3 + 0x18]\n  8448: a2 = u64 [a3 + 0x8]\n  8451: a3 = u64 [a3]\n  8453: a1 = a1 | a2\n  8456: a0 = a0 | a3\n  8459: a0 = a0 | a1\n  8462: jump @149 if a0 == 0\n      : @148 (gas: 1)\n  8465: jump @275\n      : @149 (gas: 3)\n  8468: a0 = u64 [s1 + 0x1b8]\n  8472: a0 = i32 [a0]\n  8474: jump @151 if a0 >u 35\n      : @150 (gas: 1)\n  8478: jump @275\n      : @151 (gas: 24)\n  8481: u64 [s1 + 1816] = 0\n  8485: u64 [s1 + 1808] = 0\n  8489: u64 [s1 + 1800] = 0\n  8493: u64 [s1 + 1792] = 0\n  8497: u64 [s1 + 1848] = 0\n  8501: u64 [s1 + 1840] = 0\n  8505: u64 [s1 + 1832] = 0\n  8509: u64 [s1 + 1824] = 0\n  8513: u32 [s1 + 1856] = 0x20\n  8518: i32 a1 = s1 + 0x700\n  8522: i32 a3 = s1 + 0x720\n  8526: i32 a4 = s1 + 0x740\n  8530: a2 = 0xffffffffffffffff\n  8533: a0 = 0\n  8535: ecalli 5 // 'get_storage'\n  8537: a0 = u64 [s1 + 0x720]\n  8541: u64 [s1 + 0x1b8] = a0\n  8545: a0 = u64 [s1 + 0x730]\n  8549: u64 [s1 + 0x1b0] = a0\n  8553: a0 = u64 [s1 + 0x728]\n  8557: u64 [s1 + 0x1a8] = a0\n  8561: a0 = 0x80\n  8565: a1 = 0x20\n  8568: ra = 76, jump @0\n      : @152 [@dyn 38] (gas: 46)\n  8573: u8 [a0 + 31] = 0\n  8576: u8 [a0 + 30] = 0\n  8579: u8 [a0 + 29] = 0\n  8582: u8 [a0 + 28] = 0\n  8585: u8 [a0 + 27] = 0\n  8588: u8 [a0 + 26] = 0\n  8591: u8 [a0 + 25] = 0\n  8594: u8 [a0 + 24] = 0\n  8597: u8 [a0 + 23] = 0\n  8600: u8 [a0 + 22] = 0\n  8603: u8 [a0 + 21] = 0\n  8606: u8 [a0 + 20] = 0\n  8609: u8 [a0 + 19] = 0\n  8612: u8 [a0 + 18] = 0\n  8615: u8 [a0 + 17] = 0\n  8618: u8 [a0 + 16] = 0\n  8621: u8 [a0 + 15] = 0\n  8624: u8 [a0 + 14] = 0\n  8627: u8 [a0 + 13] = 0\n  8630: u8 [a0 + 12] = 0\n  8633: u8 [a0 + 11] = 0\n  8636: u8 [a0 + 10] = 0\n  8639: u8 [a0 + 9] = 0\n  8642: u8 [a0 + 8] = 0\n  8645: u8 [a0 + 7] = 0\n  8648: u8 [a0 + 6] = 0\n  8651: u8 [a0 + 5] = 0\n  8654: u8 [a0 + 4] = 0\n  8657: u8 [a0 + 3] = 0x1e\n  8661: u8 [a0 + 2] = 0x21\n  8665: u8 [a0 + 1] = 0x52\n  8669: u8 [a0 + 0] = 0x63\n  8672: i32 a0 = s1 + 0x3e0\n  8676: a1 = 0x4\n  8679: ecalli 2 // 'call_data_load'\n  8681: a0 = u64 [s1 + 0x3e0]\n  8685: u64 [s1 + 0x1a0] = a0\n  8689: a0 = u64 [s1 + 0x3e8]\n  8693: u64 [s1 + 0x198] = a0\n  8697: a0 = u64 [s1 + 0x3f0]\n  8701: u64 [s1 + 0x190] = a0\n  8705: a0 = u64 [s1 + 0x3f8]\n  8709: u64 [s1 + 0x188] = a0\n  8713: a0 = 0x84\n  8717: a1 = 0x20\n  8720: ra = 78, jump @0\n      : @153 [@dyn 39] (gas: 92)\n  8725: a1 = u64 [s1 + 0x188]\n  8729: a1 = reverse a1\n  8731: a2 = u64 [s1 + 0x190]\n  8735: a2 = reverse a2\n  8737: a3 = u64 [s1 + 0x198]\n  8741: a3 = reverse a3\n  8743: a4 = u64 [s1 + 0x1a0]\n  8747: a4 = reverse a4\n  8749: a5 = a4 >> 0x38\n  8752: u8 [a0 + 0x1f] = a5\n  8755: a5 = a4 >> 0x30\n  8758: u8 [a0 + 0x1e] = a5\n  8761: a5 = a4 >> 0x28\n  8764: u8 [a0 + 0x1d] = a5\n  8767: a5 = a4 >> 0x20\n  8770: u8 [a0 + 0x1c] = a5\n  8773: a5 = a4 >> 0x18\n  8776: u8 [a0 + 0x1b] = a5\n  8779: a5 = a4 >> 0x10\n  8782: u8 [a0 + 0x1a] = a5\n  8785: a5 = a4 >> 0x8\n  8788: u8 [a0 + 0x19] = a5\n  8791: u8 [a0 + 0x18] = a4\n  8794: a4 = a3 >> 0x38\n  8797: u8 [a0 + 0x17] = a4\n  8800: a4 = a3 >> 0x30\n  8803: u8 [a0 + 0x16] = a4\n  8806: a4 = a3 >> 0x28\n  8809: u8 [a0 + 0x15] = a4\n  8812: a4 = a3 >> 0x20\n  8815: u8 [a0 + 0x14] = a4\n  8818: a4 = a3 >> 0x18\n  8821: u8 [a0 + 0x13] = a4\n  8824: a4 = a3 >> 0x10\n  8827: u8 [a0 + 0x12] = a4\n  8830: a4 = a3 >> 0x8\n  8833: u8 [a0 + 0x11] = a4\n  8836: u8 [a0 + 0x10] = a3\n  8839: a3 = a2 >> 0x38\n  8842: u8 [a0 + 0xf] = a3\n  8845: a3 = a2 >> 0x30\n  8848: u8 [a0 + 0xe] = a3\n  8851: a3 = a2 >> 0x28\n  8854: u8 [a0 + 0xd] = a3\n  8857: a3 = a2 >> 0x20\n  8860: u8 [a0 + 0xc] = a3\n  8863: a3 = a2 >> 0x18\n  8866: u8 [a0 + 0xb] = a3\n  8869: a3 = a2 >> 0x10\n  8872: u8 [a0 + 0xa] = a3\n  8875: a3 = a2 >> 0x8\n  8878: u8 [a0 + 0x9] = a3\n  8881: u8 [a0 + 0x8] = a2\n  8884: a2 = a1 >> 0x38\n  8887: u8 [a0 + 0x7] = a2\n  8890: a2 = a1 >> 0x30\n  8893: u8 [a0 + 0x6] = a2\n  8896: a2 = a1 >> 0x28\n  8899: u8 [a0 + 0x5] = a2\n  8902: a2 = a1 >> 0x20\n  8905: u8 [a0 + 0x4] = a2\n  8908: a2 = a1 >> 0x18\n  8911: u8 [a0 + 0x3] = a2\n  8914: a2 = a1 >> 0x10\n  8917: u8 [a0 + 0x2] = a2\n  8920: a2 = a1 >> 0x8\n  8923: u8 [a0 + 0x1] = a2\n  8926: u8 [a0] = a1\n  8928: ecalli 6 // 'ref_time_left'\n  8930: a0 = u64 [s1 + 0x1a8]\n  8934: a0 = reverse a0\n  8936: a1 = a0 << 0x20\n  8939: a2 = u64 [s1 + 0x1b0]\n  8943: a2 = reverse a2\n  8945: a2 = a2 >> 0x20\n  8948: a1 = a1 | a2\n  8951: a0 = a0 >> 0x20\n  8954: a2 = u64 [s1 + 0x1b8]\n  8958: a2 = reverse a2\n  8960: a3 = a2 << 0x20\n  8963: a0 = a0 | a3\n  8966: a2 = a2 >> 0x20\n  8969: u64 [s1 + 0x408] = a0\n  8973: u64 [s1 + 0x400] = a1\n  8977: u32 [s1 + 0x410] = a2\n  8981: u64 [s1 + 1080] = 0\n  8985: u64 [s1 + 1072] = 0\n  8989: u64 [s1 + 1064] = 0\n  8993: u64 [s1 + 1056] = 0\n  8997: a0 = 0x80\n  9001: a1 = 0x24\n  9004: ra = 80, jump @0\n      : @154 [@dyn 40] (gas: 4)\n  9009: u64 [s1 + 0x1b8] = a0\n  9013: a0 = 0x80\n  9017: a1 = 0x20\n  9020: ra = 82, jump @0\n      : @155 [@dyn 41] (gas: 31)\n  9025: u32 [s1 + 1088] = 0x20\n  9030: u64 [s1 + 1144] = 0\n  9034: u64 [s1 + 1136] = 0\n  9038: u64 [s1 + 1128] = 0\n  9042: u64 [s1 + 1120] = 0\n  9046: a1 = s1 + 0x400\n  9050: a1 = a1 << 0x20\n  9053: a1 = a1 >> 0x20\n  9056: a2 = 0x1800000000\n  9066: t0 = a1 | a2\n  9069: a1 = s1 + 0x420\n  9073: a1 = a1 << 0x20\n  9076: a1 = a1 >> 0x20\n  9079: a2 = s1 + 0x460\n  9083: a2 = a2 << 0x20\n  9086: a3 = a2 | a1\n  9089: a1 = u64 [s1 + 0x1b8]\n  9093: a1 = a1 << 0x20\n  9096: a1 = a1 >> 0x20\n  9099: a2 = 0x2400000000\n  9109: a4 = a1 | a2\n  9112: a0 = a0 << 0x20\n  9115: a0 = a0 >> 0x20\n  9118: a1 = s1 + 0x440\n  9122: a1 = a1 << 0x20\n  9125: a5 = a1 | a0\n  9128: a1 = 0xffffffffffffffff\n  9131: a2 = 0xffffffffffffffff\n  9134: a0 = t0\n  9136: ecalli 0 // 'call'\n  9137: fallthrough\n      : @156 (gas: 1)\n  9138: jump @197 if a0 != 0\n      : @157 (gas: 2)\n  9142: ecalli 8 // 'return_data_size'\n  9144: fallthrough\n      : @158 (gas: 2)\n  9145: a2 = 0x20\n  9148: jump @219 if a0 >=u a2\n      : @159 (gas: 2)\n  9152: ecalli 8 // 'return_data_size'\n  9154: fallthrough\n      : @160 (gas: 7)\n  9155: a1 = a0 + 0x1f\n  9158: a3 = a0\n  9160: a0 = a1 <u a0\n  9163: a2 = a1 & 0xffffffffffffffe0\n  9166: a1 = a2 <u 0xffffffffffffff80\n  9169: a1 = 0 if a0 != 0\n  9171: jump @162 if a1 != 0\n      : @161 (gas: 1)\n  9174: jump @281\n      : @162 (gas: 3)\n  9177: a4 = 0\n  9179: u64 [s1 + 0x1b8] = a3\n  9183: jump @220\n      : @163 (gas: 1)\n  9186: jump @165 if a0 == 3187165927\n      : @164 (gas: 1)\n  9193: jump @275\n      : @165 (gas: 11)\n  9196: a0 = sp + 0xffffffffffffffe0\n  9199: a0 = a0 & 0xffffffffffffffe0\n  9202: u64 [s1 + 0x1b0] = a0\n  9206: sp = a0\n  9208: u64 [a0 + 24] = 0\n  9211: u64 [a0 + 16] = 0\n  9214: u64 [a0 + 8] = 0\n  9217: u64 [a0 + 0] = 0\n  9219: i32 a0 = a0 + 0\n  9221: ecalli 12 // 'value_transferred'\n  9223: fallthrough\n      : @166 (gas: 9)\n  9224: a3 = u64 [s1 + 0x1b0]\n  9228: a0 = u64 [a3 + 0x10]\n  9231: a1 = u64 [a3 + 0x18]\n  9234: a2 = u64 [a3 + 0x8]\n  9237: a3 = u64 [a3]\n  9239: a1 = a1 | a2\n  9242: a0 = a0 | a3\n  9245: a0 = a0 | a1\n  9248: jump @168 if a0 == 0\n      : @167 (gas: 1)\n  9251: jump @275\n      : @168 (gas: 3)\n  9254: a0 = u64 [s1 + 0x1b8]\n  9258: a0 = i32 [a0]\n  9260: jump @170 if a0 >u 3\n      : @169 (gas: 1)\n  9264: jump @275\n      : @170 (gas: 5)\n  9267: u64 [s1 + 1816] = 0\n  9271: u64 [s1 + 1808] = 0\n  9275: u64 [s1 + 1800] = 0\n  9279: u64 [s1 + 1792] = 0x1\n  9284: fallthrough\n      : @171 (gas: 20)\n  9285: u64 [s1 + 1848] = 0\n  9289: u64 [s1 + 1840] = 0\n  9293: u64 [s1 + 1832] = 0\n  9297: u64 [s1 + 1824] = 0\n  9301: u32 [s1 + 1856] = 0x20\n  9306: i32 a1 = s1 + 0x700\n  9310: i32 a3 = s1 + 0x720\n  9314: i32 a4 = s1 + 0x740\n  9318: a2 = 0xffffffffffffffff\n  9321: a0 = 0\n  9323: ecalli 5 // 'get_storage'\n  9325: a0 = u64 [s1 + 0x730]\n  9329: u64 [s1 + 0x1a8] = a0\n  9333: a0 = u64 [s1 + 0x728]\n  9337: u64 [s1 + 0x1b0] = a0\n  9341: a0 = u64 [s1 + 0x720]\n  9345: u64 [s1 + 0x1b8] = a0\n  9349: a0 = 0x40\n  9352: a1 = 0x20\n  9355: ra = 84, jump @0\n      : @172 [@dyn 42] (gas: 100)\n  9360: a1 = u8 [a0 + 0x11]\n  9363: a2 = u8 [a0 + 0x10]\n  9366: a3 = u8 [a0 + 0x12]\n  9369: a4 = u8 [a0 + 0x13]\n  9372: a1 = a1 << 0x8\n  9375: a1 = a1 | a2\n  9378: a3 = a3 << 0x10\n  9381: a4 = a4 << 0x18\n  9384: a3 = a3 | a4\n  9387: a1 = a1 | a3\n  9390: a2 = u8 [a0 + 0x15]\n  9393: a3 = u8 [a0 + 0x14]\n  9396: a4 = u8 [a0 + 0x16]\n  9399: a5 = u8 [a0 + 0x17]\n  9402: a2 = a2 << 0x8\n  9405: a2 = a2 | a3\n  9408: a4 = a4 << 0x10\n  9411: a5 = a5 << 0x18\n  9414: a4 = a4 | a5\n  9417: a2 = a2 | a4\n  9420: a2 = a2 << 0x20\n  9423: t0 = a2 | a1\n  9426: a2 = u8 [a0 + 0x1]\n  9429: a3 = u8 [a0]\n  9431: a4 = u8 [a0 + 0x2]\n  9434: a5 = u8 [a0 + 0x3]\n  9437: a2 = a2 << 0x8\n  9440: a2 = a2 | a3\n  9443: a4 = a4 << 0x10\n  9446: a5 = a5 << 0x18\n  9449: a4 = a4 | a5\n  9452: a2 = a2 | a4\n  9455: a3 = u8 [a0 + 0x5]\n  9458: a4 = u8 [a0 + 0x4]\n  9461: a5 = u8 [a0 + 0x6]\n  9464: a1 = u8 [a0 + 0x7]\n  9467: a3 = a3 << 0x8\n  9470: a3 = a3 | a4\n  9473: a5 = a5 << 0x10\n  9476: a1 = a1 << 0x18\n  9479: a1 = a1 | a5\n  9482: a1 = a1 | a3\n  9485: a1 = a1 << 0x20\n  9488: t1 = a1 | a2\n  9491: a1 = u8 [a0 + 0x19]\n  9494: a3 = u8 [a0 + 0x18]\n  9497: a4 = u8 [a0 + 0x1a]\n  9500: a5 = u8 [a0 + 0x1b]\n  9503: a1 = a1 << 0x8\n  9506: a1 = a1 | a3\n  9509: a4 = a4 << 0x10\n  9512: a5 = a5 << 0x18\n  9515: a4 = a4 | a5\n  9518: a1 = a1 | a4\n  9521: a3 = u8 [a0 + 0x1d]\n  9524: a4 = u8 [a0 + 0x1c]\n  9527: a5 = u8 [a0 + 0x1e]\n  9530: a2 = u8 [a0 + 0x1f]\n  9533: a3 = a3 << 0x8\n  9536: a3 = a3 | a4\n  9539: a5 = a5 << 0x10\n  9542: a2 = a2 << 0x18\n  9545: a2 = a2 | a5\n  9548: a2 = a2 | a3\n  9551: a2 = a2 << 0x20\n  9554: a3 = a2 | a1\n  9557: a1 = u8 [a0 + 0x9]\n  9560: a2 = u8 [a0 + 0x8]\n  9563: a4 = u8 [a0 + 0xa]\n  9566: a5 = u8 [a0 + 0xb]\n  9569: a1 = a1 << 0x8\n  9572: a1 = a1 | a2\n  9575: a4 = a4 << 0x10\n  9578: a5 = a5 << 0x18\n  9581: a4 = a4 | a5\n  9584: a1 = a1 | a4\n  9587: a2 = u8 [a0 + 0xd]\n  9590: a4 = u8 [a0 + 0xc]\n  9593: a5 = u8 [a0 + 0xe]\n  9596: a0 = u8 [a0 + 0xf]\n  9599: a2 = a2 << 0x8\n  9602: a2 = a2 | a4\n  9605: a5 = a5 << 0x10\n  9608: a0 = a0 << 0x18\n  9611: a0 = a0 | a5\n  9614: a0 = a0 | a2\n  9617: a0 = a0 << 0x20\n  9620: a0 = a0 | a1\n  9623: a1 = reverse a0\n  9625: a0 = reverse a3\n  9627: a2 = reverse t1\n  9629: a3 = reverse t0\n  9631: a2 = a2 | a3\n  9634: a3 = a0 | a1\n  9637: a3 = a3 | a2\n  9640: a3 = a3 >> 0x20\n  9643: a1 = a1 | a2\n  9646: a1 = a1 << 0x20\n  9649: a1 = a1 | a3\n  9652: jump @174 if a1 != 0\n      : @173 (gas: 1)\n  9655: jump @277\n      : @174 (gas: 1)\n  9658: trap\n      : @175 (gas: 1)\n  9659: jump @177 if a0 == 1222430038\n      : @176 (gas: 1)\n  9666: jump @275\n      : @177 (gas: 11)\n  9669: a0 = sp + 0xffffffffffffffe0\n  9672: a0 = a0 & 0xffffffffffffffe0\n  9675: u64 [s1 + 0x1b0] = a0\n  9679: sp = a0\n  9681: u64 [a0 + 24] = 0\n  9684: u64 [a0 + 16] = 0\n  9687: u64 [a0 + 8] = 0\n  9690: u64 [a0 + 0] = 0\n  9692: i32 a0 = a0 + 0\n  9694: ecalli 12 // 'value_transferred'\n  9696: fallthrough\n      : @178 (gas: 9)\n  9697: a3 = u64 [s1 + 0x1b0]\n  9701: a0 = u64 [a3 + 0x10]\n  9704: a1 = u64 [a3 + 0x18]\n  9707: a2 = u64 [a3 + 0x8]\n  9710: a3 = u64 [a3]\n  9712: a1 = a1 | a2\n  9715: a0 = a0 | a3\n  9718: a0 = a0 | a1\n  9721: jump @180 if a0 == 0\n      : @179 (gas: 1)\n  9724: jump @275\n      : @180 (gas: 3)\n  9727: a0 = u64 [s1 + 0x1b8]\n  9731: a0 = i32 [a0]\n  9733: jump @182 if a0 >u 35\n      : @181 (gas: 1)\n  9737: jump @275\n      : @182 (gas: 24)\n  9740: u64 [s1 + 1816] = 0\n  9744: u64 [s1 + 1808] = 0\n  9748: u64 [s1 + 1800] = 0\n  9752: u64 [s1 + 1792] = 0\n  9756: u64 [s1 + 1848] = 0\n  9760: u64 [s1 + 1840] = 0\n  9764: u64 [s1 + 1832] = 0\n  9768: u64 [s1 + 1824] = 0\n  9772: u32 [s1 + 1856] = 0x20\n  9777: i32 a1 = s1 + 0x700\n  9781: i32 a3 = s1 + 0x720\n  9785: i32 a4 = s1 + 0x740\n  9789: a2 = 0xffffffffffffffff\n  9792: a0 = 0\n  9794: ecalli 5 // 'get_storage'\n  9796: a0 = u64 [s1 + 0x730]\n  9800: u64 [s1 + 0x1a8] = a0\n  9804: a0 = u64 [s1 + 0x728]\n  9808: u64 [s1 + 0x1a0] = a0\n  9812: a0 = u64 [s1 + 0x720]\n  9816: u64 [s1 + 0x1b0] = a0\n  9820: a0 = 0x40\n  9823: a1 = 0x20\n  9826: ra = 86, jump @0\n      : @183 [@dyn 43] (gas: 100)\n  9831: a1 = u8 [a0 + 0x11]\n  9834: a2 = u8 [a0 + 0x10]\n  9837: a3 = u8 [a0 + 0x12]\n  9840: a4 = u8 [a0 + 0x13]\n  9843: a1 = a1 << 0x8\n  9846: a1 = a1 | a2\n  9849: a3 = a3 << 0x10\n  9852: a4 = a4 << 0x18\n  9855: a3 = a3 | a4\n  9858: a1 = a1 | a3\n  9861: a2 = u8 [a0 + 0x15]\n  9864: a3 = u8 [a0 + 0x14]\n  9867: a4 = u8 [a0 + 0x16]\n  9870: a5 = u8 [a0 + 0x17]\n  9873: a2 = a2 << 0x8\n  9876: a2 = a2 | a3\n  9879: a4 = a4 << 0x10\n  9882: a5 = a5 << 0x18\n  9885: a4 = a4 | a5\n  9888: a2 = a2 | a4\n  9891: a2 = a2 << 0x20\n  9894: t0 = a2 | a1\n  9897: a2 = u8 [a0 + 0x1]\n  9900: a3 = u8 [a0]\n  9902: a4 = u8 [a0 + 0x2]\n  9905: a5 = u8 [a0 + 0x3]\n  9908: a2 = a2 << 0x8\n  9911: a2 = a2 | a3\n  9914: a4 = a4 << 0x10\n  9917: a5 = a5 << 0x18\n  9920: a4 = a4 | a5\n  9923: a2 = a2 | a4\n  9926: a3 = u8 [a0 + 0x5]\n  9929: a4 = u8 [a0 + 0x4]\n  9932: a5 = u8 [a0 + 0x6]\n  9935: a1 = u8 [a0 + 0x7]\n  9938: a3 = a3 << 0x8\n  9941: a3 = a3 | a4\n  9944: a5 = a5 << 0x10\n  9947: a1 = a1 << 0x18\n  9950: a1 = a1 | a5\n  9953: a1 = a1 | a3\n  9956: a1 = a1 << 0x20\n  9959: t1 = a1 | a2\n  9962: a1 = u8 [a0 + 0x19]\n  9965: a3 = u8 [a0 + 0x18]\n  9968: a4 = u8 [a0 + 0x1a]\n  9971: a5 = u8 [a0 + 0x1b]\n  9974: a1 = a1 << 0x8\n  9977: a1 = a1 | a3\n  9980: a4 = a4 << 0x10\n  9983: a5 = a5 << 0x18\n  9986: a4 = a4 | a5\n  9989: a1 = a1 | a4\n  9992: a3 = u8 [a0 + 0x1d]\n  9995: a4 = u8 [a0 + 0x1c]\n  9998: a5 = u8 [a0 + 0x1e]\n 10001: a2 = u8 [a0 + 0x1f]\n 10004: a3 = a3 << 0x8\n 10007: a3 = a3 | a4\n 10010: a5 = a5 << 0x10\n 10013: a2 = a2 << 0x18\n 10016: a2 = a2 | a5\n 10019: a2 = a2 | a3\n 10022: a2 = a2 << 0x20\n 10025: a3 = a2 | a1\n 10028: a1 = u8 [a0 + 0x9]\n 10031: a2 = u8 [a0 + 0x8]\n 10034: a4 = u8 [a0 + 0xa]\n 10037: a5 = u8 [a0 + 0xb]\n 10040: a1 = a1 << 0x8\n 10043: a1 = a1 | a2\n 10046: a4 = a4 << 0x10\n 10049: a5 = a5 << 0x18\n 10052: a4 = a4 | a5\n 10055: a1 = a1 | a4\n 10058: a2 = u8 [a0 + 0xd]\n 10061: a4 = u8 [a0 + 0xc]\n 10064: a5 = u8 [a0 + 0xe]\n 10067: a0 = u8 [a0 + 0xf]\n 10070: a2 = a2 << 0x8\n 10073: a2 = a2 | a4\n 10076: a5 = a5 << 0x10\n 10079: a0 = a0 << 0x18\n 10082: a0 = a0 | a5\n 10085: a0 = a0 | a2\n 10088: a0 = a0 << 0x20\n 10091: a0 = a0 | a1\n 10094: a4 = reverse a0\n 10096: a3 = reverse a3\n 10098: a2 = reverse t1\n 10100: a5 = reverse t0\n 10102: a0 = a5 | a2\n 10105: a1 = a3 | a4\n 10108: a1 = a1 | a0\n 10111: a1 = a1 >> 0x20\n 10114: a0 = a0 | a4\n 10117: a0 = a0 << 0x20\n 10120: a0 = a0 | a1\n 10123: jump @174 if a0 != 0\n      : @184 (gas: 8)\n 10127: i32 a0 = a3 + 0\n 10129: a1 = 0x20\n 10132: u64 [s1 + 0x1b8] = a0\n 10136: u64 [s1 + 0x198] = a2\n 10140: u64 [s1 + 0x190] = a4\n 10144: u64 [s1 + 0x188] = a3\n 10148: u64 [s1 + 0x180] = a5\n 10152: ra = 88, jump @0\n      : @185 [@dyn 44] (gas: 36)\n 10157: u8 [a0 + 31] = 0\n 10160: u8 [a0 + 30] = 0\n 10163: u8 [a0 + 29] = 0\n 10166: u8 [a0 + 28] = 0\n 10169: u8 [a0 + 27] = 0\n 10172: u8 [a0 + 26] = 0\n 10175: u8 [a0 + 25] = 0\n 10178: u8 [a0 + 24] = 0\n 10181: u8 [a0 + 23] = 0\n 10184: u8 [a0 + 22] = 0\n 10187: u8 [a0 + 21] = 0\n 10190: u8 [a0 + 20] = 0\n 10193: u8 [a0 + 19] = 0\n 10196: u8 [a0 + 18] = 0\n 10199: u8 [a0 + 17] = 0\n 10202: u8 [a0 + 16] = 0\n 10205: u8 [a0 + 15] = 0\n 10208: u8 [a0 + 14] = 0\n 10211: u8 [a0 + 13] = 0\n 10214: u8 [a0 + 12] = 0\n 10217: u8 [a0 + 11] = 0\n 10220: u8 [a0 + 10] = 0\n 10223: u8 [a0 + 9] = 0\n 10226: u8 [a0 + 8] = 0\n 10229: u8 [a0 + 7] = 0\n 10232: u8 [a0 + 6] = 0\n 10235: u8 [a0 + 5] = 0\n 10238: u8 [a0 + 4] = 0\n 10241: u8 [a0 + 3] = 0xda\n 10246: u8 [a0 + 2] = 0xc0\n 10251: u8 [a0 + 1] = 0xa6\n 10256: u8 [a0 + 0] = 0xea\n 10260: i32 a0 = s1 + 0x4a0\n 10264: a1 = 0x4\n 10267: ecalli 2 // 'call_data_load'\n 10269: fallthrough\n      : @186 (gas: 10)\n 10270: a0 = u64 [s1 + 0x198]\n 10274: a1 = u64 [s1 + 0x190]\n 10278: a0 = a0 | a1\n 10281: a1 = 0xfffffffc\n 10291: a2 = u64 [s1 + 0x188]\n 10295: a1 = a2 <u a1\n 10298: a2 = u64 [s1 + 0x180]\n 10302: a1 = 0 if a2 != 0\n 10304: a1 = 0 if a0 != 0\n 10306: jump @174 if a1 == 0\n      : @187 (gas: 12)\n 10310: a0 = u64 [s1 + 0x4a0]\n 10314: u64 [s1 + 0x178] = a0\n 10318: a0 = u64 [s1 + 0x4a8]\n 10322: u64 [s1 + 0x170] = a0\n 10326: a0 = u64 [s1 + 0x4b0]\n 10330: u64 [s1 + 0x168] = a0\n 10334: a0 = u64 [s1 + 0x4b8]\n 10338: u64 [s1 + 0x160] = a0\n 10342: a0 = u64 [s1 + 0x1b8]\n 10346: i32 a0 = a0 + 0x4\n 10349: a1 = 0x20\n 10352: ra = 90, jump @0\n      : @188 [@dyn 45] (gas: 92)\n 10357: a1 = u64 [s1 + 0x160]\n 10361: a1 = reverse a1\n 10363: a2 = u64 [s1 + 0x168]\n 10367: a2 = reverse a2\n 10369: a3 = u64 [s1 + 0x170]\n 10373: a3 = reverse a3\n 10375: a4 = u64 [s1 + 0x178]\n 10379: a4 = reverse a4\n 10381: a5 = a4 >> 0x38\n 10384: u8 [a0 + 0x1f] = a5\n 10387: a5 = a4 >> 0x30\n 10390: u8 [a0 + 0x1e] = a5\n 10393: a5 = a4 >> 0x28\n 10396: u8 [a0 + 0x1d] = a5\n 10399: a5 = a4 >> 0x20\n 10402: u8 [a0 + 0x1c] = a5\n 10405: a5 = a4 >> 0x18\n 10408: u8 [a0 + 0x1b] = a5\n 10411: a5 = a4 >> 0x10\n 10414: u8 [a0 + 0x1a] = a5\n 10417: a5 = a4 >> 0x8\n 10420: u8 [a0 + 0x19] = a5\n 10423: u8 [a0 + 0x18] = a4\n 10426: a4 = a3 >> 0x38\n 10429: u8 [a0 + 0x17] = a4\n 10432: a4 = a3 >> 0x30\n 10435: u8 [a0 + 0x16] = a4\n 10438: a4 = a3 >> 0x28\n 10441: u8 [a0 + 0x15] = a4\n 10444: a4 = a3 >> 0x20\n 10447: u8 [a0 + 0x14] = a4\n 10450: a4 = a3 >> 0x18\n 10453: u8 [a0 + 0x13] = a4\n 10456: a4 = a3 >> 0x10\n 10459: u8 [a0 + 0x12] = a4\n 10462: a4 = a3 >> 0x8\n 10465: u8 [a0 + 0x11] = a4\n 10468: u8 [a0 + 0x10] = a3\n 10471: a3 = a2 >> 0x38\n 10474: u8 [a0 + 0xf] = a3\n 10477: a3 = a2 >> 0x30\n 10480: u8 [a0 + 0xe] = a3\n 10483: a3 = a2 >> 0x28\n 10486: u8 [a0 + 0xd] = a3\n 10489: a3 = a2 >> 0x20\n 10492: u8 [a0 + 0xc] = a3\n 10495: a3 = a2 >> 0x18\n 10498: u8 [a0 + 0xb] = a3\n 10501: a3 = a2 >> 0x10\n 10504: u8 [a0 + 0xa] = a3\n 10507: a3 = a2 >> 0x8\n 10510: u8 [a0 + 0x9] = a3\n 10513: u8 [a0 + 0x8] = a2\n 10516: a2 = a1 >> 0x38\n 10519: u8 [a0 + 0x7] = a2\n 10522: a2 = a1 >> 0x30\n 10525: u8 [a0 + 0x6] = a2\n 10528: a2 = a1 >> 0x28\n 10531: u8 [a0 + 0x5] = a2\n 10534: a2 = a1 >> 0x20\n 10537: u8 [a0 + 0x4] = a2\n 10540: a2 = a1 >> 0x18\n 10543: u8 [a0 + 0x3] = a2\n 10546: a2 = a1 >> 0x10\n 10549: u8 [a0 + 0x2] = a2\n 10552: a2 = a1 >> 0x8\n 10555: u8 [a0 + 0x1] = a2\n 10558: u8 [a0] = a1\n 10560: ecalli 6 // 'ref_time_left'\n 10562: a0 = u64 [s1 + 0x1a0]\n 10566: a0 = reverse a0\n 10568: a1 = a0 << 0x20\n 10571: a2 = u64 [s1 + 0x1a8]\n 10575: a2 = reverse a2\n 10577: a2 = a2 >> 0x20\n 10580: a1 = a1 | a2\n 10583: a2 = u64 [s1 + 0x1b0]\n 10587: a2 = reverse a2\n 10589: a3 = a2 << 0x20\n 10592: a0 = a0 >> 0x20\n 10595: a0 = a0 | a3\n 10598: a2 = a2 >> 0x20\n 10601: u64 [s1 + 0x4c8] = a0\n 10605: u64 [s1 + 0x4c0] = a1\n 10609: u32 [s1 + 0x4d0] = a2\n 10613: u64 [s1 + 1272] = 0\n 10617: u64 [s1 + 1264] = 0\n 10621: u64 [s1 + 1256] = 0\n 10625: u64 [s1 + 1248] = 0\n 10629: a1 = 0x24\n 10632: a0 = u64 [s1 + 0x1b8]\n 10636: ra = 92, jump @0\n      : @189 [@dyn 46] (gas: 4)\n 10641: u64 [s1 + 0x1b0] = a0\n 10645: a1 = 0x20\n 10648: a0 = u64 [s1 + 0x1b8]\n 10652: ra = 94, jump @0\n      : @190 [@dyn 47] (gas: 31)\n 10657: u32 [s1 + 1280] = 0x20\n 10662: u64 [s1 + 1336] = 0\n 10666: u64 [s1 + 1328] = 0\n 10670: u64 [s1 + 1320] = 0\n 10674: u64 [s1 + 1312] = 0\n 10678: a1 = s1 + 0x4c0\n 10682: a1 = a1 << 0x20\n 10685: a1 = a1 >> 0x20\n 10688: a2 = 0x1800000000\n 10698: t0 = a1 | a2\n 10701: a1 = s1 + 0x4e0\n 10705: a1 = a1 << 0x20\n 10708: a1 = a1 >> 0x20\n 10711: a2 = s1 + 0x520\n 10715: a2 = a2 << 0x20\n 10718: a3 = a2 | a1\n 10721: a1 = u64 [s1 + 0x1b0]\n 10725: a1 = a1 << 0x20\n 10728: a1 = a1 >> 0x20\n 10731: a2 = 0x2400000000\n 10741: a4 = a1 | a2\n 10744: a0 = a0 << 0x20\n 10747: a0 = a0 >> 0x20\n 10750: a1 = s1 + 0x500\n 10754: a1 = a1 << 0x20\n 10757: a5 = a1 | a0\n 10760: a1 = 0xffffffffffffffff\n 10763: a2 = 0xffffffffffffffff\n 10766: a0 = t0\n 10768: ecalli 0 // 'call'\n 10769: fallthrough\n      : @191 (gas: 1)\n 10770: jump @238 if a0 != 0\n      : @192 (gas: 2)\n 10774: ecalli 8 // 'return_data_size'\n 10776: fallthrough\n      : @193 (gas: 1)\n 10777: jump @246 if a0 >=u 32\n      : @194 (gas: 17)\n 10782: ecalli 8 // 'return_data_size'\n 10784: u64 [s1 + 0x1b0] = a0\n 10788: u64 [s1 + 536] = 0\n 10792: u64 [s1 + 528] = 0\n 10796: u64 [s1 + 520] = 0\n 10800: u64 [s1 + 0x200] = a0\n 10804: a0 = u64 [s1 + 0x190]\n 10808: u64 [s1 + 0x230] = a0\n 10812: a0 = u64 [s1 + 0x180]\n 10816: u64 [s1 + 0x228] = a0\n 10820: a0 = u64 [s1 + 0x188]\n 10824: u64 [s1 + 0x220] = a0\n 10828: a0 = s1 + 0x220\n 10832: a1 = s1 + 0x200\n 10836: a2 = u64 [s1 + 0x198]\n 10840: u64 [s1 + 0x238] = a2\n 10844: ra = 96, jump @287\n      : @195 [@dyn 48] (gas: 2)\n 10849: a1 = u64 [s1 + 0x1b0]\n 10853: jump @247 if a1 >u 31\n      : @196 (gas: 1)\n 10858: jump @275\n      : @197 (gas: 3)\n 10861: a0 = 0x40\n 10864: a1 = 0x20\n 10867: ra = 98, jump @0\n      : @198 [@dyn 49] (gas: 98)\n 10872: a1 = u8 [a0 + 0x11]\n 10875: a2 = u8 [a0 + 0x10]\n 10878: a3 = u8 [a0 + 0x12]\n 10881: a4 = u8 [a0 + 0x13]\n 10884: a1 = a1 << 0x8\n 10887: a1 = a1 | a2\n 10890: a3 = a3 << 0x10\n 10893: a4 = a4 << 0x18\n 10896: a3 = a3 | a4\n 10899: a1 = a1 | a3\n 10902: a2 = u8 [a0 + 0x15]\n 10905: a3 = u8 [a0 + 0x14]\n 10908: a4 = u8 [a0 + 0x16]\n 10911: a5 = u8 [a0 + 0x17]\n 10914: a2 = a2 << 0x8\n 10917: a2 = a2 | a3\n 10920: a4 = a4 << 0x10\n 10923: a5 = a5 << 0x18\n 10926: a4 = a4 | a5\n 10929: a2 = a2 | a4\n 10932: a2 = a2 << 0x20\n 10935: t0 = a2 | a1\n 10938: a2 = u8 [a0 + 0x1]\n 10941: a3 = u8 [a0]\n 10943: a4 = u8 [a0 + 0x2]\n 10946: a5 = u8 [a0 + 0x3]\n 10949: a2 = a2 << 0x8\n 10952: a2 = a2 | a3\n 10955: a4 = a4 << 0x10\n 10958: a5 = a5 << 0x18\n 10961: a4 = a4 | a5\n 10964: a2 = a2 | a4\n 10967: a3 = u8 [a0 + 0x5]\n 10970: a4 = u8 [a0 + 0x4]\n 10973: a5 = u8 [a0 + 0x6]\n 10976: a1 = u8 [a0 + 0x7]\n 10979: a3 = a3 << 0x8\n 10982: a3 = a3 | a4\n 10985: a5 = a5 << 0x10\n 10988: a1 = a1 << 0x18\n 10991: a1 = a1 | a5\n 10994: a1 = a1 | a3\n 10997: a1 = a1 << 0x20\n 11000: t1 = a1 | a2\n 11003: a1 = u8 [a0 + 0x19]\n 11006: a3 = u8 [a0 + 0x18]\n 11009: a4 = u8 [a0 + 0x1a]\n 11012: a5 = u8 [a0 + 0x1b]\n 11015: a1 = a1 << 0x8\n 11018: a1 = a1 | a3\n 11021: a4 = a4 << 0x10\n 11024: a5 = a5 << 0x18\n 11027: a4 = a4 | a5\n 11030: a1 = a1 | a4\n 11033: a3 = u8 [a0 + 0x1d]\n 11036: a4 = u8 [a0 + 0x1c]\n 11039: a5 = u8 [a0 + 0x1e]\n 11042: a2 = u8 [a0 + 0x1f]\n 11045: a3 = a3 << 0x8\n 11048: a3 = a3 | a4\n 11051: a5 = a5 << 0x10\n 11054: a2 = a2 << 0x18\n 11057: a2 = a2 | a5\n 11060: a2 = a2 | a3\n 11063: a2 = a2 << 0x20\n 11066: a3 = a2 | a1\n 11069: a1 = u8 [a0 + 0x9]\n 11072: a2 = u8 [a0 + 0x8]\n 11075: a4 = u8 [a0 + 0xa]\n 11078: a5 = u8 [a0 + 0xb]\n 11081: a1 = a1 << 0x8\n 11084: a1 = a1 | a2\n 11087: a4 = a4 << 0x10\n 11090: a5 = a5 << 0x18\n 11093: a4 = a4 | a5\n 11096: a1 = a1 | a4\n 11099: a2 = u8 [a0 + 0xd]\n 11102: a4 = u8 [a0 + 0xc]\n 11105: a5 = u8 [a0 + 0xe]\n 11108: a0 = u8 [a0 + 0xf]\n 11111: a2 = a2 << 0x8\n 11114: a2 = a2 | a4\n 11117: a5 = a5 << 0x10\n 11120: a0 = a0 << 0x18\n 11123: a0 = a0 | a5\n 11126: a0 = a0 | a2\n 11129: a0 = a0 << 0x20\n 11132: a0 = a0 | a1\n 11135: a0 = reverse a0\n 11137: u64 [s1 + 0x1b8] = a0\n 11141: a0 = reverse a3\n 11143: u64 [s1 + 0x1a0] = a0\n 11147: a0 = reverse t1\n 11149: u64 [s1 + 0x1b0] = a0\n 11153: a0 = reverse t0\n 11155: u64 [s1 + 0x1a8] = a0\n 11159: ecalli 8 // 'return_data_size'\n 11161: fallthrough\n      : @199 (gas: 12)\n 11162: a3 = u64 [s1 + 0x1a0]\n 11166: a1 = u64 [s1 + 0x1b0]\n 11170: a2 = u64 [s1 + 0x1a8]\n 11174: a1 = a1 | a2\n 11177: a4 = u64 [s1 + 0x1b8]\n 11181: a2 = a3 | a4\n 11184: a2 = a2 | a1\n 11187: a2 = a2 >> 0x20\n 11190: a1 = a1 | a4\n 11193: a1 = a1 << 0x20\n 11196: a1 = a1 | a2\n 11199: jump @174 if a1 != 0\n      : @200 (gas: 3)\n 11203: a2 = a0\n 11205: a0 = a0 >> 0x20\n 11208: jump @174 if a0 != 0\n      : @201 (gas: 6)\n 11212: i32 a0 = a3 + 0\n 11214: i32 a1 = a2 + 0\n 11216: u64 [s1 + 0x1b8] = a1\n 11220: u64 [s1 + 0x1a8] = a0\n 11224: u64 [s1 + 0x1b0] = a2\n 11228: ra = 100, jump @0\n      : @202 [@dyn 50] (gas: 8)\n 11233: a1 = u64 [s1 + 0x1b0]\n 11237: u32 [s1 + 0x480] = a1\n 11241: i32 a0 = a0 + 0\n 11243: i32 a1 = s1 + 0x480\n 11247: a2 = 0\n 11249: ecalli 7 // 'return_data_copy'\n 11251: a0 = i32 [s1 + 0x480]\n 11255: fallthrough\n      : @203 (gas: 2)\n 11256: a1 = u64 [s1 + 0x1b8]\n 11260: jump @174 if a0 <u a1\n      : @204 (gas: 2)\n 11264: ecalli 8 // 'return_data_size'\n 11266: fallthrough\n      : @205 (gas: 2)\n 11267: a1 = a0 >> 0x20\n 11270: jump @174 if a1 != 0\n      : @206 (gas: 4)\n 11274: i32 a1 = a0 + 0\n 11276: u64 [s1 + 0x1b8] = a1\n 11280: a0 = u64 [s1 + 0x1a8]\n 11284: ra = 102, jump @0\n      : @207 [@dyn 51] (gas: 5)\n 11289: i32 a1 = a0 + 0\n 11291: a0 = 0x1\n 11294: a2 = u64 [s1 + 0x1b8]\n 11298: ecalli 9 // 'seal_return'\n 11300: fallthrough\n      : @208 (gas: 3)\n 11301: a0 = 0x40\n 11304: a1 = 0x20\n 11307: ra = 104, jump @0\n      : @209 [@dyn 52] (gas: 100)\n 11312: a1 = u8 [a0 + 0x11]\n 11315: a2 = u8 [a0 + 0x10]\n 11318: a3 = u8 [a0 + 0x12]\n 11321: a4 = u8 [a0 + 0x13]\n 11324: a1 = a1 << 0x8\n 11327: a1 = a1 | a2\n 11330: a3 = a3 << 0x10\n 11333: a4 = a4 << 0x18\n 11336: a3 = a3 | a4\n 11339: a1 = a1 | a3\n 11342: a2 = u8 [a0 + 0x15]\n 11345: a3 = u8 [a0 + 0x14]\n 11348: a4 = u8 [a0 + 0x16]\n 11351: a5 = u8 [a0 + 0x17]\n 11354: a2 = a2 << 0x8\n 11357: a2 = a2 | a3\n 11360: a4 = a4 << 0x10\n 11363: a5 = a5 << 0x18\n 11366: a4 = a4 | a5\n 11369: a2 = a2 | a4\n 11372: a2 = a2 << 0x20\n 11375: t0 = a2 | a1\n 11378: a2 = u8 [a0 + 0x1]\n 11381: a3 = u8 [a0]\n 11383: a4 = u8 [a0 + 0x2]\n 11386: a5 = u8 [a0 + 0x3]\n 11389: a2 = a2 << 0x8\n 11392: a2 = a2 | a3\n 11395: a4 = a4 << 0x10\n 11398: a5 = a5 << 0x18\n 11401: a4 = a4 | a5\n 11404: a2 = a2 | a4\n 11407: a3 = u8 [a0 + 0x5]\n 11410: a4 = u8 [a0 + 0x4]\n 11413: a5 = u8 [a0 + 0x6]\n 11416: a1 = u8 [a0 + 0x7]\n 11419: a3 = a3 << 0x8\n 11422: a3 = a3 | a4\n 11425: a5 = a5 << 0x10\n 11428: a1 = a1 << 0x18\n 11431: a1 = a1 | a5\n 11434: a1 = a1 | a3\n 11437: a1 = a1 << 0x20\n 11440: t1 = a1 | a2\n 11443: a1 = u8 [a0 + 0x19]\n 11446: a3 = u8 [a0 + 0x18]\n 11449: a4 = u8 [a0 + 0x1a]\n 11452: a5 = u8 [a0 + 0x1b]\n 11455: a1 = a1 << 0x8\n 11458: a1 = a1 | a3\n 11461: a4 = a4 << 0x10\n 11464: a5 = a5 << 0x18\n 11467: a4 = a4 | a5\n 11470: a1 = a1 | a4\n 11473: a3 = u8 [a0 + 0x1d]\n 11476: a4 = u8 [a0 + 0x1c]\n 11479: a5 = u8 [a0 + 0x1e]\n 11482: a2 = u8 [a0 + 0x1f]\n 11485: a3 = a3 << 0x8\n 11488: a3 = a3 | a4\n 11491: a5 = a5 << 0x10\n 11494: a2 = a2 << 0x18\n 11497: a2 = a2 | a5\n 11500: a2 = a2 | a3\n 11503: a2 = a2 << 0x20\n 11506: a3 = a2 | a1\n 11509: a1 = u8 [a0 + 0x9]\n 11512: a2 = u8 [a0 + 0x8]\n 11515: a4 = u8 [a0 + 0xa]\n 11518: a5 = u8 [a0 + 0xb]\n 11521: a1 = a1 << 0x8\n 11524: a1 = a1 | a2\n 11527: a4 = a4 << 0x10\n 11530: a5 = a5 << 0x18\n 11533: a4 = a4 | a5\n 11536: a1 = a1 | a4\n 11539: a2 = u8 [a0 + 0xd]\n 11542: a4 = u8 [a0 + 0xc]\n 11545: a5 = u8 [a0 + 0xe]\n 11548: a0 = u8 [a0 + 0xf]\n 11551: a2 = a2 << 0x8\n 11554: a2 = a2 | a4\n 11557: a5 = a5 << 0x10\n 11560: a0 = a0 << 0x18\n 11563: a0 = a0 | a5\n 11566: a0 = a0 | a2\n 11569: a0 = a0 << 0x20\n 11572: a0 = a0 | a1\n 11575: a4 = reverse a0\n 11577: a2 = reverse a3\n 11579: a5 = reverse t1\n 11581: a3 = reverse t0\n 11583: a0 = a3 | a5\n 11586: a1 = a2 | a4\n 11589: a1 = a1 | a0\n 11592: a1 = a1 >> 0x20\n 11595: a0 = a0 | a4\n 11598: a0 = a0 << 0x20\n 11601: a0 = a0 | a1\n 11604: jump @174 if a0 != 0\n      : @210 (gas: 8)\n 11608: i32 a0 = a2 + 0\n 11610: a1 = 0x20\n 11613: u64 [s1 + 0x198] = a0\n 11617: u64 [s1 + 0x1b8] = a2\n 11621: u64 [s1 + 0x1b0] = a3\n 11625: u64 [s1 + 0x1a8] = a4\n 11629: u64 [s1 + 0x1a0] = a5\n 11633: ra = 106, jump @0\n      : @211 [@dyn 53] (gas: 43)\n 11638: u8 [a0 + 31] = 0\n 11641: u8 [a0 + 30] = 0\n 11644: u8 [a0 + 29] = 0\n 11647: u8 [a0 + 28] = 0\n 11650: u8 [a0 + 27] = 0\n 11653: u8 [a0 + 26] = 0\n 11656: u8 [a0 + 25] = 0\n 11659: u8 [a0 + 24] = 0\n 11662: u8 [a0 + 23] = 0\n 11665: u8 [a0 + 22] = 0\n 11668: u8 [a0 + 21] = 0\n 11671: u8 [a0 + 20] = 0\n 11674: u8 [a0 + 19] = 0\n 11677: u8 [a0 + 18] = 0\n 11680: u8 [a0 + 17] = 0\n 11683: u8 [a0 + 16] = 0\n 11686: u8 [a0 + 15] = 0\n 11689: u8 [a0 + 14] = 0\n 11692: u8 [a0 + 13] = 0\n 11695: u8 [a0 + 12] = 0\n 11698: u8 [a0 + 11] = 0\n 11701: u8 [a0 + 10] = 0\n 11704: u8 [a0 + 9] = 0\n 11707: u8 [a0 + 8] = 0\n 11710: u8 [a0 + 7] = 0\n 11713: u8 [a0 + 6] = 0\n 11716: u8 [a0 + 5] = 0\n 11719: u8 [a0 + 3] = 0xa0\n 11724: u8 [a0 + 2] = 0x79\n 11728: u8 [a0 + 1] = 0xc3\n 11733: u8 [a0 + 0] = 0x8\n 11736: a1 = u64 [s1 + 0x1a8]\n 11740: a3 = u64 [s1 + 0x1a0]\n 11744: a3 = a3 | a1\n 11747: a4 = 0x100000000\n 11757: a1 = 0xfffffffc\n 11767: a2 = u64 [s1 + 0x1b8]\n 11771: a1 = a2 <u a1\n 11774: a2 = u64 [s1 + 0x1b0]\n 11778: a1 = 0 if a2 != 0\n 11780: a1 = 0 if a3 != 0\n 11782: u8 [a0 + 4] = 0\n 11785: jump @174 if a1 == 0\n      : @212 (gas: 6)\n 11789: a0 = u64 [s1 + 0x198]\n 11793: i32 a0 = a0 + 0x4\n 11796: a1 = 0x20\n 11799: u64 [s1 + 0x1a8] = a3\n 11803: u64 [s1 + 0x1a0] = a4\n 11807: ra = 108, jump @0\n      : @213 [@dyn 54] (gas: 41)\n 11812: a4 = u64 [s1 + 0x1a8]\n 11816: a3 = u64 [s1 + 0x1b0]\n 11820: a2 = u64 [s1 + 0x1b8]\n 11824: u8 [a0 + 31] = 0x20\n 11828: u8 [a0 + 30] = 0\n 11831: u8 [a0 + 29] = 0\n 11834: u8 [a0 + 28] = 0\n 11837: u8 [a0 + 27] = 0\n 11840: u8 [a0 + 26] = 0\n 11843: u8 [a0 + 25] = 0\n 11846: u8 [a0 + 24] = 0\n 11849: u8 [a0 + 23] = 0\n 11852: u8 [a0 + 22] = 0\n 11855: u8 [a0 + 21] = 0\n 11858: u8 [a0 + 20] = 0\n 11861: u8 [a0 + 19] = 0\n 11864: u8 [a0 + 18] = 0\n 11867: u8 [a0 + 17] = 0\n 11870: u8 [a0 + 16] = 0\n 11873: u8 [a0 + 15] = 0\n 11876: u8 [a0 + 14] = 0\n 11879: u8 [a0 + 13] = 0\n 11882: u8 [a0 + 12] = 0\n 11885: u8 [a0 + 11] = 0\n 11888: u8 [a0 + 10] = 0\n 11891: u8 [a0 + 9] = 0\n 11894: u8 [a0 + 8] = 0\n 11897: u8 [a0 + 7] = 0\n 11900: u8 [a0 + 6] = 0\n 11903: u8 [a0 + 5] = 0\n 11906: u8 [a0 + 4] = 0\n 11909: u8 [a0 + 3] = 0\n 11912: u8 [a0 + 2] = 0\n 11915: u8 [a0 + 1] = 0\n 11918: a1 = u64 [s1 + 0x1a0]\n 11922: a1 = a1 + 0xffffffffffffffdc\n 11925: a1 = a2 <u a1\n 11928: a1 = 0 if a3 != 0\n 11930: a1 = 0 if a4 != 0\n 11932: u8 [a0 + 0] = 0\n 11934: jump @174 if a1 == 0\n      : @214 (gas: 4)\n 11938: a0 = u64 [s1 + 0x198]\n 11942: i32 a0 = a0 + 0x24\n 11945: a1 = 0x20\n 11948: ra = 110, jump @0\n      : @215 [@dyn 55] (gas: 40)\n 11953: u8 [a0 + 31] = 0xe\n 11957: u8 [a0 + 30] = 0\n 11960: u8 [a0 + 29] = 0\n 11963: u8 [a0 + 28] = 0\n 11966: u8 [a0 + 27] = 0\n 11969: u8 [a0 + 26] = 0\n 11972: u8 [a0 + 25] = 0\n 11975: u8 [a0 + 24] = 0\n 11978: u8 [a0 + 23] = 0\n 11981: u8 [a0 + 22] = 0\n 11984: u8 [a0 + 21] = 0\n 11987: u8 [a0 + 20] = 0\n 11990: u8 [a0 + 19] = 0\n 11993: u8 [a0 + 18] = 0\n 11996: u8 [a0 + 17] = 0\n 11999: u8 [a0 + 16] = 0\n 12002: u8 [a0 + 15] = 0\n 12005: u8 [a0 + 14] = 0\n 12008: u8 [a0 + 13] = 0\n 12011: u8 [a0 + 12] = 0\n 12014: u8 [a0 + 11] = 0\n 12017: u8 [a0 + 10] = 0\n 12020: u8 [a0 + 9] = 0\n 12023: u8 [a0 + 8] = 0\n 12026: u8 [a0 + 7] = 0\n 12029: u8 [a0 + 6] = 0\n 12032: u8 [a0 + 5] = 0\n 12035: u8 [a0 + 4] = 0\n 12038: u8 [a0 + 3] = 0\n 12041: u8 [a0 + 2] = 0\n 12044: u8 [a0 + 1] = 0\n 12047: a1 = 0xffffffbc\n 12057: a2 = u64 [s1 + 0x1b8]\n 12061: a1 = a2 <u a1\n 12064: a2 = u64 [s1 + 0x1b0]\n 12068: a1 = 0 if a2 != 0\n 12070: a2 = u64 [s1 + 0x1a8]\n 12074: a1 = 0 if a2 != 0\n 12076: u8 [a0 + 0] = 0\n 12078: jump @174 if a1 == 0\n      : @216 (gas: 4)\n 12082: a0 = u64 [s1 + 0x198]\n 12086: i32 a0 = a0 + 0x44\n 12089: a1 = 0x20\n 12092: ra = 112, jump @0\n      : @217 [@dyn 56] (gas: 35)\n 12097: u8 [a0 + 31] = 0\n 12100: u8 [a0 + 30] = 0\n 12103: u8 [a0 + 29] = 0\n 12106: u8 [a0 + 28] = 0\n 12109: u8 [a0 + 27] = 0\n 12112: u8 [a0 + 26] = 0\n 12115: u8 [a0 + 25] = 0\n 12118: u8 [a0 + 24] = 0\n 12121: u8 [a0 + 23] = 0\n 12124: u8 [a0 + 22] = 0\n 12127: u8 [a0 + 21] = 0\n 12130: u8 [a0 + 20] = 0\n 12133: u8 [a0 + 19] = 0\n 12136: u8 [a0 + 18] = 0\n 12139: u8 [a0 + 17] = 0\n 12142: u8 [a0 + 16] = 0\n 12145: u8 [a0 + 15] = 0\n 12148: u8 [a0 + 14] = 0\n 12151: u8 [a0 + 13] = 0x64\n 12155: u8 [a0 + 12] = 0x65\n 12159: u8 [a0 + 11] = 0x7a\n 12163: u8 [a0 + 10] = 0x69\n 12167: u8 [a0 + 9] = 0x72\n 12171: u8 [a0 + 8] = 0x6f\n 12175: u8 [a0 + 7] = 0x68\n 12179: u8 [a0 + 6] = 0x74\n 12183: u8 [a0 + 5] = 0x75\n 12187: u8 [a0 + 4] = 0x61\n 12191: u8 [a0 + 3] = 0x20\n 12195: u8 [a0 + 2] = 0x74\n 12199: u8 [a0 + 1] = 0x6f\n 12203: u8 [a0 + 0] = 0x4e\n 12206: a1 = 0x64\n 12209: a0 = u64 [s1 + 0x198]\n 12213: ra = 114, jump @0\n      : @218 [@dyn 57] (gas: 5)\n 12218: i32 a1 = a0 + 0\n 12220: a0 = 0x1\n 12223: a2 = 0x64\n 12226: ecalli 9 // 'seal_return'\n 12228: fallthrough\n      : @219 (gas: 4)\n 12229: a0 = 0\n 12231: a4 = 0\n 12233: u64 [s1 + 440] = 0x20\n 12238: fallthrough\n      : @220 (gas: 14)\n 12239: u64 [s1 + 432] = 0\n 12243: a1 = a2 + 0x80\n 12247: u64 [s1 + 0x1a8] = a1\n 12251: a1 = a1 <u a2\n 12254: a2 = a0 + a1\n 12257: u64 [s1 + 0x1a0] = a2\n 12261: a0 = a2 <u a0\n 12264: a0 = a1 if a1 == 0\n 12267: u64 [s1 + 0x198] = a0\n 12271: a0 = a0 <u 0\n 12273: u64 [s1 + 0x190] = a0\n 12277: a0 = 0x40\n 12280: a1 = 0x20\n 12283: ra = 116, jump @0\n      : @221 [@dyn 58] (gas: 80)\n 12288: a1 = u64 [s1 + 0x190]\n 12292: a1 = reverse a1\n 12294: a2 = u64 [s1 + 0x198]\n 12298: a2 = reverse a2\n 12300: a3 = u64 [s1 + 0x1a0]\n 12304: a3 = reverse a3\n 12306: a4 = u64 [s1 + 0x1a8]\n 12310: a4 = reverse a4\n 12312: u8 [a0 + 0x18] = a4\n 12315: a5 = a4 >> 0x38\n 12318: u8 [a0 + 0x1f] = a5\n 12321: a5 = a4 >> 0x30\n 12324: u8 [a0 + 0x1e] = a5\n 12327: a5 = a4 >> 0x28\n 12330: u8 [a0 + 0x1d] = a5\n 12333: a5 = a4 >> 0x20\n 12336: u8 [a0 + 0x1c] = a5\n 12339: a5 = a4 >> 0x18\n 12342: u8 [a0 + 0x1b] = a5\n 12345: a5 = a4 >> 0x10\n 12348: u8 [a0 + 0x1a] = a5\n 12351: a4 = a4 >> 0x8\n 12354: u8 [a0 + 0x19] = a4\n 12357: u8 [a0 + 0x10] = a3\n 12360: a4 = a3 >> 0x38\n 12363: u8 [a0 + 0x17] = a4\n 12366: a4 = a3 >> 0x30\n 12369: u8 [a0 + 0x16] = a4\n 12372: a4 = a3 >> 0x28\n 12375: u8 [a0 + 0x15] = a4\n 12378: a4 = a3 >> 0x20\n 12381: u8 [a0 + 0x14] = a4\n 12384: a4 = a3 >> 0x18\n 12387: u8 [a0 + 0x13] = a4\n 12390: a4 = a3 >> 0x10\n 12393: u8 [a0 + 0x12] = a4\n 12396: a3 = a3 >> 0x8\n 12399: u8 [a0 + 0x11] = a3\n 12402: u8 [a0 + 0x8] = a2\n 12405: a3 = a2 >> 0x38\n 12408: u8 [a0 + 0xf] = a3\n 12411: a3 = a2 >> 0x30\n 12414: u8 [a0 + 0xe] = a3\n 12417: a3 = a2 >> 0x28\n 12420: u8 [a0 + 0xd] = a3\n 12423: a3 = a2 >> 0x20\n 12426: u8 [a0 + 0xc] = a3\n 12429: a3 = a2 >> 0x18\n 12432: u8 [a0 + 0xb] = a3\n 12435: a3 = a2 >> 0x10\n 12438: u8 [a0 + 0xa] = a3\n 12441: a2 = a2 >> 0x8\n 12444: u8 [a0 + 0x9] = a2\n 12447: u8 [a0] = a1\n 12449: a2 = a1 >> 0x38\n 12452: u8 [a0 + 0x7] = a2\n 12455: a2 = a1 >> 0x30\n 12458: u8 [a0 + 0x6] = a2\n 12461: a2 = a1 >> 0x28\n 12464: u8 [a0 + 0x5] = a2\n 12467: a2 = a1 >> 0x20\n 12470: u8 [a0 + 0x4] = a2\n 12473: a2 = a1 >> 0x18\n 12476: u8 [a0 + 0x3] = a2\n 12479: a2 = a1 >> 0x10\n 12482: u8 [a0 + 0x2] = a2\n 12485: a1 = a1 >> 0x8\n 12488: a5 = u64 [s1 + 0x1b0]\n 12492: a2 = a5 >u 0\n 12494: a3 = u64 [s1 + 0x1b8]\n 12498: a3 = a3 <u 0x20\n 12501: a3 = a3 ^ 0x1\n 12504: a3 = a2 if a5 != 0\n 12507: a2 = a5 >u 0\n 12509: a4 = a5 >u 0\n 12511: a4 = a2 if a5 == 0\n 12514: a2 = a5 | a5\n 12517: a4 = a3 if a2 == 0\n 12520: u8 [a0 + 0x1] = a1\n 12523: jump @223 if a4 != 0\n      : @222 (gas: 1)\n 12526: jump @275\n      : @223 (gas: 3)\n 12529: a0 = 0x80\n 12533: a1 = 0x20\n 12536: ra = 118, jump @0\n      : @224 [@dyn 59] (gas: 56)\n 12541: a1 = u8 [a0 + 0x9]\n 12544: a2 = u8 [a0 + 0x8]\n 12547: a3 = u8 [a0 + 0xa]\n 12550: a4 = u8 [a0 + 0xb]\n 12553: a1 = a1 << 0x8\n 12556: a1 = a1 | a2\n 12559: a3 = a3 << 0x10\n 12562: a4 = a4 << 0x18\n 12565: a3 = a3 | a4\n 12568: a1 = a1 | a3\n 12571: a2 = u8 [a0 + 0xd]\n 12574: a3 = u8 [a0 + 0xc]\n 12577: a4 = u8 [a0 + 0xe]\n 12580: a5 = u8 [a0 + 0xf]\n 12583: a2 = a2 << 0x8\n 12586: a2 = a2 | a3\n 12589: a4 = a4 << 0x10\n 12592: a5 = a5 << 0x18\n 12595: a4 = a4 | a5\n 12598: a2 = a2 | a4\n 12601: a2 = a2 << 0x20\n 12604: t0 = a2 | a1\n 12607: a1 = u8 [a0 + 0x1]\n 12610: a2 = u8 [a0]\n 12612: a3 = u8 [a0 + 0x2]\n 12615: a4 = u8 [a0 + 0x3]\n 12618: a1 = a1 << 0x8\n 12621: a1 = a1 | a2\n 12624: a3 = a3 << 0x10\n 12627: a4 = a4 << 0x18\n 12630: a3 = a3 | a4\n 12633: a1 = a1 | a3\n 12636: a2 = u8 [a0 + 0x5]\n 12639: a3 = u8 [a0 + 0x4]\n 12642: a4 = u8 [a0 + 0x6]\n 12645: a5 = u8 [a0 + 0x7]\n 12648: a2 = a2 << 0x8\n 12651: a2 = a2 | a3\n 12654: a4 = a4 << 0x10\n 12657: a5 = a5 << 0x18\n 12660: a4 = a4 | a5\n 12663: a2 = a2 | a4\n 12666: a2 = a2 << 0x20\n 12669: a1 = a1 | a2\n 12672: u64 [s1 + 0x1b0] = a1\n 12676: a1 = reverse a1\n 12678: u64 [s1 + 0x1b8] = t0\n 12682: a2 = reverse t0\n 12684: a3 = 0x100000000\n 12694: a3 = a3 ^ a2\n 12697: a3 = a3 | a1\n 12700: a2 = a2 >> 0x20\n 12703: a2 = a2 <u 0x1\n 12706: a2 = 0 if a1 != 0\n 12708: a2 = 0 if a3 == 0\n 12710: jump @226 if a2 != 0\n      : @225 (gas: 1)\n 12713: jump @275\n      : @226 (gas: 35)\n 12716: a1 = u8 [a0 + 0x18]\n 12719: u64 [s1 + 0x150] = a1\n 12723: a1 = u8 [a0 + 0x19]\n 12726: u64 [s1 + 0x130] = a1\n 12730: a1 = u8 [a0 + 0x1a]\n 12733: u64 [s1 + 0x140] = a1\n 12737: a1 = u8 [a0 + 0x1b]\n 12740: u64 [s1 + 0x138] = a1\n 12744: a1 = u8 [a0 + 0x1c]\n 12747: u64 [s1 + 0x168] = a1\n 12751: a1 = u8 [a0 + 0x1d]\n 12754: u64 [s1 + 0x148] = a1\n 12758: a1 = u8 [a0 + 0x1e]\n 12761: u64 [s1 + 0x160] = a1\n 12765: a1 = u8 [a0 + 0x1f]\n 12768: u64 [s1 + 0x158] = a1\n 12772: a1 = u8 [a0 + 0x10]\n 12775: u64 [s1 + 0x190] = a1\n 12779: a1 = u8 [a0 + 0x11]\n 12782: u64 [s1 + 0x170] = a1\n 12786: a1 = u8 [a0 + 0x12]\n 12789: u64 [s1 + 0x180] = a1\n 12793: a1 = u8 [a0 + 0x13]\n 12796: u64 [s1 + 0x178] = a1\n 12800: a1 = u8 [a0 + 0x14]\n 12803: u64 [s1 + 0x1a8] = a1\n 12807: a1 = u8 [a0 + 0x15]\n 12810: u64 [s1 + 0x188] = a1\n 12814: a1 = u8 [a0 + 0x16]\n 12817: u64 [s1 + 0x1a0] = a1\n 12821: a0 = u8 [a0 + 0x17]\n 12824: u64 [s1 + 0x198] = a0\n 12828: a0 = 0x40\n 12831: a1 = 0x20\n 12834: ra = 120, jump @0\n      : @227 [@dyn 60] (gas: 100)\n 12839: a1 = u8 [a0 + 0x11]\n 12842: a2 = u8 [a0 + 0x10]\n 12845: a3 = u8 [a0 + 0x12]\n 12848: a4 = u8 [a0 + 0x13]\n 12851: a1 = a1 << 0x8\n 12854: a1 = a1 | a2\n 12857: a3 = a3 << 0x10\n 12860: a4 = a4 << 0x18\n 12863: a3 = a3 | a4\n 12866: a1 = a1 | a3\n 12869: a2 = u8 [a0 + 0x15]\n 12872: a3 = u8 [a0 + 0x14]\n 12875: a4 = u8 [a0 + 0x16]\n 12878: a5 = u8 [a0 + 0x17]\n 12881: a2 = a2 << 0x8\n 12884: a2 = a2 | a3\n 12887: a4 = a4 << 0x10\n 12890: a5 = a5 << 0x18\n 12893: a4 = a4 | a5\n 12896: a2 = a2 | a4\n 12899: a2 = a2 << 0x20\n 12902: t0 = a2 | a1\n 12905: a2 = u8 [a0 + 0x1]\n 12908: a3 = u8 [a0]\n 12910: a4 = u8 [a0 + 0x2]\n 12913: a5 = u8 [a0 + 0x3]\n 12916: a2 = a2 << 0x8\n 12919: a2 = a2 | a3\n 12922: a4 = a4 << 0x10\n 12925: a5 = a5 << 0x18\n 12928: a4 = a4 | a5\n 12931: a2 = a2 | a4\n 12934: a3 = u8 [a0 + 0x5]\n 12937: a4 = u8 [a0 + 0x4]\n 12940: a5 = u8 [a0 + 0x6]\n 12943: a1 = u8 [a0 + 0x7]\n 12946: a3 = a3 << 0x8\n 12949: a3 = a3 | a4\n 12952: a5 = a5 << 0x10\n 12955: a1 = a1 << 0x18\n 12958: a1 = a1 | a5\n 12961: a1 = a1 | a3\n 12964: a1 = a1 << 0x20\n 12967: t1 = a1 | a2\n 12970: a1 = u8 [a0 + 0x19]\n 12973: a3 = u8 [a0 + 0x18]\n 12976: a4 = u8 [a0 + 0x1a]\n 12979: a5 = u8 [a0 + 0x1b]\n 12982: a1 = a1 << 0x8\n 12985: a1 = a1 | a3\n 12988: a4 = a4 << 0x10\n 12991: a5 = a5 << 0x18\n 12994: a4 = a4 | a5\n 12997: a1 = a1 | a4\n 13000: a3 = u8 [a0 + 0x1d]\n 13003: a4 = u8 [a0 + 0x1c]\n 13006: a5 = u8 [a0 + 0x1e]\n 13009: a2 = u8 [a0 + 0x1f]\n 13012: a3 = a3 << 0x8\n 13015: a3 = a3 | a4\n 13018: a5 = a5 << 0x10\n 13021: a2 = a2 << 0x18\n 13024: a2 = a2 | a5\n 13027: a2 = a2 | a3\n 13030: a2 = a2 << 0x20\n 13033: a3 = a2 | a1\n 13036: a1 = u8 [a0 + 0x9]\n 13039: a2 = u8 [a0 + 0x8]\n 13042: a4 = u8 [a0 + 0xa]\n 13045: a5 = u8 [a0 + 0xb]\n 13048: a1 = a1 << 0x8\n 13051: a1 = a1 | a2\n 13054: a4 = a4 << 0x10\n 13057: a5 = a5 << 0x18\n 13060: a4 = a4 | a5\n 13063: a1 = a1 | a4\n 13066: a2 = u8 [a0 + 0xd]\n 13069: a4 = u8 [a0 + 0xc]\n 13072: a5 = u8 [a0 + 0xe]\n 13075: a0 = u8 [a0 + 0xf]\n 13078: a2 = a2 << 0x8\n 13081: a2 = a2 | a4\n 13084: a5 = a5 << 0x10\n 13087: a0 = a0 << 0x18\n 13090: a0 = a0 | a5\n 13093: a0 = a0 | a2\n 13096: a0 = a0 << 0x20\n 13099: a0 = a0 | a1\n 13102: a1 = reverse a0\n 13104: a0 = reverse a3\n 13106: a2 = reverse t1\n 13108: a3 = reverse t0\n 13110: a2 = a2 | a3\n 13113: a3 = a0 | a1\n 13116: a3 = a3 | a2\n 13119: a3 = a3 >> 0x20\n 13122: a1 = a1 | a2\n 13125: a1 = a1 << 0x20\n 13128: a1 = a1 | a3\n 13131: jump @174 if a1 != 0\n      : @228 (gas: 50)\n 13135: a1 = u64 [s1 + 0x130]\n 13139: a1 = a1 << 0x8\n 13142: a2 = u64 [s1 + 0x150]\n 13146: a1 = a1 | a2\n 13149: a2 = u64 [s1 + 0x140]\n 13153: a2 = a2 << 0x10\n 13156: a3 = u64 [s1 + 0x138]\n 13160: a3 = a3 << 0x18\n 13163: a2 = a2 | a3\n 13166: a1 = a1 | a2\n 13169: a2 = u64 [s1 + 0x148]\n 13173: a2 = a2 << 0x8\n 13176: a3 = u64 [s1 + 0x168]\n 13180: a2 = a2 | a3\n 13183: a3 = u64 [s1 + 0x160]\n 13187: a3 = a3 << 0x10\n 13190: a4 = u64 [s1 + 0x158]\n 13194: a4 = a4 << 0x18\n 13197: a3 = a3 | a4\n 13200: a2 = a2 | a3\n 13203: a2 = a2 << 0x20\n 13206: a1 = a1 | a2\n 13209: u64 [s1 + 0x168] = a1\n 13213: a1 = u64 [s1 + 0x170]\n 13217: a1 = a1 << 0x8\n 13220: a2 = u64 [s1 + 0x190]\n 13224: a1 = a1 | a2\n 13227: a2 = u64 [s1 + 0x180]\n 13231: a2 = a2 << 0x10\n 13234: a3 = u64 [s1 + 0x178]\n 13238: a3 = a3 << 0x18\n 13241: a2 = a2 | a3\n 13244: a1 = a1 | a2\n 13247: a2 = u64 [s1 + 0x188]\n 13251: a2 = a2 << 0x8\n 13254: a3 = u64 [s1 + 0x1a8]\n 13258: a2 = a2 | a3\n 13261: a3 = u64 [s1 + 0x1a0]\n 13265: a3 = a3 << 0x10\n 13268: a4 = u64 [s1 + 0x198]\n 13272: a4 = a4 << 0x18\n 13275: a3 = a3 | a4\n 13278: a2 = a2 | a3\n 13281: a2 = a2 << 0x20\n 13284: a1 = a1 | a2\n 13287: u64 [s1 + 0x1a0] = a1\n 13291: i32 a0 = a0 + 0\n 13293: u64 [s1 + 0x1a8] = a0\n 13297: a1 = 0x20\n 13300: ra = 122, jump @0\n      : @229 [@dyn 61] (gas: 68)\n 13305: a3 = u64 [s1 + 0x1a0]\n 13309: u8 [a0 + 0x10] = a3\n 13312: a2 = u64 [s1 + 0x1b8]\n 13316: a1 = a2 >> 0x38\n 13319: u8 [a0 + 0xf] = a1\n 13322: a1 = a2 >> 0x30\n 13325: u8 [a0 + 0xe] = a1\n 13328: a1 = a2 >> 0x28\n 13331: u8 [a0 + 0xd] = a1\n 13334: a1 = a2 >> 0x20\n 13337: u8 [a0 + 0xc] = a1\n 13340: a1 = a2 >> 0x18\n 13343: u8 [a0 + 0xb] = a1\n 13346: a1 = a2 >> 0x10\n 13349: u8 [a0 + 0xa] = a1\n 13352: a1 = a2 >> 0x8\n 13355: u8 [a0 + 0x9] = a1\n 13358: u8 [a0 + 0x8] = a2\n 13361: a2 = u64 [s1 + 0x1b0]\n 13365: a1 = a2 >> 0x38\n 13368: u8 [a0 + 0x7] = a1\n 13371: a1 = a2 >> 0x30\n 13374: u8 [a0 + 0x6] = a1\n 13377: a1 = a2 >> 0x28\n 13380: u8 [a0 + 0x5] = a1\n 13383: a1 = a2 >> 0x20\n 13386: u8 [a0 + 0x4] = a1\n 13389: a1 = a2 >> 0x18\n 13392: u8 [a0 + 0x3] = a1\n 13395: a1 = a2 >> 0x10\n 13398: u8 [a0 + 0x2] = a1\n 13401: a1 = a2 >> 0x8\n 13404: u8 [a0 + 0x1] = a1\n 13407: u8 [a0] = a2\n 13409: a2 = u64 [s1 + 0x168]\n 13413: u8 [a0 + 0x18] = a2\n 13416: a1 = a3 >> 0x38\n 13419: u8 [a0 + 0x17] = a1\n 13422: a1 = a3 >> 0x30\n 13425: u8 [a0 + 0x16] = a1\n 13428: a1 = a3 >> 0x28\n 13431: u8 [a0 + 0x15] = a1\n 13434: a1 = a3 >> 0x20\n 13437: u8 [a0 + 0x14] = a1\n 13440: a1 = a3 >> 0x18\n 13443: u8 [a0 + 0x13] = a1\n 13446: a1 = a3 >> 0x10\n 13449: u8 [a0 + 0x12] = a1\n 13452: a1 = a3 >> 0x8\n 13455: u8 [a0 + 0x11] = a1\n 13458: a1 = a2 >> 0x38\n 13461: u8 [a0 + 0x1f] = a1\n 13464: a1 = a2 >> 0x30\n 13467: u8 [a0 + 0x1e] = a1\n 13470: a1 = a2 >> 0x28\n 13473: u8 [a0 + 0x1d] = a1\n 13476: a1 = a2 >> 0x20\n 13479: u8 [a0 + 0x1c] = a1\n 13482: a1 = a2 >> 0x18\n 13485: u8 [a0 + 0x1b] = a1\n 13488: a1 = a2 >> 0x10\n 13491: u8 [a0 + 0x1a] = a1\n 13494: a1 = a2 >> 0x8\n 13497: u8 [a0 + 0x19] = a1\n 13500: a1 = 0x20\n 13503: a0 = u64 [s1 + 0x1a8]\n 13507: ra = 0x9c\n 13511: jump @0\n      : @230 (gas: 3)\n 13514: a0 = 0x40\n 13517: a1 = 0x20\n 13520: ra = 124, jump @0\n      : @231 [@dyn 62] (gas: 98)\n 13525: a1 = u8 [a0 + 0x11]\n 13528: a2 = u8 [a0 + 0x10]\n 13531: a3 = u8 [a0 + 0x12]\n 13534: a4 = u8 [a0 + 0x13]\n 13537: a1 = a1 << 0x8\n 13540: a1 = a1 | a2\n 13543: a3 = a3 << 0x10\n 13546: a4 = a4 << 0x18\n 13549: a3 = a3 | a4\n 13552: a1 = a1 | a3\n 13555: a2 = u8 [a0 + 0x15]\n 13558: a3 = u8 [a0 + 0x14]\n 13561: a4 = u8 [a0 + 0x16]\n 13564: a5 = u8 [a0 + 0x17]\n 13567: a2 = a2 << 0x8\n 13570: a2 = a2 | a3\n 13573: a4 = a4 << 0x10\n 13576: a5 = a5 << 0x18\n 13579: a4 = a4 | a5\n 13582: a2 = a2 | a4\n 13585: a2 = a2 << 0x20\n 13588: t0 = a2 | a1\n 13591: a2 = u8 [a0 + 0x1]\n 13594: a3 = u8 [a0]\n 13596: a4 = u8 [a0 + 0x2]\n 13599: a5 = u8 [a0 + 0x3]\n 13602: a2 = a2 << 0x8\n 13605: a2 = a2 | a3\n 13608: a4 = a4 << 0x10\n 13611: a5 = a5 << 0x18\n 13614: a4 = a4 | a5\n 13617: a2 = a2 | a4\n 13620: a3 = u8 [a0 + 0x5]\n 13623: a4 = u8 [a0 + 0x4]\n 13626: a5 = u8 [a0 + 0x6]\n 13629: a1 = u8 [a0 + 0x7]\n 13632: a3 = a3 << 0x8\n 13635: a3 = a3 | a4\n 13638: a5 = a5 << 0x10\n 13641: a1 = a1 << 0x18\n 13644: a1 = a1 | a5\n 13647: a1 = a1 | a3\n 13650: a1 = a1 << 0x20\n 13653: t1 = a1 | a2\n 13656: a1 = u8 [a0 + 0x19]\n 13659: a3 = u8 [a0 + 0x18]\n 13662: a4 = u8 [a0 + 0x1a]\n 13665: a5 = u8 [a0 + 0x1b]\n 13668: a1 = a1 << 0x8\n 13671: a1 = a1 | a3\n 13674: a4 = a4 << 0x10\n 13677: a5 = a5 << 0x18\n 13680: a4 = a4 | a5\n 13683: a1 = a1 | a4\n 13686: a3 = u8 [a0 + 0x1d]\n 13689: a4 = u8 [a0 + 0x1c]\n 13692: a5 = u8 [a0 + 0x1e]\n 13695: a2 = u8 [a0 + 0x1f]\n 13698: a3 = a3 << 0x8\n 13701: a3 = a3 | a4\n 13704: a5 = a5 << 0x10\n 13707: a2 = a2 << 0x18\n 13710: a2 = a2 | a5\n 13713: a2 = a2 | a3\n 13716: a2 = a2 << 0x20\n 13719: a3 = a2 | a1\n 13722: a1 = u8 [a0 + 0x9]\n 13725: a2 = u8 [a0 + 0x8]\n 13728: a4 = u8 [a0 + 0xa]\n 13731: a5 = u8 [a0 + 0xb]\n 13734: a1 = a1 << 0x8\n 13737: a1 = a1 | a2\n 13740: a4 = a4 << 0x10\n 13743: a5 = a5 << 0x18\n 13746: a4 = a4 | a5\n 13749: a1 = a1 | a4\n 13752: a2 = u8 [a0 + 0xd]\n 13755: a4 = u8 [a0 + 0xc]\n 13758: a5 = u8 [a0 + 0xe]\n 13761: a0 = u8 [a0 + 0xf]\n 13764: a2 = a2 << 0x8\n 13767: a2 = a2 | a4\n 13770: a5 = a5 << 0x10\n 13773: a0 = a0 << 0x18\n 13776: a0 = a0 | a5\n 13779: a0 = a0 | a2\n 13782: a0 = a0 << 0x20\n 13785: a0 = a0 | a1\n 13788: a0 = reverse a0\n 13790: u64 [s1 + 0x1b8] = a0\n 13794: a0 = reverse a3\n 13796: u64 [s1 + 0x1a0] = a0\n 13800: a0 = reverse t1\n 13802: u64 [s1 + 0x1b0] = a0\n 13806: a0 = reverse t0\n 13808: u64 [s1 + 0x1a8] = a0\n 13812: ecalli 8 // 'return_data_size'\n 13814: fallthrough\n      : @232 (gas: 12)\n 13815: a3 = u64 [s1 + 0x1a0]\n 13819: a1 = u64 [s1 + 0x1b0]\n 13823: a2 = u64 [s1 + 0x1a8]\n 13827: a1 = a1 | a2\n 13830: a4 = u64 [s1 + 0x1b8]\n 13834: a2 = a3 | a4\n 13837: a2 = a2 | a1\n 13840: a2 = a2 >> 0x20\n 13843: a1 = a1 | a4\n 13846: a1 = a1 << 0x20\n 13849: a1 = a1 | a2\n 13852: jump @234 if a1 == 0\n      : @233 (gas: 1)\n 13855: jump @174\n      : @234 (gas: 3)\n 13858: a2 = a0\n 13860: a0 = a0 >> 0x20\n 13863: jump @236 if a0 == 0\n      : @235 (gas: 1)\n 13866: jump @174\n      : @236 (gas: 6)\n 13869: i32 a0 = a3 + 0\n 13871: i32 a1 = a2 + 0\n 13873: u64 [s1 + 0x1b8] = a1\n 13877: u64 [s1 + 0x1a8] = a0\n 13881: u64 [s1 + 0x1b0] = a2\n 13885: ra = 126, jump @0\n      : @237 [@dyn 63] (gas: 8)\n 13890: a1 = u64 [s1 + 0x1b0]\n 13894: u32 [s1 + 0x5e0] = a1\n 13898: i32 a0 = a0 + 0\n 13900: i32 a1 = s1 + 0x5e0\n 13904: a2 = 0\n 13906: ecalli 7 // 'return_data_copy'\n 13908: a0 = i32 [s1 + 0x5e0]\n 13912: jump @203\n      : @238 (gas: 3)\n 13915: a0 = 0x40\n 13918: a1 = 0x20\n 13921: ra = 128, jump @0\n      : @239 [@dyn 64] (gas: 98)\n 13927: a1 = u8 [a0 + 0x11]\n 13930: a2 = u8 [a0 + 0x10]\n 13933: a3 = u8 [a0 + 0x12]\n 13936: a4 = u8 [a0 + 0x13]\n 13939: a1 = a1 << 0x8\n 13942: a1 = a1 | a2\n 13945: a3 = a3 << 0x10\n 13948: a4 = a4 << 0x18\n 13951: a3 = a3 | a4\n 13954: a1 = a1 | a3\n 13957: a2 = u8 [a0 + 0x15]\n 13960: a3 = u8 [a0 + 0x14]\n 13963: a4 = u8 [a0 + 0x16]\n 13966: a5 = u8 [a0 + 0x17]\n 13969: a2 = a2 << 0x8\n 13972: a2 = a2 | a3\n 13975: a4 = a4 << 0x10\n 13978: a5 = a5 << 0x18\n 13981: a4 = a4 | a5\n 13984: a2 = a2 | a4\n 13987: a2 = a2 << 0x20\n 13990: t0 = a2 | a1\n 13993: a2 = u8 [a0 + 0x1]\n 13996: a3 = u8 [a0]\n 13998: a4 = u8 [a0 + 0x2]\n 14001: a5 = u8 [a0 + 0x3]\n 14004: a2 = a2 << 0x8\n 14007: a2 = a2 | a3\n 14010: a4 = a4 << 0x10\n 14013: a5 = a5 << 0x18\n 14016: a4 = a4 | a5\n 14019: a2 = a2 | a4\n 14022: a3 = u8 [a0 + 0x5]\n 14025: a4 = u8 [a0 + 0x4]\n 14028: a5 = u8 [a0 + 0x6]\n 14031: a1 = u8 [a0 + 0x7]\n 14034: a3 = a3 << 0x8\n 14037: a3 = a3 | a4\n 14040: a5 = a5 << 0x10\n 14043: a1 = a1 << 0x18\n 14046: a1 = a1 | a5\n 14049: a1 = a1 | a3\n 14052: a1 = a1 << 0x20\n 14055: t1 = a1 | a2\n 14058: a1 = u8 [a0 + 0x19]\n 14061: a3 = u8 [a0 + 0x18]\n 14064: a4 = u8 [a0 + 0x1a]\n 14067: a5 = u8 [a0 + 0x1b]\n 14070: a1 = a1 << 0x8\n 14073: a1 = a1 | a3\n 14076: a4 = a4 << 0x10\n 14079: a5 = a5 << 0x18\n 14082: a4 = a4 | a5\n 14085: a1 = a1 | a4\n 14088: a3 = u8 [a0 + 0x1d]\n 14091: a4 = u8 [a0 + 0x1c]\n 14094: a5 = u8 [a0 + 0x1e]\n 14097: a2 = u8 [a0 + 0x1f]\n 14100: a3 = a3 << 0x8\n 14103: a3 = a3 | a4\n 14106: a5 = a5 << 0x10\n 14109: a2 = a2 << 0x18\n 14112: a2 = a2 | a5\n 14115: a2 = a2 | a3\n 14118: a2 = a2 << 0x20\n 14121: a3 = a2 | a1\n 14124: a1 = u8 [a0 + 0x9]\n 14127: a2 = u8 [a0 + 0x8]\n 14130: a4 = u8 [a0 + 0xa]\n 14133: a5 = u8 [a0 + 0xb]\n 14136: a1 = a1 << 0x8\n 14139: a1 = a1 | a2\n 14142: a4 = a4 << 0x10\n 14145: a5 = a5 << 0x18\n 14148: a4 = a4 | a5\n 14151: a1 = a1 | a4\n 14154: a2 = u8 [a0 + 0xd]\n 14157: a4 = u8 [a0 + 0xc]\n 14160: a5 = u8 [a0 + 0xe]\n 14163: a0 = u8 [a0 + 0xf]\n 14166: a2 = a2 << 0x8\n 14169: a2 = a2 | a4\n 14172: a5 = a5 << 0x10\n 14175: a0 = a0 << 0x18\n 14178: a0 = a0 | a5\n 14181: a0 = a0 | a2\n 14184: a0 = a0 << 0x20\n 14187: a0 = a0 | a1\n 14190: a0 = reverse a0\n 14192: u64 [s1 + 0x1b8] = a0\n 14196: a0 = reverse a3\n 14198: u64 [s1 + 0x1a0] = a0\n 14202: a0 = reverse t1\n 14204: u64 [s1 + 0x1b0] = a0\n 14208: a0 = reverse t0\n 14210: u64 [s1 + 0x1a8] = a0\n 14214: ecalli 8 // 'return_data_size'\n 14216: fallthrough\n      : @240 (gas: 12)\n 14217: a3 = u64 [s1 + 0x1a0]\n 14221: a1 = u64 [s1 + 0x1b0]\n 14225: a2 = u64 [s1 + 0x1a8]\n 14229: a1 = a1 | a2\n 14232: a4 = u64 [s1 + 0x1b8]\n 14236: a2 = a3 | a4\n 14239: a2 = a2 | a1\n 14242: a2 = a2 >> 0x20\n 14245: a1 = a1 | a4\n 14248: a1 = a1 << 0x20\n 14251: a1 = a1 | a2\n 14254: jump @242 if a1 == 0\n      : @241 (gas: 1)\n 14257: jump @174\n      : @242 (gas: 3)\n 14260: a2 = a0\n 14262: a0 = a0 >> 0x20\n 14265: jump @244 if a0 == 0\n      : @243 (gas: 1)\n 14268: jump @174\n      : @244 (gas: 6)\n 14271: i32 a0 = a3 + 0\n 14273: i32 a1 = a2 + 0\n 14275: u64 [s1 + 0x1b8] = a1\n 14279: u64 [s1 + 0x1a8] = a0\n 14283: u64 [s1 + 0x1b0] = a2\n 14287: ra = 130, jump @0\n      : @245 [@dyn 65] (gas: 8)\n 14293: a1 = u64 [s1 + 0x1b0]\n 14297: u32 [s1 + 0x540] = a1\n 14301: i32 a0 = a0 + 0\n 14303: i32 a1 = s1 + 0x540\n 14307: a2 = 0\n 14309: ecalli 7 // 'return_data_copy'\n 14311: a0 = i32 [s1 + 0x540]\n 14315: jump @203\n      : @246 (gas: 15)\n 14318: u64 [s1 + 600] = 0\n 14322: u64 [s1 + 592] = 0\n 14326: u64 [s1 + 584] = 0\n 14330: u64 [s1 + 576] = 0x20\n 14335: a0 = u64 [s1 + 0x188]\n 14339: u64 [s1 + 0x260] = a0\n 14343: a0 = u64 [s1 + 0x180]\n 14347: u64 [s1 + 0x268] = a0\n 14351: a0 = u64 [s1 + 0x190]\n 14355: u64 [s1 + 0x270] = a0\n 14359: a0 = s1 + 0x260\n 14363: a1 = s1 + 0x240\n 14367: a2 = u64 [s1 + 0x198]\n 14371: u64 [s1 + 0x278] = a2\n 14375: ra = 132, jump @287\n      : @247 [@dyn 66] (gas: 3)\n 14381: a1 = 0x20\n 14384: a0 = u64 [s1 + 0x1b8]\n 14388: ra = 134, jump @0\n      : @248 [@dyn 67] (gas: 67)\n 14394: a1 = u8 [a0 + 0x18]\n 14397: u64 [s1 + 0xe0] = a1\n 14401: a1 = u8 [a0 + 0x19]\n 14404: u64 [s1 + 0xc0] = a1\n 14408: a1 = u8 [a0 + 0x1a]\n 14411: u64 [s1 + 0xd0] = a1\n 14415: a1 = u8 [a0 + 0x1b]\n 14418: u64 [s1 + 0xc8] = a1\n 14422: a1 = u8 [a0 + 0x1c]\n 14425: u64 [s1 + 0xf8] = a1\n 14429: a1 = u8 [a0 + 0x1d]\n 14432: u64 [s1 + 0xd8] = a1\n 14436: a1 = u8 [a0 + 0x1e]\n 14439: u64 [s1 + 0xf0] = a1\n 14443: a1 = u8 [a0 + 0x1f]\n 14446: u64 [s1 + 0xe8] = a1\n 14450: a1 = u8 [a0 + 0x10]\n 14453: u64 [s1 + 0x120] = a1\n 14457: a1 = u8 [a0 + 0x11]\n 14460: u64 [s1 + 0x100] = a1\n 14464: a1 = u8 [a0 + 0x12]\n 14467: u64 [s1 + 0x110] = a1\n 14471: a1 = u8 [a0 + 0x13]\n 14474: u64 [s1 + 0x108] = a1\n 14478: a1 = u8 [a0 + 0x14]\n 14481: u64 [s1 + 0x138] = a1\n 14485: a1 = u8 [a0 + 0x15]\n 14488: u64 [s1 + 0x118] = a1\n 14492: a1 = u8 [a0 + 0x16]\n 14495: u64 [s1 + 0x130] = a1\n 14499: a1 = u8 [a0 + 0x17]\n 14502: u64 [s1 + 0x128] = a1\n 14506: a1 = u8 [a0 + 0x8]\n 14509: u64 [s1 + 0x160] = a1\n 14513: a1 = u8 [a0 + 0x9]\n 14516: u64 [s1 + 0x140] = a1\n 14520: a1 = u8 [a0 + 0xa]\n 14523: u64 [s1 + 0x150] = a1\n 14527: a1 = u8 [a0 + 0xb]\n 14530: u64 [s1 + 0x148] = a1\n 14534: a1 = u8 [a0 + 0xc]\n 14537: u64 [s1 + 0x178] = a1\n 14541: a1 = u8 [a0 + 0xd]\n 14544: u64 [s1 + 0x158] = a1\n 14548: a1 = u8 [a0 + 0xe]\n 14551: u64 [s1 + 0x170] = a1\n 14555: a1 = u8 [a0 + 0xf]\n 14558: u64 [s1 + 0x168] = a1\n 14562: a1 = u8 [a0]\n 14564: u64 [s1 + 0x1a0] = a1\n 14568: a1 = u8 [a0 + 0x1]\n 14571: u64 [s1 + 0x180] = a1\n 14575: a1 = u8 [a0 + 0x2]\n 14578: u64 [s1 + 0x190] = a1\n 14582: a1 = u8 [a0 + 0x3]\n 14585: u64 [s1 + 0x188] = a1\n 14589: a1 = u8 [a0 + 0x4]\n 14592: u64 [s1 + 0x1b8] = a1\n 14596: a1 = u8 [a0 + 0x5]\n 14599: u64 [s1 + 0x198] = a1\n 14603: a1 = u8 [a0 + 0x6]\n 14606: u64 [s1 + 0x1b0] = a1\n 14610: a0 = u8 [a0 + 0x7]\n 14613: u64 [s1 + 0x1a8] = a0\n 14617: a0 = 0x40\n 14620: a1 = 0x20\n 14623: ra = 136, jump @0\n      : @249 [@dyn 68] (gas: 100)\n 14629: a1 = u8 [a0 + 0x11]\n 14632: a2 = u8 [a0 + 0x10]\n 14635: a3 = u8 [a0 + 0x12]\n 14638: a4 = u8 [a0 + 0x13]\n 14641: a1 = a1 << 0x8\n 14644: a1 = a1 | a2\n 14647: a3 = a3 << 0x10\n 14650: a4 = a4 << 0x18\n 14653: a3 = a3 | a4\n 14656: a1 = a1 | a3\n 14659: a2 = u8 [a0 + 0x15]\n 14662: a3 = u8 [a0 + 0x14]\n 14665: a4 = u8 [a0 + 0x16]\n 14668: a5 = u8 [a0 + 0x17]\n 14671: a2 = a2 << 0x8\n 14674: a2 = a2 | a3\n 14677: a4 = a4 << 0x10\n 14680: a5 = a5 << 0x18\n 14683: a4 = a4 | a5\n 14686: a2 = a2 | a4\n 14689: a2 = a2 << 0x20\n 14692: t0 = a2 | a1\n 14695: a2 = u8 [a0 + 0x1]\n 14698: a3 = u8 [a0]\n 14700: a4 = u8 [a0 + 0x2]\n 14703: a5 = u8 [a0 + 0x3]\n 14706: a2 = a2 << 0x8\n 14709: a2 = a2 | a3\n 14712: a4 = a4 << 0x10\n 14715: a5 = a5 << 0x18\n 14718: a4 = a4 | a5\n 14721: a2 = a2 | a4\n 14724: a3 = u8 [a0 + 0x5]\n 14727: a4 = u8 [a0 + 0x4]\n 14730: a5 = u8 [a0 + 0x6]\n 14733: a1 = u8 [a0 + 0x7]\n 14736: a3 = a3 << 0x8\n 14739: a3 = a3 | a4\n 14742: a5 = a5 << 0x10\n 14745: a1 = a1 << 0x18\n 14748: a1 = a1 | a5\n 14751: a1 = a1 | a3\n 14754: a1 = a1 << 0x20\n 14757: t1 = a1 | a2\n 14760: a1 = u8 [a0 + 0x19]\n 14763: a3 = u8 [a0 + 0x18]\n 14766: a4 = u8 [a0 + 0x1a]\n 14769: a5 = u8 [a0 + 0x1b]\n 14772: a1 = a1 << 0x8\n 14775: a1 = a1 | a3\n 14778: a4 = a4 << 0x10\n 14781: a5 = a5 << 0x18\n 14784: a4 = a4 | a5\n 14787: a1 = a1 | a4\n 14790: a3 = u8 [a0 + 0x1d]\n 14793: a4 = u8 [a0 + 0x1c]\n 14796: a5 = u8 [a0 + 0x1e]\n 14799: a2 = u8 [a0 + 0x1f]\n 14802: a3 = a3 << 0x8\n 14805: a3 = a3 | a4\n 14808: a5 = a5 << 0x10\n 14811: a2 = a2 << 0x18\n 14814: a2 = a2 | a5\n 14817: a2 = a2 | a3\n 14820: a2 = a2 << 0x20\n 14823: a3 = a2 | a1\n 14826: a1 = u8 [a0 + 0x9]\n 14829: a2 = u8 [a0 + 0x8]\n 14832: a4 = u8 [a0 + 0xa]\n 14835: a5 = u8 [a0 + 0xb]\n 14838: a1 = a1 << 0x8\n 14841: a1 = a1 | a2\n 14844: a4 = a4 << 0x10\n 14847: a5 = a5 << 0x18\n 14850: a4 = a4 | a5\n 14853: a1 = a1 | a4\n 14856: a2 = u8 [a0 + 0xd]\n 14859: a4 = u8 [a0 + 0xc]\n 14862: a5 = u8 [a0 + 0xe]\n 14865: a0 = u8 [a0 + 0xf]\n 14868: a2 = a2 << 0x8\n 14871: a2 = a2 | a4\n 14874: a5 = a5 << 0x10\n 14877: a0 = a0 << 0x18\n 14880: a0 = a0 | a5\n 14883: a0 = a0 | a2\n 14886: a0 = a0 << 0x20\n 14889: a0 = a0 | a1\n 14892: a1 = reverse a0\n 14894: a0 = reverse a3\n 14896: a2 = reverse t1\n 14898: a3 = reverse t0\n 14900: a2 = a2 | a3\n 14903: a3 = a0 | a1\n 14906: a3 = a3 | a2\n 14909: a3 = a3 >> 0x20\n 14912: a1 = a1 | a2\n 14915: a1 = a1 << 0x20\n 14918: a1 = a1 | a3\n 14921: jump @251 if a1 == 0\n      : @250 (gas: 1)\n 14924: jump @174\n      : @251 (gas: 96)\n 14927: a1 = u64 [s1 + 0xc0]\n 14931: a1 = a1 << 0x8\n 14934: a2 = u64 [s1 + 0xe0]\n 14938: a1 = a1 | a2\n 14941: a2 = u64 [s1 + 0xd0]\n 14945: a2 = a2 << 0x10\n 14948: a3 = u64 [s1 + 0xc8]\n 14952: a3 = a3 << 0x18\n 14955: a2 = a2 | a3\n 14958: a1 = a1 | a2\n 14961: a2 = u64 [s1 + 0xd8]\n 14965: a2 = a2 << 0x8\n 14968: a3 = u64 [s1 + 0xf8]\n 14972: a2 = a2 | a3\n 14975: a3 = u64 [s1 + 0xf0]\n 14979: a3 = a3 << 0x10\n 14982: a4 = u64 [s1 + 0xe8]\n 14986: a4 = a4 << 0x18\n 14989: a3 = a3 | a4\n 14992: a2 = a2 | a3\n 14995: a2 = a2 << 0x20\n 14998: a1 = a1 | a2\n 15001: u64 [s1 + 0xf8] = a1\n 15005: a1 = u64 [s1 + 0x100]\n 15009: a1 = a1 << 0x8\n 15012: a2 = u64 [s1 + 0x120]\n 15016: a1 = a1 | a2\n 15019: a2 = u64 [s1 + 0x110]\n 15023: a2 = a2 << 0x10\n 15026: a3 = u64 [s1 + 0x108]\n 15030: a3 = a3 << 0x18\n 15033: a2 = a2 | a3\n 15036: a1 = a1 | a2\n 15039: a2 = u64 [s1 + 0x118]\n 15043: a2 = a2 << 0x8\n 15046: a3 = u64 [s1 + 0x138]\n 15050: a2 = a2 | a3\n 15053: a3 = u64 [s1 + 0x130]\n 15057: a3 = a3 << 0x10\n 15060: a4 = u64 [s1 + 0x128]\n 15064: a4 = a4 << 0x18\n 15067: a3 = a3 | a4\n 15070: a2 = a2 | a3\n 15073: a2 = a2 << 0x20\n 15076: a1 = a1 | a2\n 15079: u64 [s1 + 0x138] = a1\n 15083: a1 = u64 [s1 + 0x140]\n 15087: a1 = a1 << 0x8\n 15090: a2 = u64 [s1 + 0x160]\n 15094: a1 = a1 | a2\n 15097: a2 = u64 [s1 + 0x150]\n 15101: a2 = a2 << 0x10\n 15104: a3 = u64 [s1 + 0x148]\n 15108: a3 = a3 << 0x18\n 15111: a2 = a2 | a3\n 15114: a1 = a1 | a2\n 15117: a2 = u64 [s1 + 0x158]\n 15121: a2 = a2 << 0x8\n 15124: a3 = u64 [s1 + 0x178]\n 15128: a2 = a2 | a3\n 15131: a3 = u64 [s1 + 0x170]\n 15135: a3 = a3 << 0x10\n 15138: a4 = u64 [s1 + 0x168]\n 15142: a4 = a4 << 0x18\n 15145: a3 = a3 | a4\n 15148: a2 = a2 | a3\n 15151: a2 = a2 << 0x20\n 15154: a1 = a1 | a2\n 15157: u64 [s1 + 0x178] = a1\n 15161: a1 = u64 [s1 + 0x180]\n 15165: a1 = a1 << 0x8\n 15168: a2 = u64 [s1 + 0x1a0]\n 15172: a1 = a1 | a2\n 15175: a2 = u64 [s1 + 0x190]\n 15179: a2 = a2 << 0x10\n 15182: a3 = u64 [s1 + 0x188]\n 15186: a3 = a3 << 0x18\n 15189: a2 = a2 | a3\n 15192: a1 = a1 | a2\n 15195: a2 = u64 [s1 + 0x198]\n 15199: a2 = a2 << 0x8\n 15202: a3 = u64 [s1 + 0x1b8]\n 15206: a2 = a2 | a3\n 15209: a3 = u64 [s1 + 0x1b0]\n 15213: a3 = a3 << 0x10\n 15216: a4 = u64 [s1 + 0x1a8]\n 15220: a4 = a4 << 0x18\n 15223: a3 = a3 | a4\n 15226: a2 = a2 | a3\n 15229: a2 = a2 << 0x20\n 15232: a1 = a1 | a2\n 15235: u64 [s1 + 0x1b0] = a1\n 15239: i32 a0 = a0 + 0\n 15241: u64 [s1 + 0x1b8] = a0\n 15245: a1 = 0x20\n 15248: ra = 138, jump @0\n      : @252 [@dyn 69] (gas: 68)\n 15254: a3 = u64 [s1 + 0x138]\n 15258: u8 [a0 + 0x10] = a3\n 15261: a2 = u64 [s1 + 0x178]\n 15265: a1 = a2 >> 0x38\n 15268: u8 [a0 + 0xf] = a1\n 15271: a1 = a2 >> 0x30\n 15274: u8 [a0 + 0xe] = a1\n 15277: a1 = a2 >> 0x28\n 15280: u8 [a0 + 0xd] = a1\n 15283: a1 = a2 >> 0x20\n 15286: u8 [a0 + 0xc] = a1\n 15289: a1 = a2 >> 0x18\n 15292: u8 [a0 + 0xb] = a1\n 15295: a1 = a2 >> 0x10\n 15298: u8 [a0 + 0xa] = a1\n 15301: a1 = a2 >> 0x8\n 15304: u8 [a0 + 0x9] = a1\n 15307: u8 [a0 + 0x8] = a2\n 15310: a2 = u64 [s1 + 0x1b0]\n 15314: a1 = a2 >> 0x38\n 15317: u8 [a0 + 0x7] = a1\n 15320: a1 = a2 >> 0x30\n 15323: u8 [a0 + 0x6] = a1\n 15326: a1 = a2 >> 0x28\n 15329: u8 [a0 + 0x5] = a1\n 15332: a1 = a2 >> 0x20\n 15335: u8 [a0 + 0x4] = a1\n 15338: a1 = a2 >> 0x18\n 15341: u8 [a0 + 0x3] = a1\n 15344: a1 = a2 >> 0x10\n 15347: u8 [a0 + 0x2] = a1\n 15350: a1 = a2 >> 0x8\n 15353: u8 [a0 + 0x1] = a1\n 15356: u8 [a0] = a2\n 15358: a2 = u64 [s1 + 0xf8]\n 15362: u8 [a0 + 0x18] = a2\n 15365: a1 = a3 >> 0x38\n 15368: u8 [a0 + 0x17] = a1\n 15371: a1 = a3 >> 0x30\n 15374: u8 [a0 + 0x16] = a1\n 15377: a1 = a3 >> 0x28\n 15380: u8 [a0 + 0x15] = a1\n 15383: a1 = a3 >> 0x20\n 15386: u8 [a0 + 0x14] = a1\n 15389: a1 = a3 >> 0x18\n 15392: u8 [a0 + 0x13] = a1\n 15395: a1 = a3 >> 0x10\n 15398: u8 [a0 + 0x12] = a1\n 15401: a1 = a3 >> 0x8\n 15404: u8 [a0 + 0x11] = a1\n 15407: a1 = a2 >> 0x38\n 15410: u8 [a0 + 0x1f] = a1\n 15413: a1 = a2 >> 0x30\n 15416: u8 [a0 + 0x1e] = a1\n 15419: a1 = a2 >> 0x28\n 15422: u8 [a0 + 0x1d] = a1\n 15425: a1 = a2 >> 0x20\n 15428: u8 [a0 + 0x1c] = a1\n 15431: a1 = a2 >> 0x18\n 15434: u8 [a0 + 0x1b] = a1\n 15437: a1 = a2 >> 0x10\n 15440: u8 [a0 + 0x1a] = a1\n 15443: a1 = a2 >> 0x8\n 15446: u8 [a0 + 0x19] = a1\n 15449: a1 = 0x20\n 15452: a0 = u64 [s1 + 0x1b8]\n 15456: ra = 0x9c\n 15460: jump @0\n      : @253 (gas: 3)\n 15463: a0 = 0x40\n 15466: a1 = 0x20\n 15469: ra = 140, jump @0\n      : @254 [@dyn 70] (gas: 98)\n 15475: a1 = u8 [a0 + 0x11]\n 15478: a2 = u8 [a0 + 0x10]\n 15481: a3 = u8 [a0 + 0x12]\n 15484: a4 = u8 [a0 + 0x13]\n 15487: a1 = a1 << 0x8\n 15490: a1 = a1 | a2\n 15493: a3 = a3 << 0x10\n 15496: a4 = a4 << 0x18\n 15499: a3 = a3 | a4\n 15502: a1 = a1 | a3\n 15505: a2 = u8 [a0 + 0x15]\n 15508: a3 = u8 [a0 + 0x14]\n 15511: a4 = u8 [a0 + 0x16]\n 15514: a5 = u8 [a0 + 0x17]\n 15517: a2 = a2 << 0x8\n 15520: a2 = a2 | a3\n 15523: a4 = a4 << 0x10\n 15526: a5 = a5 << 0x18\n 15529: a4 = a4 | a5\n 15532: a2 = a2 | a4\n 15535: a2 = a2 << 0x20\n 15538: t0 = a2 | a1\n 15541: a2 = u8 [a0 + 0x1]\n 15544: a3 = u8 [a0]\n 15546: a4 = u8 [a0 + 0x2]\n 15549: a5 = u8 [a0 + 0x3]\n 15552: a2 = a2 << 0x8\n 15555: a2 = a2 | a3\n 15558: a4 = a4 << 0x10\n 15561: a5 = a5 << 0x18\n 15564: a4 = a4 | a5\n 15567: a2 = a2 | a4\n 15570: a3 = u8 [a0 + 0x5]\n 15573: a4 = u8 [a0 + 0x4]\n 15576: a5 = u8 [a0 + 0x6]\n 15579: a1 = u8 [a0 + 0x7]\n 15582: a3 = a3 << 0x8\n 15585: a3 = a3 | a4\n 15588: a5 = a5 << 0x10\n 15591: a1 = a1 << 0x18\n 15594: a1 = a1 | a5\n 15597: a1 = a1 | a3\n 15600: a1 = a1 << 0x20\n 15603: t1 = a1 | a2\n 15606: a1 = u8 [a0 + 0x19]\n 15609: a3 = u8 [a0 + 0x18]\n 15612: a4 = u8 [a0 + 0x1a]\n 15615: a5 = u8 [a0 + 0x1b]\n 15618: a1 = a1 << 0x8\n 15621: a1 = a1 | a3\n 15624: a4 = a4 << 0x10\n 15627: a5 = a5 << 0x18\n 15630: a4 = a4 | a5\n 15633: a1 = a1 | a4\n 15636: a3 = u8 [a0 + 0x1d]\n 15639: a4 = u8 [a0 + 0x1c]\n 15642: a5 = u8 [a0 + 0x1e]\n 15645: a2 = u8 [a0 + 0x1f]\n 15648: a3 = a3 << 0x8\n 15651: a3 = a3 | a4\n 15654: a5 = a5 << 0x10\n 15657: a2 = a2 << 0x18\n 15660: a2 = a2 | a5\n 15663: a2 = a2 | a3\n 15666: a2 = a2 << 0x20\n 15669: a3 = a2 | a1\n 15672: a1 = u8 [a0 + 0x9]\n 15675: a2 = u8 [a0 + 0x8]\n 15678: a4 = u8 [a0 + 0xa]\n 15681: a5 = u8 [a0 + 0xb]\n 15684: a1 = a1 << 0x8\n 15687: a1 = a1 | a2\n 15690: a4 = a4 << 0x10\n 15693: a5 = a5 << 0x18\n 15696: a4 = a4 | a5\n 15699: a1 = a1 | a4\n 15702: a2 = u8 [a0 + 0xd]\n 15705: a4 = u8 [a0 + 0xc]\n 15708: a5 = u8 [a0 + 0xe]\n 15711: a0 = u8 [a0 + 0xf]\n 15714: a2 = a2 << 0x8\n 15717: a2 = a2 | a4\n 15720: a5 = a5 << 0x10\n 15723: a0 = a0 << 0x18\n 15726: a0 = a0 | a5\n 15729: a0 = a0 | a2\n 15732: a0 = a0 << 0x20\n 15735: a0 = a0 | a1\n 15738: a0 = reverse a0\n 15740: u64 [s1 + 0x1b8] = a0\n 15744: a0 = reverse a3\n 15746: u64 [s1 + 0x1a0] = a0\n 15750: a0 = reverse t1\n 15752: u64 [s1 + 0x1b0] = a0\n 15756: a0 = reverse t0\n 15758: u64 [s1 + 0x1a8] = a0\n 15762: ecalli 8 // 'return_data_size'\n 15764: fallthrough\n      : @255 (gas: 12)\n 15765: a3 = u64 [s1 + 0x1a0]\n 15769: a1 = u64 [s1 + 0x1b0]\n 15773: a2 = u64 [s1 + 0x1a8]\n 15777: a1 = a1 | a2\n 15780: a4 = u64 [s1 + 0x1b8]\n 15784: a2 = a3 | a4\n 15787: a2 = a2 | a1\n 15790: a2 = a2 >> 0x20\n 15793: a1 = a1 | a4\n 15796: a1 = a1 << 0x20\n 15799: a1 = a1 | a2\n 15802: jump @257 if a1 == 0\n      : @256 (gas: 1)\n 15805: jump @174\n      : @257 (gas: 3)\n 15808: a2 = a0\n 15810: a0 = a0 >> 0x20\n 15813: jump @259 if a0 == 0\n      : @258 (gas: 1)\n 15816: jump @174\n      : @259 (gas: 6)\n 15819: i32 a0 = a3 + 0\n 15821: i32 a1 = a2 + 0\n 15823: u64 [s1 + 0x1b8] = a1\n 15827: u64 [s1 + 0x1a8] = a0\n 15831: u64 [s1 + 0x1b0] = a2\n 15835: ra = 142, jump @0\n      : @260 [@dyn 71] (gas: 8)\n 15841: a1 = u64 [s1 + 0x1b0]\n 15845: u32 [s1 + 0x6e0] = a1\n 15849: i32 a0 = a0 + 0\n 15851: i32 a1 = s1 + 0x6e0\n 15855: a2 = 0\n 15857: ecalli 7 // 'return_data_copy'\n 15859: a0 = i32 [s1 + 0x6e0]\n 15863: jump @203\n      : @261 (gas: 15)\n 15866: u64 [s1 + 920] = 0\n 15870: u64 [s1 + 912] = 0\n 15874: u64 [s1 + 904] = 0\n 15878: u64 [s1 + 896] = 0x20\n 15883: a0 = u64 [s1 + 0x1b8]\n 15887: u64 [s1 + 0x3a0] = a0\n 15891: a0 = u64 [s1 + 0x1b0]\n 15895: u64 [s1 + 0x3a8] = a0\n 15899: a0 = u64 [s1 + 0x160]\n 15903: u64 [s1 + 0x3b0] = a0\n 15907: a0 = s1 + 0x3a0\n 15911: a1 = s1 + 0x380\n 15915: a2 = u64 [s1 + 0x168]\n 15919: u64 [s1 + 0x3b8] = a2\n 15923: ra = 144, jump @287\n      : @262 [@dyn 72] (gas: 4)\n 15929: a1 = 0x20\n 15932: a0 = u64 [s1 + 0x1a8]\n 15936: ra = 0x86\n 15940: jump @0\n      : @263 (gas: 267)\n 15943: a0 = reverse ra\n 15945: a4 = reverse a4\n 15947: t0 = a1\n 15949: a1 = u64 [s1 + 0x198]\n 15953: a1 = reverse a1\n 15955: a5 = reverse t2\n 15957: u64 [s1 + 0x198] = a5\n 15961: t1 = 0x1\n 15964: a2 = a5\n 15966: a2 = t1 if a1 == 0\n 15969: ra = a3\n 15971: a3 = maxu(a5, t1)\n 15974: a3 = a2 if a1 != 0\n 15977: t2 = a4 >u 0\n 15979: a5 = a4\n 15981: u64 [s1 + 0x170] = a4\n 15985: u64 [s1 + 0x178] = a0\n 15989: a4 = a0 >u 0\n 15991: a4 = t2 if a0 == 0\n 15994: a2 = u64 [s1 + 0x198]\n 15998: a2 = t1 if a4 == 0\n 16001: a5 = a5 | a0\n 16004: a2 = a3 if a5 == 0\n 16007: u64 [s1 + 0x198] = a2\n 16011: a0 = a1\n 16013: a0 = 0 if a4 == 0\n 16015: a0 = a1 if a5 == 0\n 16018: u64 [s1 + 0x168] = a0\n 16022: t2 = 0x100000000\n 16032: a4 = u64 [s1 + 0x1b0]\n 16036: a1 = a4\n 16038: a0 = u64 [s1 + 0x1a8]\n 16042: a1 = t2 if a0 == 0\n 16045: a2 = maxu(a4, t2)\n 16048: a2 = a1 if a0 != 0\n 16051: u64 [s1 + 0x1b8] = ra\n 16055: a1 = ra >u 0\n 16057: a3 = t0 >u 0\n 16059: a3 = a1 if t0 == 0\n 16062: a4 = t2 if a3 == 0\n 16065: a5 = ra | t0\n 16068: a4 = a2 if a5 == 0\n 16071: a1 = a0\n 16073: a1 = 0 if a3 == 0\n 16075: a1 = a0 if a5 == 0\n 16078: a3 = u64 [s1 + 0x50]\n 16081: a2 = a4 - a3\n 16084: a0 = a2 + 0xffffffffffffffdf\n 16087: u64 [s1 + 0x190] = a0\n 16091: a2 = a0 <u a2\n 16094: a3 = a4 <u a3\n 16097: a5 = u64 [s1 + 0x20]\n 16100: a4 = a1 - a5\n 16103: a4 = a4 - a3\n 16106: t1 = a4 + a2\n 16109: t1 = t1 + 0xffffffffffffffff\n 16112: u64 [s1 + 0x160] = t1\n 16116: t0 = t1 ^ a4\n 16119: a0 = t1 <u a4\n 16122: a0 = a2 if t0 == 0\n 16125: u64 [s1 + 0x188] = a0\n 16129: a2 = a1 ^ a5\n 16132: a0 = a1 <u a5\n 16135: a0 = a3 if a2 == 0\n 16138: u64 [s1 + 0x180] = a0\n 16142: a0 = 0xffffffe0\n 16152: t2 = u64 [s1 + 0x30]\n 16155: t1 = a0 <u t2\n 16158: a5 = u64 [s1 + 0x40]\n 16161: a1 = a5 >u 0\n 16163: a1 = t1 if a5 == 0\n 16166: a3 = u64 [s1 + 0x38]\n 16169: a2 = -a3\n 16171: t0 = a2 - a1\n 16174: a1 = a2 <u a1\n 16177: a2 = a3 >u 0\n 16179: a3 = u64 [s1 + 0x48]\n 16182: a2 = a2 + a3\n 16185: a3 = -a2\n 16187: ra = a3 - a1\n 16190: a1 = t0 >u 0\n 16192: a4 = ra >u 0\n 16194: a4 = a1 if ra == 0\n 16197: a5 = -a5\n 16199: a5 = a5 - t1\n 16202: a2 = a0 - t2\n 16205: u64 [s1 + 0x80] = a0\n 16209: a1 = a0 <u a2\n 16212: a0 = a5 >u 0\n 16214: a0 = a1 if a5 == 0\n 16217: a1 = t0 | ra\n 16220: a0 = a4 if a1 != 0\n 16223: a4 = u64 [s1 + 0x1b8]\n 16227: a1 = a4\n 16229: a3 = u64 [s1 + 0x1a0]\n 16233: a1 = 0 if a3 == 0\n 16235: a1 = a4 if a3 == 0\n 16238: a3 = u64 [s1 + 0x58]\n 16241: a4 = a1 - a3\n 16244: u64 [s1 + 0x140] = a4\n 16248: a3 = u64 [s1 + 0x180]\n 16252: a4 = a4 - a3\n 16255: u64 [s1 + 0x148] = a4\n 16259: a4 = a4 + 0xffffffffffffffff\n 16262: u64 [s1 + 0x158] = a4\n 16266: a3 = u64 [s1 + 0x188]\n 16270: a3 = a3 + a4\n 16273: u64 [s1 + 0x150] = a3\n 16277: t2 = a3 << 0x3b\n 16280: t1 = u64 [s1 + 0x160]\n 16284: a4 = t1 >> 0x5\n 16287: a3 = a4 | t2\n 16290: u64 [s1 + 0x188] = a3\n 16294: t1 = t1 << 0x3b\n 16297: a3 = u64 [s1 + 0x190]\n 16301: a3 = a3 >> 0x5\n 16304: a3 = a3 | t1\n 16307: u64 [s1 + 0x190] = a3\n 16311: a2 = 0 if a0 != 0\n 16313: t2 = a2 + 0x1f\n 16316: a2 = t2 <u a2\n 16319: a5 = 0 if a0 != 0\n 16321: a4 = a5 + a2\n 16324: a5 = a4 <u a5\n 16327: a5 = a2 if a2 == 0\n 16330: t0 = 0 if a0 != 0\n 16332: a5 = a5 + t0\n 16335: a2 = a5 << 0x3b\n 16338: a3 = a4 >> 0x5\n 16341: a3 = a3 | a2\n 16344: u64 [s1 + 0x160] = a3\n 16348: a4 = a4 << 0x3b\n 16351: a2 = t2 >> 0x5\n 16354: t1 = a2 | a4\n 16357: a2 = u64 [s1 + 0x188]\n 16361: t2 = a2 ^ a3\n 16364: a4 = a2 <u a3\n 16367: a2 = u64 [s1 + 0x190]\n 16371: a2 = a2 <u t1\n 16374: a2 = a4 if t2 != 0\n 16377: a3 = u64 [s1 + 0x180]\n 16381: a4 = u64 [s1 + 0x140]\n 16385: t2 = a4 <u a3\n 16388: a3 = u64 [s1 + 0x58]\n 16391: a1 = a1 <u a3\n 16394: a3 = u64 [s1 + 0x18]\n 16397: a4 = u64 [s1 + 0x1a0]\n 16401: a4 = a4 - a3\n 16404: a4 = a4 - a1\n 16407: a4 = a4 - t2\n 16410: a1 = u64 [s1 + 0x148]\n 16414: a1 = a1 <u 0x1\n 16417: a4 = a4 - a1\n 16420: a3 = u64 [s1 + 0x150]\n 16424: a1 = u64 [s1 + 0x158]\n 16428: a1 = a3 <u a1\n 16431: a4 = a4 + a1\n 16434: a1 = a3 >> 0x5\n 16437: a3 = a4 << 0x3b\n 16440: t2 = a1 | a3\n 16443: ra = 0 if a0 != 0\n 16445: a0 = a5 <u t0\n 16448: ra = ra + a0\n 16451: a5 = a5 >> 0x5\n 16454: a0 = ra << 0x3b\n 16457: a5 = a5 | a0\n 16460: t0 = a4 >> 0x5\n 16463: ra = ra >> 0x5\n 16466: a1 = t2 <u a5\n 16469: a0 = t0 ^ ra\n 16472: a3 = t0 <u ra\n 16475: a3 = a1 if a0 == 0\n 16478: a1 = t2 ^ a5\n 16481: a0 = a0 | a1\n 16484: a3 = a2 if a0 == 0\n 16487: a2 = u64 [s1 + 0x190]\n 16491: a2 = t1 if a3 == 0\n 16494: u64 [s1 + 0x190] = a2\n 16498: a4 = u64 [s1 + 0x188]\n 16502: a0 = u64 [s1 + 0x160]\n 16506: a4 = a0 if a3 == 0\n 16509: u64 [s1 + 0x188] = a4\n 16513: t2 = a5 if a3 == 0\n 16516: t0 = ra if a3 == 0\n 16519: a1 = u64 [s1 + 0x198]\n 16523: a0 = a1 <u 0x1\n 16526: a3 = u64 [s1 + 0x168]\n 16530: t1 = a3 - a0\n 16533: a0 = a1 + 0xffffffffffffffff\n 16536: u64 [s1 + 0x180] = a0\n 16540: ra = t1 ^ a4\n 16543: a1 = t1 <u a4\n 16546: a5 = a0 <u a2\n 16549: a5 = a1 if ra != 0\n 16552: a2 = u64 [s1 + 0x170]\n 16556: a0 = a2\n 16558: a4 = u64 [s1 + 0x178]\n 16562: a0 = 0 if a4 == 0\n 16564: a0 = a2 if a4 == 0\n 16567: a1 = u64 [s1 + 0x198]\n 16571: a1 = a1 | a3\n 16574: a1 = a1 <u 0x1\n 16577: a2 = a0 - a1\n 16580: a0 = a0 <u a1\n 16583: a1 = a4 - a0\n 16586: a4 = a1 ^ t0\n 16589: a3 = a1 <u t0\n 16592: a0 = a2 <u t2\n 16595: a0 = a3 if a4 != 0\n 16598: a3 = a2 ^ t2\n 16601: a3 = a3 | a4\n 16604: a5 = a0 if a3 != 0\n 16607: t0 = a1 if a5 != 0\n 16610: t2 = a2 if a5 != 0\n 16613: a3 = u64 [s1 + 0x188]\n 16617: a3 = t1 if a5 != 0\n 16620: a1 = u64 [s1 + 0x190]\n 16624: a0 = u64 [s1 + 0x180]\n 16628: a1 = a0 if a5 != 0\n 16631: ra = u64 [s1 + 0x1a8]\n 16635: a0 = a1 >> 0x3b\n 16638: a2 = a1\n 16640: a1 = a3 << 0x5\n 16643: a5 = a3\n 16645: a0 = a0 | a1\n 16648: a2 = a2 << 0x5\n 16651: a4 = u64 [s1 + 0x20]\n 16654: a0 = a0 + a4\n 16657: a1 = u64 [s1 + 0x50]\n 16660: t1 = a1 + a2\n 16663: a1 = t1 <u a1\n 16666: a3 = a0 + a1\n 16669: a0 = a3 ^ a4\n 16672: a2 = a3 <u a4\n 16675: a2 = a1 if a0 == 0\n 16678: a0 = a5 >> 0x3b\n 16681: a1 = t2 << 0x5\n 16684: a0 = a0 | a1\n 16687: a1 = t2 >> 0x3b\n 16690: t0 = t0 << 0x5\n 16693: a1 = t0 | a1\n 16696: t2 = u64 [s1 + 0x40]\n 16699: a4 = u64 [s1 + 0x18]\n 16702: a1 = a1 + a4\n 16705: a4 = u64 [s1 + 0x58]\n 16708: a0 = a0 + a4\n 16711: a5 = a0 <u a4\n 16714: t0 = a1 + a5\n 16717: a5 = u64 [s1 + 0x30]\n 16720: a1 = a0 + a2\n 16723: a0 = a1 <u a0\n 16726: t0 = t0 + a0\n 16729: a0 = t1 + 0x60\n 16732: u64 [s1 + 0x78] = a0\n 16735: a0 = a0 <u t1\n 16738: a4 = u64 [s1 + 0x1b0]\n 16742: a2 = a3 + a0\n 16745: u64 [s1 + 0x70] = a2\n 16748: a2 = a2 <u a3\n 16751: a2 = a0 if a0 == 0\n 16754: a2 = a2 + a1\n 16757: u64 [s1 + 0x68] = a2\n 16760: a1 = a2 <u a1\n 16763: a1 = a1 + t0\n 16766: u64 [s1 + 0x60] = a1\n 16769: a0 = u64 [s1 + 0x38]\n 16772: fallthrough\n      : @264 (gas: 11)\n 16773: u64 [s1 + 0x1a8] = ra\n 16777: u64 [s1 + 0x1b0] = a4\n 16781: u64 [s1 + 0x38] = a0\n 16784: a1 = u64 [s1 + 0x48]\n 16787: a0 = a0 | a1\n 16790: a1 = u64 [s1 + 0x80]\n 16794: a1 = a5 <u a1\n 16797: u64 [s1 + 0x40] = t2\n 16800: a1 = 0 if t2 != 0\n 16802: a1 = 0 if a0 != 0\n 16804: jump @266 if a1 != 0\n      : @265 (gas: 1)\n 16807: jump @174\n      : @266 (gas: 6)\n 16810: a0 = a5 + 0x20\n 16813: u64 [s1 + 0x198] = a0\n 16817: i32 a0 = a0 + 0\n 16819: a1 = 0x20\n 16822: u64 [s1 + 0x30] = a5\n 16825: ra = 146, jump @0\n      : @267 [@dyn 73] (gas: 13)\n 16831: a3 = u64 [s1 + 0x1b0]\n 16835: a4 = u64 [s1 + 0x1b8]\n 16839: a1 = a3 | a4\n 16842: a2 = u64 [s1 + 0x1a0]\n 16846: a5 = u64 [s1 + 0x1a8]\n 16850: a2 = a2 | a5\n 16853: a1 = a1 | a2\n 16856: a1 = a1 >> 0x20\n 16859: u64 [s1 + 0x1b8] = a4\n 16863: a2 = a2 | a4\n 16866: a2 = a2 << 0x20\n 16869: a1 = a1 | a2\n 16872: jump @269 if a1 == 0\n      : @268 (gas: 1)\n 16875: jump @174\n      : @269 (gas: 82)\n 16878: a1 = u64 [s1 + 0x198]\n 16882: a2 = u64 [s1 + 0x30]\n 16885: a2 = a1 <u a2\n 16888: a1 = u64 [s1 + 0x40]\n 16891: a4 = a1 + a2\n 16894: u64 [s1 + 0x190] = a4\n 16898: a1 = a4 <u a1\n 16901: a1 = a2 if a2 == 0\n 16904: a2 = u8 [a0]\n 16906: u64 [s1 + 0x188] = a2\n 16910: a2 = u8 [a0 + 0x1]\n 16913: u64 [s1 + 0x180] = a2\n 16917: a2 = u8 [a0 + 0x2]\n 16920: u64 [s1 + 0x178] = a2\n 16924: a2 = u8 [a0 + 0x3]\n 16927: u64 [s1 + 0x170] = a2\n 16931: a2 = u8 [a0 + 0x4]\n 16934: u64 [s1 + 0x168] = a2\n 16938: a2 = u8 [a0 + 0x5]\n 16941: u64 [s1 + 0x160] = a2\n 16945: a2 = u8 [a0 + 0x6]\n 16948: u64 [s1 + 0x158] = a2\n 16952: a2 = u8 [a0 + 0x7]\n 16955: u64 [s1 + 0x148] = a2\n 16959: a2 = u8 [a0 + 0x8]\n 16962: u64 [s1 + 0x140] = a2\n 16966: a2 = u8 [a0 + 0x9]\n 16969: u64 [s1 + 0x138] = a2\n 16973: a2 = u8 [a0 + 0xa]\n 16976: u64 [s1 + 0x130] = a2\n 16980: a2 = u8 [a0 + 0xb]\n 16983: u64 [s1 + 0x128] = a2\n 16987: a2 = u8 [a0 + 0xc]\n 16990: u64 [s1 + 0x120] = a2\n 16994: a2 = u8 [a0 + 0xd]\n 16997: u64 [s1 + 0x118] = a2\n 17001: a2 = u8 [a0 + 0xe]\n 17004: u64 [s1 + 0x110] = a2\n 17008: a2 = u8 [a0 + 0xf]\n 17011: u64 [s1 + 0x108] = a2\n 17015: a2 = u8 [a0 + 0x10]\n 17018: u64 [s1 + 0x100] = a2\n 17022: a2 = u8 [a0 + 0x11]\n 17025: u64 [s1 + 0xf8] = a2\n 17029: a2 = u8 [a0 + 0x12]\n 17032: u64 [s1 + 0xf0] = a2\n 17036: a2 = u8 [a0 + 0x13]\n 17039: u64 [s1 + 0xe8] = a2\n 17043: a2 = u8 [a0 + 0x14]\n 17046: u64 [s1 + 0xe0] = a2\n 17050: a2 = u8 [a0 + 0x15]\n 17053: u64 [s1 + 0xd8] = a2\n 17057: a2 = u8 [a0 + 0x16]\n 17060: u64 [s1 + 0xd0] = a2\n 17064: a2 = u8 [a0 + 0x17]\n 17067: u64 [s1 + 0xc8] = a2\n 17071: a2 = u8 [a0 + 0x18]\n 17074: u64 [s1 + 0xc0] = a2\n 17078: a2 = u8 [a0 + 0x19]\n 17081: u64 [s1 + 0xb8] = a2\n 17085: a2 = u8 [a0 + 0x1a]\n 17088: u64 [s1 + 0xb0] = a2\n 17092: a2 = u8 [a0 + 0x1b]\n 17095: u64 [s1 + 0xa8] = a2\n 17099: a2 = u8 [a0 + 0x1c]\n 17102: u64 [s1 + 0xa0] = a2\n 17106: a2 = u8 [a0 + 0x1d]\n 17109: u64 [s1 + 0x98] = a2\n 17113: a2 = u8 [a0 + 0x1e]\n 17116: u64 [s1 + 0x90] = a2\n 17120: a0 = u8 [a0 + 0x1f]\n 17123: u64 [s1 + 0x88] = a0\n 17127: a0 = u64 [s1 + 0x38]\n 17130: a1 = a1 + a0\n 17133: u64 [s1 + 0x150] = a1\n 17137: a0 = a1 <u a0\n 17140: a1 = u64 [s1 + 0x48]\n 17143: a1 = a1 + a0\n 17146: u64 [s1 + 0x48] = a1\n 17149: i32 a0 = a3 + 0\n 17151: a1 = 0x20\n 17154: ra = 148, jump @0\n      : @270 [@dyn 74] (gas: 95)\n 17160: a1 = u64 [s1 + 0x88]\n 17164: u8 [a0 + 0x1f] = a1\n 17167: a1 = u64 [s1 + 0x90]\n 17171: u8 [a0 + 0x1e] = a1\n 17174: a1 = u64 [s1 + 0x98]\n 17178: u8 [a0 + 0x1d] = a1\n 17181: a1 = u64 [s1 + 0xa0]\n 17185: u8 [a0 + 0x1c] = a1\n 17188: a1 = u64 [s1 + 0xa8]\n 17192: u8 [a0 + 0x1b] = a1\n 17195: a1 = u64 [s1 + 0xb0]\n 17199: u8 [a0 + 0x1a] = a1\n 17202: a1 = u64 [s1 + 0xb8]\n 17206: u8 [a0 + 0x19] = a1\n 17209: a1 = u64 [s1 + 0xc0]\n 17213: u8 [a0 + 0x18] = a1\n 17216: a1 = u64 [s1 + 0xc8]\n 17220: u8 [a0 + 0x17] = a1\n 17223: a1 = u64 [s1 + 0xd0]\n 17227: u8 [a0 + 0x16] = a1\n 17230: a1 = u64 [s1 + 0xd8]\n 17234: u8 [a0 + 0x15] = a1\n 17237: a1 = u64 [s1 + 0xe0]\n 17241: u8 [a0 + 0x14] = a1\n 17244: a1 = u64 [s1 + 0xe8]\n 17248: u8 [a0 + 0x13] = a1\n 17251: a1 = u64 [s1 + 0xf0]\n 17255: u8 [a0 + 0x12] = a1\n 17258: a1 = u64 [s1 + 0xf8]\n 17262: u8 [a0 + 0x11] = a1\n 17265: a1 = u64 [s1 + 0x100]\n 17269: u8 [a0 + 0x10] = a1\n 17272: a1 = u64 [s1 + 0x108]\n 17276: u8 [a0 + 0xf] = a1\n 17279: a1 = u64 [s1 + 0x110]\n 17283: u8 [a0 + 0xe] = a1\n 17286: a1 = u64 [s1 + 0x118]\n 17290: u8 [a0 + 0xd] = a1\n 17293: a1 = u64 [s1 + 0x120]\n 17297: u8 [a0 + 0xc] = a1\n 17300: a1 = u64 [s1 + 0x128]\n 17304: u8 [a0 + 0xb] = a1\n 17307: a1 = u64 [s1 + 0x130]\n 17311: u8 [a0 + 0xa] = a1\n 17314: a1 = u64 [s1 + 0x138]\n 17318: u8 [a0 + 0x9] = a1\n 17321: a1 = u64 [s1 + 0x140]\n 17325: u8 [a0 + 0x8] = a1\n 17328: a1 = u64 [s1 + 0x148]\n 17332: u8 [a0 + 0x7] = a1\n 17335: a1 = u64 [s1 + 0x158]\n 17339: u8 [a0 + 0x6] = a1\n 17342: a1 = u64 [s1 + 0x160]\n 17346: u8 [a0 + 0x5] = a1\n 17349: a1 = u64 [s1 + 0x168]\n 17353: u8 [a0 + 0x4] = a1\n 17356: a1 = u64 [s1 + 0x170]\n 17360: u8 [a0 + 0x3] = a1\n 17363: a1 = u64 [s1 + 0x178]\n 17367: u8 [a0 + 0x2] = a1\n 17370: a1 = u64 [s1 + 0x180]\n 17374: u8 [a0 + 0x1] = a1\n 17377: a1 = u64 [s1 + 0x1b0]\n 17381: t1 = a1 + 0x20\n 17384: a3 = t1 <u a1\n 17387: a1 = u64 [s1 + 0x1a8]\n 17391: a2 = a1 + a3\n 17394: a4 = a2 <u a1\n 17397: a4 = a3 if a3 == 0\n 17400: a1 = u64 [s1 + 0x1b8]\n 17404: a3 = a1 + a4\n 17407: a4 = a3 <u a1\n 17410: a1 = u64 [s1 + 0x1a0]\n 17414: a1 = a1 + a4\n 17417: a4 = u64 [s1 + 0x68]\n 17420: a4 = a4 ^ a3\n 17423: a5 = u64 [s1 + 0x78]\n 17426: a5 = t1 ^ a5\n 17429: t0 = a5 | a4\n 17432: u64 [s1 + 0x1a0] = a1\n 17436: a4 = u64 [s1 + 0x60]\n 17439: a5 = a1 ^ a4\n 17442: a4 = u64 [s1 + 0x70]\n 17445: a4 = a4 ^ a2\n 17448: a4 = a4 | a5\n 17451: t0 = t0 | a4\n 17454: a1 = u64 [s1 + 0x188]\n 17458: u8 [a0] = a1\n 17460: a5 = u64 [s1 + 0x198]\n 17464: t2 = u64 [s1 + 0x190]\n 17468: a0 = u64 [s1 + 0x150]\n 17472: a4 = t1\n 17474: ra = a2\n 17476: u64 [s1 + 0x1b8] = a3\n 17480: jump @264 if t0 != 0\n      : @271 (gas: 29)\n 17484: t2 = u64 [s1 + 0x50]\n 17487: ra = t1 <u t2\n 17490: a4 = u64 [s1 + 0x20]\n 17493: t0 = a2 ^ a4\n 17496: a5 = a2 <u a4\n 17499: a5 = ra if t0 == 0\n 17502: t0 = u64 [s1 + 0x58]\n 17505: a1 = a3 - t0\n 17508: a0 = a3 <u t0\n 17511: u64 [s1 + 0x1b8] = a0\n 17515: a3 = u64 [s1 + 0x18]\n 17518: a0 = u64 [s1 + 0x1a0]\n 17522: t0 = a0 - a3\n 17525: a3 = a1 <u a5\n 17528: a0 = u64 [s1 + 0x1b8]\n 17532: a3 = a3 + a0\n 17535: a3 = t0 - a3\n 17538: a5 = a1 - a5\n 17541: a2 = a2 - a4\n 17544: a2 = a2 - ra\n 17547: a0 = t1 - t2\n 17550: a2 = a2 | a3\n 17553: a1 = a0 | a5\n 17556: a1 = a1 | a2\n 17559: a2 = a2 | a5\n 17562: a1 = a1 >> 0x20\n 17565: a2 = a2 << 0x20\n 17568: a1 = a1 | a2\n 17571: jump @273 if a1 == 0\n      : @272 (gas: 1)\n 17574: jump @174\n      : @273 (gas: 4)\n 17577: i32 a1 = a0 + 0\n 17579: u64 [s1 + 0x1b8] = a1\n 17583: a0 = u64 [s1 + 0x10]\n 17586: ra = 150, jump @0\n      : @274 [@dyn 75] (gas: 5)\n 17592: i32 a1 = a0 + 0\n 17594: a0 = 0\n 17596: a2 = u64 [s1 + 0x1b8]\n 17600: ecalli 9 // 'seal_return'\n 17602: fallthrough\n      : @275 (gas: 3)\n 17603: a0 = 0\n 17605: a1 = 0\n 17607: ra = 152, jump @0\n      : @276 [@dyn 76] (gas: 5)\n 17613: i32 a1 = a0 + 0\n 17615: a0 = 0x1\n 17618: a2 = 0\n 17620: ecalli 9 // 'seal_return'\n 17622: fallthrough\n      : @277 (gas: 8)\n 17623: a1 = u64 [s1 + 0x1a8]\n 17627: a1 = a1 << 0x20\n 17630: a1 = a1 >> 0x20\n 17633: u64 [s1 + 0x1a0] = a1\n 17637: i32 a0 = a0 + 0\n 17639: u64 [s1 + 0x1a8] = a0\n 17643: a1 = 0x20\n 17646: ra = 154, jump @0\n      : @278 [@dyn 77] (gas: 59)\n 17652: a1 = u64 [s1 + 0x1a0]\n 17656: a1 = reverse a1\n 17658: a2 = u64 [s1 + 0x1b0]\n 17662: a2 = reverse a2\n 17664: a3 = u64 [s1 + 0x1b8]\n 17668: a3 = reverse a3\n 17670: a4 = a3 >> 0x38\n 17673: u8 [a0 + 0x1f] = a4\n 17676: a4 = a3 >> 0x30\n 17679: u8 [a0 + 0x1e] = a4\n 17682: a4 = a3 >> 0x28\n 17685: u8 [a0 + 0x1d] = a4\n 17688: a4 = a3 >> 0x20\n 17691: u8 [a0 + 0x1c] = a4\n 17694: a4 = a3 >> 0x18\n 17697: u8 [a0 + 0x1b] = a4\n 17700: a4 = a3 >> 0x10\n 17703: u8 [a0 + 0x1a] = a4\n 17706: a4 = a3 >> 0x8\n 17709: u8 [a0 + 0x19] = a4\n 17712: u8 [a0 + 0x18] = a3\n 17715: u8 [a0 + 0x10] = a2\n 17718: u8 [a0 + 11] = 0\n 17721: u8 [a0 + 10] = 0\n 17724: u8 [a0 + 9] = 0\n 17727: u8 [a0 + 7] = 0\n 17730: u8 [a0 + 6] = 0\n 17733: u8 [a0 + 5] = 0\n 17736: u8 [a0 + 4] = 0\n 17739: u8 [a0 + 3] = 0\n 17742: u8 [a0 + 2] = 0\n 17745: u8 [a0 + 1] = 0\n 17748: u8 [a0 + 0] = 0\n 17750: a3 = a2 >> 0x38\n 17753: u8 [a0 + 0x17] = a3\n 17756: a3 = a2 >> 0x30\n 17759: u8 [a0 + 0x16] = a3\n 17762: a3 = a2 >> 0x28\n 17765: u8 [a0 + 0x15] = a3\n 17768: a3 = a2 >> 0x20\n 17771: u8 [a0 + 0x14] = a3\n 17774: a3 = a2 >> 0x18\n 17777: u8 [a0 + 0x13] = a3\n 17780: a3 = a2 >> 0x10\n 17783: u8 [a0 + 0x12] = a3\n 17786: a2 = a2 >> 0x8\n 17789: u8 [a0 + 0x11] = a2\n 17792: u8 [a0 + 0x8] = a1\n 17795: a2 = a1 >> 0x38\n 17798: u8 [a0 + 0xf] = a2\n 17801: a2 = a1 >> 0x30\n 17804: u8 [a0 + 0xe] = a2\n 17807: a2 = a1 >> 0x28\n 17810: u8 [a0 + 0xd] = a2\n 17813: a1 = a1 >> 0x20\n 17816: u8 [a0 + 0xc] = a1\n 17819: a1 = 0x20\n 17822: a0 = u64 [s1 + 0x1a8]\n 17826: ra = 156, jump @0\n      : @279 [@dyn 78] (gas: 7)\n 17832: i32 a1 = a0 + 0\n 17834: a2 = 0x20\n 17837: a0 = 0\n 17839: ecalli 9 // 'seal_return'\n 17841: a0 = 0\n 17843: ra = 0x98\n 17847: jump @0\n      : @280 (gas: 3)\n 17850: a0 = 0\n 17852: ra = 0x98\n 17856: jump @0\n      : @281 (gas: 8)\n 17859: u64 [s1 + 496] = 0\n 17863: u64 [s1 + 488] = 0\n 17867: u64 [s1 + 480] = 0\n 17871: a0 = 0x4e487b7100000000\n 17881: a1 = s1 + 0x1e0\n 17885: u64 [s1 + 0x1f8] = a0\n 17889: a0 = 0\n 17891: ra = 158, jump @8\n      : @282 [@dyn 79] (gas: 7)\n 17897: u64 [s1 + 472] = 0\n 17901: u64 [s1 + 464] = 0\n 17905: u64 [s1 + 448] = 0x41\n 17910: a0 = 0x4\n 17913: a1 = s1 + 0x1c0\n 17917: u64 [s1 + 456] = 0\n 17921: ra = 160, jump @8\n      : @283 [@dyn 80] (gas: 3)\n 17927: a1 = 0x24\n 17930: a0 = 0\n 17932: ra = 162, jump @0\n      : @284 [@dyn 81] (gas: 5)\n 17938: i32 a1 = a0 + 0\n 17940: a0 = 0x1\n 17943: a2 = 0x24\n 17946: ecalli 9 // 'seal_return'\n 17948: fallthrough\n      : @285 (gas: 8)\n 17949: u64 [s1 + 688] = 0\n 17953: u64 [s1 + 680] = 0\n 17957: u64 [s1 + 672] = 0\n 17961: a0 = 0x4e487b7100000000\n 17971: a1 = s1 + 0x2a0\n 17975: u64 [s1 + 0x2b8] = a0\n 17979: a0 = 0\n 17981: ra = 164, jump @8\n      : @286 [@dyn 82] (gas: 8)\n 17987: u64 [s1 + 664] = 0\n 17991: u64 [s1 + 656] = 0\n 17995: u64 [s1 + 640] = 0x41\n 18000: a0 = 0x4\n 18003: a1 = s1 + 0x280\n 18007: u64 [s1 + 648] = 0\n 18011: ra = 0xa0\n 18015: jump @8\n      : @287 (gas: 45)\n 18018: sp = sp + 0xffffffffffffff80\n 18021: u64 [sp + 0x78] = ra\n 18024: u64 [sp + 0x70] = s0\n 18027: u64 [sp + 0x68] = s1\n 18030: s0 = sp + 0x80\n 18034: sp = sp & 0xfffffffffffffff0\n 18037: a4 = u64 [a1]\n 18039: t1 = u64 [a0 + 0x8]\n 18042: a5 = u64 [a1 + 0x8]\n 18045: ra = u64 [a0]\n 18047: s1 = a4 + 0x1f\n 18050: t2 = s1 <u a4\n 18053: a2 = a5 + t2\n 18056: s1 = s1 & 0xffffffffffffffe0\n 18059: u64 [sp + 0x18] = ra\n 18062: ra = ra + s1\n 18065: a4 = ra <u s1\n 18068: a3 = a2 + t1\n 18071: t0 = a3 + a4\n 18074: a3 = t0 ^ a2\n 18077: s1 = t0 <u a2\n 18080: s1 = a4 if a3 == 0\n 18083: a4 = u64 [a0 + 0x18]\n 18086: a2 = a2 <u a5\n 18089: a3 = u64 [a1 + 0x10]\n 18092: a0 = u64 [a0 + 0x10]\n 18095: a1 = u64 [a1 + 0x18]\n 18098: a2 = t2 if t2 == 0\n 18101: a2 = a2 + a3\n 18104: a3 = a2 <u a3\n 18107: a5 = a2 + a0\n 18110: t2 = a5 + s1\n 18113: a2 = a5 <u a2\n 18116: s1 = t2 <u a5\n 18119: a1 = a1 + a4\n 18122: a1 = a1 + a3\n 18125: a1 = a1 + a2\n 18128: s1 = s1 + a1\n 18131: a1 = s1 >u 0\n 18133: a2 = t2 >u 0\n 18135: a2 = a1 if s1 != 0\n 18138: a1 = t2 | s1\n 18141: a3 = t0 >u 0\n 18143: a3 = a2 if a1 != 0\n 18146: jump @291 if a3 != 0\n      : @288 (gas: 13)\n 18150: a1 = u64 [sp + 0x18]\n 18153: a1 = ra <u a1\n 18156: a2 = t0 ^ t1\n 18159: a3 = t0 <u t1\n 18162: a3 = a1 if a2 == 0\n 18165: a1 = t2 <u a0\n 18168: a2 = s1 ^ a4\n 18171: a4 = s1 <u a4\n 18174: a4 = a1 if a2 == 0\n 18177: a0 = t2 ^ a0\n 18180: a0 = a0 | a2\n 18183: a4 = a3 if a0 == 0\n 18186: jump @291 if a4 != 0\n      : @289 (gas: 6)\n 18190: a0 = 0x40\n 18193: a1 = 0x20\n 18196: u64 [sp + 0x18] = ra\n 18199: u64 [sp + 0x10] = t0\n 18202: u64 [sp + 0x8] = t2\n 18205: ra = 166, jump @0\n      : @290 [@dyn 83] (gas: 73)\n 18211: a1 = reverse s1\n 18213: a2 = u64 [sp + 0x8]\n 18216: a2 = reverse a2\n 18218: a3 = u64 [sp + 0x10]\n 18221: a3 = reverse a3\n 18223: a4 = u64 [sp + 0x18]\n 18226: a4 = reverse a4\n 18228: u8 [a0 + 0x18] = a4\n 18231: a5 = a4 >> 0x38\n 18234: u8 [a0 + 0x1f] = a5\n 18237: a5 = a4 >> 0x30\n 18240: u8 [a0 + 0x1e] = a5\n 18243: a5 = a4 >> 0x28\n 18246: u8 [a0 + 0x1d] = a5\n 18249: a5 = a4 >> 0x20\n 18252: u8 [a0 + 0x1c] = a5\n 18255: a5 = a4 >> 0x18\n 18258: u8 [a0 + 0x1b] = a5\n 18261: a5 = a4 >> 0x10\n 18264: u8 [a0 + 0x1a] = a5\n 18267: a4 = a4 >> 0x8\n 18270: u8 [a0 + 0x19] = a4\n 18273: u8 [a0 + 0x10] = a3\n 18276: a4 = a3 >> 0x38\n 18279: u8 [a0 + 0x17] = a4\n 18282: a4 = a3 >> 0x30\n 18285: u8 [a0 + 0x16] = a4\n 18288: a4 = a3 >> 0x28\n 18291: u8 [a0 + 0x15] = a4\n 18294: a4 = a3 >> 0x20\n 18297: u8 [a0 + 0x14] = a4\n 18300: a4 = a3 >> 0x18\n 18303: u8 [a0 + 0x13] = a4\n 18306: a4 = a3 >> 0x10\n 18309: u8 [a0 + 0x12] = a4\n 18312: a3 = a3 >> 0x8\n 18315: u8 [a0 + 0x11] = a3\n 18318: u8 [a0 + 0x8] = a2\n 18321: a3 = a2 >> 0x38\n 18324: u8 [a0 + 0xf] = a3\n 18327: a3 = a2 >> 0x30\n 18330: u8 [a0 + 0xe] = a3\n 18333: a3 = a2 >> 0x28\n 18336: u8 [a0 + 0xd] = a3\n 18339: a3 = a2 >> 0x20\n 18342: u8 [a0 + 0xc] = a3\n 18345: a3 = a2 >> 0x18\n 18348: u8 [a0 + 0xb] = a3\n 18351: a3 = a2 >> 0x10\n 18354: u8 [a0 + 0xa] = a3\n 18357: a2 = a2 >> 0x8\n 18360: u8 [a0 + 0x9] = a2\n 18363: u8 [a0] = a1\n 18365: a2 = a1 >> 0x38\n 18368: u8 [a0 + 0x7] = a2\n 18371: a2 = a1 >> 0x30\n 18374: u8 [a0 + 0x6] = a2\n 18377: a2 = a1 >> 0x28\n 18380: u8 [a0 + 0x5] = a2\n 18383: a2 = a1 >> 0x20\n 18386: u8 [a0 + 0x4] = a2\n 18389: a2 = a1 >> 0x18\n 18392: u8 [a0 + 0x3] = a2\n 18395: a2 = a1 >> 0x10\n 18398: u8 [a0 + 0x2] = a2\n 18401: a1 = a1 >> 0x8\n 18404: u8 [a0 + 0x1] = a1\n 18407: sp = s0 + 0xffffffffffffff80\n 18410: ra = u64 [sp + 0x78]\n 18413: s0 = u64 [sp + 0x70]\n 18416: s1 = u64 [sp + 0x68]\n 18419: sp = sp + 0x80\n 18423: ret\n      : @291 (gas: 8)\n 18425: u64 [sp + 80] = 0\n 18428: u64 [sp + 72] = 0\n 18431: u64 [sp + 64] = 0\n 18434: a0 = 0x4e487b7100000000\n 18444: a1 = sp + 0x40\n 18447: u64 [sp + 0x58] = a0\n 18450: a0 = 0\n 18452: ra = 168, jump @8\n      : @292 [@dyn 84] (gas: 7)\n 18458: u64 [sp + 56] = 0\n 18461: u64 [sp + 48] = 0\n 18464: u64 [sp + 32] = 0x41\n 18468: a0 = 0x4\n 18471: a1 = sp + 0x20\n 18474: u64 [sp + 40] = 0\n 18477: ra = 170, jump @8\n      : @293 [@dyn 85] (gas: 3)\n 18483: a1 = 0x24\n 18486: a0 = 0\n 18488: ra = 172, jump @0\n      : @294 [@dyn 86] (gas: 7)\n 18494: i32 a1 = a0 + 0\n 18496: a0 = 0x1\n 18499: a2 = 0x24\n 18502: ecalli 9 // 'seal_return'\n 18504: a0 = 0\n 18506: ra = 0xae\n 18510: jump @10\n      : @295 [export #0: 'call'] (gas: 2)\n 18513: a0 = 0\n 18515: ra = 174, jump @10\n      : @296 [@dyn 87] [export #1: 'deploy'] (gas: 2)\n 18521: a0 = 0x1\n 18524: ra = 176, jump @10\n      : @297 [@dyn 88] (gas: 1)\n 18530: trap\n",
						"bytecode": {
							"object": "50564d00003253000000000000010700c11000c000400480da0d000000000400000012000000200000002e000000340000003f0000004c0000005c0000006c00000077000000890000009400000063616c6c63616c6c5f646174615f636f707963616c6c5f646174615f6c6f616463616c6c5f646174615f73697a6563616c6c65726765745f73746f726167657265665f74696d655f6c65667472657475726e5f646174615f636f707972657475726e5f646174615f73697a657365616c5f72657475726e7365745f696d6d757461626c655f646174617365745f73746f7261676576616c75655f7472616e73666572726564051302c051480463616c6cc05948066465706c6f7906c025525802c0634865004d015201c20150026a02da040b0620064406500674069d08e509950ab90bd50ce50cad0d130f5b10f81014122312ba121c1333133e15a416141846182a1a5d1bad1c161e811ecb1f7d2115223123412390246726ad2775289129a129612a782ae12b192c302c762d242eb12e412fba2f0030fd302732f933d53442366736d5372d383a382539963b733ce13d393ebf410843b844cd44f444a845e94507461246434623471a4833483e48594862488b791052093b3309010001ae9833c8780883881f8488e0553801000128390a000002ae8a123d080000023308100002c8870732003308100002c88707320000009511d87b10207b15187b161082897b19088289087b1982851082861883773308205010029f6f686f59821a6faa821b086fbb787b18787a10787908787898bc38787c1f98bc30787c1e98bc28787c1d98bc20787c1c98bc18787c1b98bc10787c1a98bb08787b1998ab38787b1798ab30787b1698ab28787b1598ab20787b1498ab18787b1398ab10787b1298aa08787a11989a38787a0f989a30787a0e989a28787a0d989a20787a0c989a18787a0b989a10787a0a98990878790998893878790798893078790698892878790598892078790498891878790398891078790298880878780182102082151882161095112832009511f07b10087b158475010a03013d07040002510507501004095010060305951120ff7b10d8007b15d0007b16c8009515e0008411e04911384911304911284911208317200a0c01821730821838821928821a20d49808d4a707d487075207720439070400027b171897772098772095771f8477e0957880007b1810d878067b1608946633074033082050100843fe6f688219086f99821a106faa46171a46171946171646171546171446171346171246171146170e46170d46170c46170b46170a4617094617074617064617054617044617034617024617014607787a1898ab38787b1f98ab30787b1e98ab28787b1d98ab20787b1c98aa18787a1b78791098993878791778780898883878780f33078000821618646850100ab5fd8377646833090a0101531620a9033307800033082050100c9bfd7c78097c79087c7a0a7c7b0b978808d4980897aa1097bb18d4ba0ad4a8087c790d7c7a0c7c7b0e7c7c0f979908d4a90997bb1097cc18d4cb0bd4b909979920d498087c79017c7a7c7b027c7c03979908d4a90997bb1097cc18d4cb0bd4b9097c7a057c7b047c7c067c760797aa08d4ba0a97cc10976618d46c0cd4ca0a97aa20d4a9096f9a6f8914080000000001000000d39808d4a8087b19109899208899017b1a1894a993895109f1027c78197c79187c7a1a7c7b1b978808d4980897aa1097bb18d4ba0ad4a8087c791d7c7a1c7c7b1e7c7c1f979908d4a90997bb1097cc18d4cb0bd4b909979920d498087c79117c7a107c7b127c7c13979908d4a90997bb1097cc18d4cb0bd4b9097c7a157c7b147c7c167c771797aa08d4ba0a97cc10977718d4c707d4a707977720d497076f777b17086f86492198004921900049218800492180004921b8004921b0004921a8004921a0004811602083188000831aa000831b603309ff33070a058017b4008218b800977720821910d49707821918d49808492198004921900049218800492180007b18b8007b17b0008217087b17a8007b16a00083188000831aa0003309ff330b2033070a0b8317400a048217488118508219406f77977a206f88988820d4a8087b18189877206f96976820d487077b171098662049219800492190004921880049218000014921b8004921b0004921a8004921a0004811602083188000831aa000831b603309ff33070a058017b4009777208218b800d4670749219800492190004921880049218000017b18b8007b17b0008217107b17a8008217187b17a00083188000831aa0003309ff330b2033070a0b33074033082050100e2bfb7c78117c79107c7a127c7b13978808d4980897aa1097bb18d4ba0ad4a8087c79157c7a147c7b167c7c17979908d4a90997bb1097cc18d4cb0bd4b909979920d489027c79017c7a7c7b027c7c03979908d4a90997bb1097cc18d4cb0bd4b9097c7a057c7b047c7c067c760797aa08d4ba0a97cc10976618d46c0cd4ca0a97aa20d4a9097c7a197c7b187c7c1a7c761b97aa08d4ba0a97cc10976618d46c0cd4ca0a7c7b1d7c7c1c7c761e7c781f97bb08d4cb0b976610978818d46808d4b808978820d48a0a7c78097c7b087c7c0a7c760b978808d4b80897cc10976618d46c0cd4c8087c7b0d7c7c0c7c760e7c770f97bb08d4cb0b976610977718d46707d4b707977720d487076f776fa66f986f29d49808d47609d48909989920d48707977720d497075107170033073308501010faf9837833070133090a0901836664673308501012e5f98377330833090a0101390808000251080d330710000383770a0a0164673308501014c1f98378330733093300160a09019511a0f87b1058077b1550077b164807951560078411e0641633074033082050101891f946171f800046171e46171d46171c46171b46171a46171946171846171746171646171546171446171346171246171146171046170f46170e46170d46170c46170b46170a461709461708461707461703330804000246170246170146077b68b80139080400024617064617054617045518040728dc3d8367c00333080a02018167dc035a47cfbb0a01c20651470df4d98828075147336332990a28d41c9517e08477e07b67b0016471491718491710491708490783770a0c01826ab00182a71082a81882a90882aad49808d4a707d48707510706287b3d8267b801817756174307286e3d836720073308040a020182693007826a380714080000000001000000d39808d4a8087b69a0019899208899017b6a980194a9938952090628343d826828077b688801826820077b689001492618074926100749260807492600070149263807492630074926280749262007482640072083680007836a2007836b40073309ff33070a05826728077b67b801826720077b67b001806730077b67a801836720060a04018267280682682006816930066f77987a206f88978b20d4ba0a9777206f99989920d497079888208269a801d398088269b001d39707d487078268b801d3a808d4870751070628e6234926180749261007492608074926000749263807492630074926280749262007482640072083680007836a2007836b40073309ff33070a05826730077b677801826728077b677001826720077b67800133074033082050101a68f77c78117c79107c7a127c7b13978808d4980897aa1097bb18d4ba0ad4a8087c79157c7a147c7b167c7c17979908d4a90997bb1097cc18d4cb0bd4b909979920d489027c79017c7a7c7b027c7c03979908d4a90997bb1097cc18d4cb0bd4b9097c7a057c7b047c7c067c780797aa08d4ba0a97cc10978818d4c808d4a808978820d498037c78197c7a187c7b1a7c7c1b978808d4a80897bb1097cc18d4cb0bd4b8087c7a1d7c7b1c7c7c1e7c791f97aa08d4ba0a97cc10979918d4c909d4a909979920d4890a7c78097c79087c7b0a7c7c0b978808d4980897bb1097cc18d4cb0bd4b8087c790d7c7b0c7c7c0e7c770f979908d4b90997cc10977718d4c707d49707977720d487076f7b6faa6f396f2cd49c07d4ba08d47808988820d4b707977720d4870751070628f61b83a73308207b67a8017b6968017b6b60017b6ab8017b6cb00150101c20f646171f46171e46171d46171c46171b46171a46171946171846171746171646171546171446171346171246171146171046170f46170e46170d46170c46170b46170a46170946170846170746170646170546170357461702c800461701e2004607648268680182696001d4890a140b00000000010000001408fcffffff000000008269b801d889088269b001949894a8461704520806283f1b8267a8018377043308207b6a58017b6b500150101e70f5826898016f888269a0016f99826a88016faa826b90016fbb98bc38787c1f98bc30787c1e98bc28787c1d98bc20787c1c98bc18787c1b98bc10787c1a98bc08787c19787b18787a1098ab38787b1798ab30787b1698ab28787b1598ab20787b1498ab18787b1398ab10787b1298aa08787a11787908989a38787a0f989a30787a0e989a28787a0d989a20787a0c989a18787a0b989a10787a0a9899087879097878988938787907988930787906988928787905988920787904988918787903988910787902988808787801836740063308240a0201826750019577dc8268b801d878078268b001948782685801948752070628331a826740067b67a001826748067b679801826750067b679001826758067b6788018267a8018377243308205010204cf4826888016f88826990016f99826a98016faa826ba0016fbb98bc38787c1f98bc30787c1e98bc28787c1d98bc20787c1c98bc18787c1b98bc10787c1a98bc08787c19787b1898ab38787b1798ab30787b1698ab28787b1598ab20787b1498ab18787b1398ab10787b1298ab08787b11787a10989a38787a0f989a30787a0e989a28787a0d989a20787a0c989a18787a0b989a10787a0a989a08787a0978790898893878790798893078790698892878790598892078790498891878790398891078790298890878790178780a06826770016f77977820826978016f99989920d49808826980016f99979a20987720d4a7079899207b6768067b6860067a697006492698064926900649268806492680063308448267a80150102230f37b67a0013308208267a80150102420f34826a006204926d806ff4926d006ff4926c806ff4926c006ff9568600697882098882014090000000008000000d49802956880069788209888209569c006979920d4890a8268a00197882098882014090000000044000000d4980b9777209877209568a006978820d4780c3308ff3309ff64270a01510706280a2f0a0801531720072893300a087b67a0014926580349265003492648037b674003826760017b6770038267b0017b6768038267b8017b6760039567600395684003826968017b697803501026ba388268a00154181f12372883305247d0bb0a010a281a135147d1d7d5380a28f1179517e08477e07b67b0016471491718491710491708490783770a0c01826ab00182a71082a81882a90882aad49808d4a707d4870751070628bf368267b80181775617030728b236492618074926100749260807492600072821169517e08477e07b67b0016471491718491710491708490783770a0c01826ab00182a71082a81882a90882aad49808d4a707d487075107062865368267b801817756172307285836836720073308040a0201826830078269380714070000000001000000d38707d497077b6898019888208888017b69900194989378520806281537826728077b678001826720077b6788014926180749261007492608074926000749263807492630074926280749262007482640072083680007836a2007836b40073309ff33070a05826730077b67a801826728077b67a001826720077b67b001330740330820501028f2f07c78117c79107c7a127c7b13978808d4980897aa1097bb18d4ba0ad4a8087c79157c7a147c7b167c7c17979908d4a90997bb1097cc18d4cb0bd4b909979920d489027c79017c7a7c7b027c7c03979908d4a90997bb1097cc18d4cb0bd4b9097c7a057c7b047c7c067c780797aa08d4ba0a97cc10978818d4c808d4a808978820d498037c78197c7a187c7b1a7c7c1b978808d4a80897bb1097cc18d4cb0bd4b8087c7a1d7c7b1c7c7c1e7c791f97aa08d4ba0a97cc10979918d4c909d4a909979920d4890a7c78097c79087c7b0a7c7c0b978808d4980897bb1097cc18d4cb0bd4b8087c790d7c7b0c7c7c0e7c770f979908d4b90997cc10977718d4c707d49707977720d487076f796fac6f3a6f2bd4ab07d49c08d47808988820d49707977720d4870751070628801583c73308207b67b8017b6978017b6a70017b6b68017b6c600150102aaaef4617031c4617021546170162460784008268780182697001d489091408fcffffff00000000826a6001d88a08826a680194a8949846171f46171e46171d46171c46171b46171a46171946171846171746171646171546171446171346171246171146171046170f46170e46170d46170c46170b46170a46170946170846170746170646170546170452080628d4148267b80183770433082050102c0def826890016f88826998016f99826a80016faa826b88016fbb98bc38787c1f98bc30787c1e98bc28787c1d98bc20787c1c98bc18787c1b98bc10787c1a98bc08787c19787b18787a1098ab38787b1798ab30787b1698ab28787b1598ab20787b1498ab18787b1398ab10787b1298aa08787a11787908989a38787a0f989a30787a0e989a28787a0d989a20787a0c989a18787a0b989a10787a0a98990878790978789889387879079889307879069889287879059889207879049889187879039889107879029888087878010a068267a0016f779778208269a8016f99989920d498088269b0016f99979a20987720d4a7079899207b6768057b6860057a697005492698054926900549268805492680053308248267b80150102ef1ed7b67b0018267b8013308501030e2ed4826a0054926d8054926d0054926c8054926c0059568600597882098882014090000000018000000d49802956880059788209888209569c005979920d4890a8268b00197882098882014090000000024000000d4980b9777209877209568a005978820d4780c3308ff3309ff64270a015107062834220a0801647998772051070628161383987b68a8018267b8017b69b0015010324bed8268b0017a68000683778368000633090a0701816700068268a801ae870628e2124926180349261003492608038267b0017b670003826760017b672003826768017b672803826778017b6730039567200395680003826970017b6938035010344b338268b00156181f07289f313308208267b801501036d2ec7c78097c79087c7a0a7c7b0b978808d4980897aa1097bb18d4ba0ad4a8087c790d7c7a0c7c7b0e7c7c0f979908d4a90997bb1097cc18d4cb0bd4b909979920d489027c79017c7a7c7b027c7c03979908d4a90997bb1097cc18d4cb0bd4b9097c7a057c7b047c7c067c780797aa08d4ba0a97cc10978818d4c808d4a808978820d498037c78117c7a107c7b127c7c13978808d4a80897bb1097cc18d4cb0bd4b8087c7a157c7b147c7c167c791797aa08d4ba0a97cc10979918d4c909d4a909979920d498086f8a6f336f287b68a801d4380b88ac0194bc520c0628b6307c7b197c7c187c791a7c781b97bb08d4cb0b979910978818d49808d4b8087c791d7c7b1c7c7c1e7c771f979908d4b90997cc10977718d4c707d49707977720d487076f77826b6001c8b70cd87c0882626801c82a07c88704d3a409d8a407da98078269b001c8b909d8b90095c81f7b6cb801d8c80a7b6ab0017b69a001d8980cc80209c8a408d3980bd8980adbba0c7b699801d82909da0009826a7801c89a00d8a009826b7001c89b02c8b303826ba801c8ab09d8b90ac83a0ac8790bd89b07c87a03d848078268b001da8807c8b707d8b708c83808d328097b62a801d82808d8070ada9a08d30707d49707db780c520c0628c12f8269b801d4b907d43408d48707987720d4b808978820d487075107062899107b6358017b6b60017b6070017b6478018397330820501038c7ea7c78097c79087c7a0a7c7b0b978808d4980897aa1097bb18d4ba0ad4a8087c790d7c7a0c7c7b0e7c7c0f979908d4a90997bb1097cc18d4cb0bd4b909979920d489047c78017c797c7a027c7b03978808d4980897aa1097bb18d4ba0ad4a8087c79057c7a047c7b067c7c07979908d4a90997bb1097cc18d4cb0bd4b909979920d489027c78117c79107c7a127c7b13978808d4980897aa1097bb18d4ba0ad4a8087c79157c7a147c7b167c7c17979908d4a90997bb1097cc18d4cb0bd4b909979920d498087b6848016f837b6250016f227b6468016f49d4290b883c0194bc520c0628fd2f7c7b197c7c187c7a1a7c781b97bb08d4cb0b97aa10978818d4a808d4b8087c7a1d7c7b1c7c7c1e7c771f97aa08d4ba0a97cc10977718d4c707d4a707977720d487077b6740016f7798983b972205d482087b68b00198383b979905d498087b68900198783b973305d483087b6888019777057b67800133074033082050103a61e97c78017c797c7a027c7b03978808d4980897aa1097bb18d4ba0ad4a8087c79057c7a047c7b067c7c07979908d4a90997bb1097cc18d4cb0bd4b909979920d489027c79097c7a087c7b0a7c7c0b979908d4a90997bb1097cc18d4cb0bd4b9097c7a0d7c7b0c7c7c0e7c780f97aa08d4ba0a97cc10978818d4c808d4a808978820d498037c78117c7a107c7b127c7c13978808d4a80897bb1097cc18d4cb0bd4b8087c7a157c7b147c7c167c791797aa08d4ba0a97cc10979918d4c909d4a909979920d4890a7c78197c79187c7b1a7c7c1b978808d4980897bb1097cc18d4cb0bd4b8087c791d7c7b1c7c7c1e7c771f979908d4b90997cc10977718d4c707d49707977720d487076f747b64306fa07b60406f337b63386f2c7b6c4882688001958720d88708826a8801c88a09d8a90ada880a82689001c88a0ad88a08826bb001c88b0b7b67c0027b69c8027b6ad0027b6cf8027b63f0027b60e8027b64e0029567e0029568c0027b6bd80250103c532e826840826a30826748d48707826c38d4ca08d47808988820d4c707977720d487075207850d83a73308207b672850103ebfe78268b801958a20d88a0282698001c8a90982647801c8240082688801c808087b6ab801d8a90bc8b80cd30c08d80c0ada8b0a82689801d38c0b7b6c68d8c80c8268a0017b6970d89803dbbc03d8400bda220b82696001c8b908d89809826b5801c89b0482699001c88909826bb001c84b0b7b68b001d8890cc8cb0bc8a908d89809c89b0b826aa801d3ab097b6b58d8ba0a826c7001d88c0bdb9a0b7b6860d3c80ad4a909db9b03826a680198a93878790f98a93078790e98a92878790d98a92078790c98a91878790b98a91078790a98a908787909826b500198b93878790798b93078790698b92878790598b92078790498b91878790398b91078790298b908787901826c480198c93878791798c93078791698c92878791598c92078791498c91878791398c91078791298c9087879118268400198893878791f98893078791e98892878791d98892078791c98891878791b98891078791a988908787919787c10787a08787b78781851030628102bd4cb07d4a808d487078268408262b801826bb0015107d8021407e0ffffff000000007b6750826330648c8269388267487b67a80101d4b207d44008d48707987720d4b808978820d487075207ba0b7b6bb0017b6080017b64880183273308207b62b8017b69a0017b6398017b6c9001501040dbe582689001826b9801826ca001826aa801d4ac02826950d89b09948994295109730b95b920d8b90b64927b69f800c8b8097b699801d88908dabb087c797b6990017c79017b6978017c79027b6970017c79037b6968017c79047b6960017c79057b6958017c79067b6950017c79077b6948017c79087b6940017c79097b6938017c790a7b6930017c790b7b6928017c790c7b6920017c790d7b6918017c790e7b6908017c790f7b6900017c79107b69f0007c79117b69e8007c79127b69e0007c79137b69d8007c79147b69d0007c79157b69c8007c79167b69c0007c79177b69b8007c79187b69b0007c79197b69a8007c791a7b69a0007c791b7b6998007c791c7b6990007c791d7b6988007c791e7b6980007c771f7b6778c8c8087b681001d8c807c87a0a7b6aa8018327330820501042a8e48268b801958220d88204826b8001c84b03826870d8820c826968d39308d8930ada8c0ad8b308da44088269b001c8890bd89b0882648801c88404826860d88b00826958d3940cd89409dac009d3b808d4c808db890a82687878781f8268800078781e8268880078781d8268900078781c8268980078781b8268a00078781a8268a8007878198268b0007878188268b8007878178268c0007878168268c8007878158268d0007878148268d8007878138268e0007878128268e8007878118268f0007878108268000178780f8268080178780e8268180178780d8268200178780c8268280178780b8268300178780a82683801787809826840017878088268480178780782685001787806826858017878058268600178780482686801787803826870017878028268780178780182689001787864308263f800826c980182691001520a4dfd33074033082050104458e37c78197c79187c7a1a7c7b1b978808d4980897aa1097bb18d4ba0ad4a8087c791d7c7a1c7c7b1e7c7c1f979908d4a90997bb1097cc18d4cb0bd4b909979920d489027c79117c7a107c7b127c7c13979908d4a90997bb1097cc18d4cb0bd4b9097c7a157c7b147c7c167c781797aa08d4ba0a97cc10978818d4c808d4a808978820d498037c78097c7a087c7b0a7c7c0b978808d4a80897bb1097cc18d4cb0bd4b8087c7a0d7c7b0c7c7c0e7c790f97aa08d4ba0a97cc10979918d4c909d4a909979920d4890a7c78017c797c7b027c7c03978808d4980897bb1097cc18d4cb0bd4b8087c79057c7b047c7c067c7707979908d4b90997cc10977718d4c707d49707977720d487076f7b6fac6f3a6f29d4ba07d4c908d47808988820d4c707977720d487075207e9079597207b67b001d89702c82a077b67b801d8a708da2208c8c8087b68a001d8c807c8b7077b67a80183973308207b67107b69507b6a207b6b187b6c58501046efe146171f2046171e46171d46171c46171b46171a46171946171846171746171646171546171446171346171246171146171046170f46170e46170d46170c46170b46170a461709461708461707461706461705461704461703461702461701460733082082672850104884e18262b001826aa001d4a2088269b801826ba801d4b909d49808988820d4a909979920d49808520814077c78197c79187c7a1a7c7b1b978808d4980897aa1097bb18d4ba0ad4a8087c791d7c7a1c7c7b1e7c7c1f979908d4a90997bb1097cc18d4cb0bd4b909979920d498087b6890017c78117c79107c7a127c7b13978808d4980897aa1097bb18d4ba0ad4a8087c79157c7a147c7b167c7c17979908d4a90997bb1097cc18d4cb0bd4b909979920d498087b6898017c78097c79087c7a0a7c7b0b978808d4980897aa1097bb18d4ba0ad4a8087c790d7c7a0c7c7b0e7c7c0f979908d4a90997bb1097cc18d4cb0bd4b909979920d498087b6888017c78017c797c7a027c7b03978808d4980897aa1097bb18d4ba0ad4a8087c79057c7a047c7b067c7707979908d4a90997bb10977718d4b707d49707977720d487077b678001832733082050104a3ae082649001826298017872108269880198983878780f98983078780e98982878780d98982078780c98981878780b98981078780a989808787809787908649b82608001980838787807980830787806980828787805980820787804980818787803980810787802980808787801787078741898283878781798283078781698282878781598282078781498281878781398281078781298280878781198483878781f98483078781e98482878781d98482078781c98481878781b98481078781a9848087878198268509587407b67b001d88707826920c879087b68a801d89808da7708826c58c88c0ad42007d44b08d48707d8ca08826c18c8c8087b68a001510706287b1d8263b0018269a8012875239517e08477e07b67b0016471491718491710491708490783770a0c01826ab00182a71082a81882a90882aad49808d4a707d4870751070628b2238267b80181775617230728a5234926180749261007492608074926000749263807492630074926280749262007482640072083680007836a2007836b40073309ff33070a05826720077b67b801826730077b67b001826728077b67a8013307800033082050104c88de46171f46171e46171d46171c46171b46171a46171946171846171746171646171546171446171346171246171146171046170f46170e46170d46170c46170b46170a4617094617084617074617064617054617044617031e46170221461701524607638367e0033308040a028267e0037b67a0018267e8037b6798018267f0037b6790018267f8037b6788013307840033082050104ef0dd826888016f88826990016f99826a98016faa826ba0016fbb98bc38787c1f98bc30787c1e98bc28787c1d98bc20787c1c98bc18787c1b98bc10787c1a98bc08787c19787b1898ab38787b1798ab30787b1698ab28787b1598ab20787b1498ab18787b1398ab10787b1298ab08787b11787a10989a38787a0f989a30787a0e989a28787a0d989a20787a0c989a18787a0b989a10787a0a989a08787a0978790898893878790798893078790698892878790598892078790498891878790398891078790298890878790178780a068267a8016f779778208269b0016f99989920d498089877208269b8016f99979a20d4a7079899207b6708047b6800047a6910044926380449263004492628044926200433078000330824501050d4dc7b67b80133078000330820501052c4dc4826400420492678044926700449266804492660049568000497882098882014090000000018000000d498029568200497882098882095696004979920d4890a8268b80197882098882014090000000024000000d4980b97772098772095684004978820d4780c3308ff3309ff64270a015207bb060a0801330920ae97090c0a080195781f647ad878078489e0889880947852080628ed21330b7b6ab80128f00b5147e74af8bd0a28da209517e08477e07b67b0016471491718491710491708490783770a0c01826ab00182a71082a81882a90882aad49808d4a707d4870751070628a0208267b80181775617030728932049261807492610074926080749260007010149263807492630074926280749262007482640072083680007836a2007836b40073309ff33070a05826730077b67a801826728077b67b001826720077b67b80133074033082050105475db7c78117c79107c7a127c7b13978808d4980897aa1097bb18d4ba0ad4a8087c79157c7a147c7b167c7c17979908d4a90997bb1097cc18d4cb0bd4b909979920d489027c79017c7a7c7b027c7c03979908d4a90997bb1097cc18d4cb0bd4b9097c7a057c7b047c7c067c780797aa08d4ba0a97cc10978818d4c808d4a808978820d498037c78197c7a187c7b1a7c7c1b978808d4a80897bb1097cc18d4cb0bd4b8087c7a1d7c7b1c7c7c1e7c791f97aa08d4ba0a97cc10979918d4c909d4a909979920d4890a7c78097c79087c7b0a7c7c0b978808d4980897bb1097cc18d4cb0bd4b8087c790d7c7b0c7c7c0e7c770f979908d4b90997cc10977718d4c707d49707977720d487076f786fa76f396f2ad4a909d4870ad49a0a98aa20d49808978820d4a80852080628201f00514756cddc480a28011f9517e08477e07b67b0016471491718491710491708490783770a0c01826ab00182a71082a81882a90882aad49808d4a707d4870751070628c71e8267b80181775617230728ba1e4926180749261007492608074926000749263807492630074926280749262007482640072083680007836a2007836b40073309ff33070a05826730077b67a801826728077b67a001826720077b67b0013307403308205010569ed97c78117c79107c7a127c7b13978808d4980897aa1097bb18d4ba0ad4a8087c79157c7a147c7b167c7c17979908d4a90997bb1097cc18d4cb0bd4b909979920d489027c79017c7a7c7b027c7c03979908d4a90997bb1097cc18d4cb0bd4b9097c7a057c7b047c7c067c780797aa08d4ba0a97cc10978818d4c808d4a808978820d498037c78197c7a187c7b1a7c7c1b978808d4a80897bb1097cc18d4cb0bd4b8087c7a1d7c7b1c7c7c1e7c791f97aa08d4ba0a97cc10979918d4c909d4a909979920d4890a7c78097c79087c7b0a7c7c0b978808d4980897bb1097cc18d4cb0bd4b8087c790d7c7b0c7c7c0e7c770f979908d4b90997cc10977718d4c707d49707977720d487076f7b6faa6f396f2cd49c07d4ba08d47808988820d4b707977720d4870752072ffe83a73308207b67b8017b6998017b6b90017b6a88017b6c800150105858d846171f46171e46171d46171c46171b46171a46171946171846171746171646171546171446171346171246171146171046170f46170e46170d46170c46170b46170a461709461708461707461706461705461704461703da00461702c000461701a6004607ea008367a0043308040a02018267980182689001d487071408fcffffff0000000082698801d889088269800194989478510878fd8267a0047b6778018267a8047b6770018267b0047b6768018267b8047b6760018267b80183770433082050105a90d7826860016f88826968016f99826a70016faa826b78016fbb98bc38787c1f98bc30787c1e98bc28787c1d98bc20787c1c98bc18787c1b98bc10787c1a98bc08787c19787b1898ab38787b1798ab30787b1698ab28787b1598ab20787b1498ab18787b1398ab10787b1298ab08787b11787a10989a38787a0f989a30787a0e989a28787a0d989a20787a0c989a18787a0b989a10787a0a989a08787a0978790898893878790798893078790698892878790598892078790498891878790398891078790298890878790178780a068267a0016f779778208269a8016f99989920d498088269b0016f99979a20987720d4a7079899207b67c8047b68c0047a69d0044926f8044926f0044926e8044926e0043308248267b80150105c74d67b67b0013308208267b80150105e64d64826000520492638054926300549262805492620059568c00497882098882014090000000018000000d498029568e00497882098882095692005979920d4890a8268b00197882098882014090000000024000000d4980b97772098772095680005978820d4780c3308ff3309ff64270a015207490c0a0801551720d50d0a087b67b0014926180249261002492608027b670002826790017b673002826780017b672802826788017b6720029567200295680002826998017b693802501060061c8268b00156181fc80d28591a3307403308205010628dd57c78117c79107c7a127c7b13978808d4980897aa1097bb18d4ba0ad4a8087c79157c7a147c7b167c7c17979908d4a90997bb1097cc18d4cb0bd4b909979920d489027c79017c7a7c7b027c7c03979908d4a90997bb1097cc18d4cb0bd4b9097c7a057c7b047c7c067c780797aa08d4ba0a97cc10978818d4c808d4a808978820d498037c78197c7a187c7b1a7c7c1b978808d4a80897bb1097cc18d4cb0bd4b8087c7a1d7c7b1c7c7c1e7c791f97aa08d4ba0a97cc10979918d4c909d4a909979920d4890a7c78097c79087c7b0a7c7c0b978808d4980897bb1097cc18d4cb0bd4b8087c790d7c7b0c7c7c0e7c770f979908d4b90997cc10977718d4c707d49707977720d487076f777b67b8016fa77b67a0016f377b67b0016f277b67a8010a0801826aa0018268b0018269a801d49808826bb801d4ba09d48909989920d4b808978820d498085208fbf964799877205207f2f983a783987b68b8017b67a8017b69b00150106424d48268b0017a68800483778368800433090a0781678004018268b801ac87bef90a08019878205208b4f983787b68b8018267a801501066ecd383783307018269b8010a0901330740330820501068d5d37c78117c79107c7a127c7b13978808d4980897aa1097bb18d4ba0ad4a8087c79157c7a147c7b167c7c17979908d4a90997bb1097cc18d4cb0bd4b909979920d489027c79017c7a7c7b027c7c03979908d4a90997bb1097cc18d4cb0bd4b9097c7a057c7b047c7c067c780797aa08d4ba0a97cc10978818d4c808d4a808978820d498037c78197c7a187c7b1a7c7c1b978808d4a80897bb1097cc18d4cb0bd4b8087c7a1d7c7b1c7c7c1e7c791f97aa08d4ba0a97cc10979918d4c909d4a909979920d4890a7c78097c79087c7b0a7c7c0b978808d4980897bb1097cc18d4cb0bd4b8087c790d7c7b0c7c7c0e7c770f979908d4b90997cc10977718d4c707d49707977720d487076f7b6fa96f3c6f2ad4ca07d4b908d47808988820d4b707977720d48707520766f883973308207b6798017b69b8017b6ab0017b6ba8017b6ca00150106a8fd246171f46171e46171d46171c46171b46171a46171946171846171746171646171546171446171346171246171146171046170f46170e46170d46170c46170b46170a461709461708461707461706461705461703a00046170279461701c3004607088268a801826aa001d48a0a140b00000000010000001408fcffffff000000008269b801d889088269b001949894a84617045108b1f7826798018377043308207b6aa8017b6ba00150106ce1d1826ba801826ab0018269b80146171f2046171e46171d46171c46171b46171a46171946171846171746171646171546171446171346171246171146171046170f46170e46170d46170c46170b46170a4617094617084617074617064617054617044617034617024617018268a0019588dcd8890894a894b8460751081cf78267980183772433082050106e54d146171f0e46171e46171d46171c46171b46171a46171946171846171746171646171546171446171346171246171146171046170f46170e46170d46170c46170b46170a4617094617084617074617064617054617044617034617024617011408bcffffff000000008269b801d889088269b00194988269a8019498460751088cf682679801837744330820501070c4d046171f46171e46171d46171c46171b46171a46171946171846171746171646171546171446171346171246171146171046170f46170e46170d6446170c6546170b7a46170a69461709724617086f4617076846170674461705754617046146170320461702744617016f46074e330864826798015010724bd083783307013309640a09013307330b4926b80120014926b001959880007b68a801d89808c887097b69a001d87907da88077b67980188777b67900133074033082050107405d0826890016f88826998016f99826aa0016faa826ba8016fbb787b1898bc38787c1f98bc30787c1e98bc28787c1d98bc20787c1c98bc18787c1b98bc10787c1a98bb08787b19787a1098ab38787b1798ab30787b1698ab28787b1598ab20787b1498ab18787b1398ab10787b1298aa08787a11787908989a38787a0f989a30787a0e989a28787a0d989a20787a0c989a18787a0b989a10787a0a9899087879097878988938787907988930787906988928787905988920787904988918787903988910787902988808826cb0018ec9826ab80188aa2085aa01dbc90a8ec98ecbdac90bd4cc09da9a0b787801520b0628d5133307800033082050107608cf7c78097c79087c7a0a7c7b0b978808d4980897aa1097bb18d4ba0ad4a8087c790d7c7a0c7c7b0e7c7c0f979908d4a90997bb1097cc18d4cb0bd4b909979920d489027c78017c797c7a027c7b03978808d4980897aa1097bb18d4ba0ad4a8087c79057c7a047c7b067c7c07979908d4a90997bb1097cc18d4cb0bd4b909979920d498087b68b0016f887b62b8016f29140a0000000001000000d39a0ad48a0a989920889901948993a9520906281a137c78187b6850017c78197b6830017c781a7b6840017c781b7b6838017c781c7b6868017c781d7b6848017c781e7b6860017c781f7b6858017c78107b6890017c78117b6870017c78127b6880017c78137b6878017c78147b68a8017c78157b6888017c78167b68a0017c77177b679801330740330820501078decd7c78117c79107c7a127c7b13978808d4980897aa1097bb18d4ba0ad4a8087c79157c7a147c7b167c7c17979908d4a90997bb1097cc18d4cb0bd4b909979920d489027c79017c7a7c7b027c7c03979908d4a90997bb1097cc18d4cb0bd4b9097c7a057c7b047c7c067c780797aa08d4ba0a97cc10978818d4c808d4a808978820d498037c78197c7a187c7b1a7c7c1b978808d4a80897bb1097cc18d4cb0bd4b8087c7a1d7c7b1c7c7c1e7c791f97aa08d4ba0a97cc10979918d4c909d4a909979920d4890a7c78097c79087c7b0a7c7c0b978808d4980897bb1097cc18d4cb0bd4b8087c790d7c7b0c7c7c0e7c770f979908d4b90997cc10977718d4c707d49707977720d487076f786fa76f396f2ad4a909d4870ad49a0a98aa20d49808978820d4a80852086ff28268300197880882695001d4980882694001979910826a380197aa18d4a909d4980882694801979908826a6801d4a909826a600197aa10826b580197bb18d4ba0ad4a909979920d498087b6868018268700197880882699001d4980882698001979910826a780197aa18d4a909d4980882698801979908826aa801d4a909826aa00197aa10826b980197bb18d4ba0ad4a909979920d498087b68a00183777b67a80133082050107a0ccc826aa001787a108269b80198983878780f98983078780e98982878780d98982078780c98981878780b98981078780a9898087878097879088269b00198983878780798983078780698982878780598982078780498981878780398981078780298980878780178798269680178791898a83878781798a83078781698a82878781598a82078781498a81878781398a81078781298a80878781198983878781f98983078781e98982878781d98982078781c98981878781b98981078781a9898087878193308208267a80133009c002839cb33074033082050107c30cb7c78117c79107c7a127c7b13978808d4980897aa1097bb18d4ba0ad4a8087c79157c7a147c7b167c7c17979908d4a90997bb1097cc18d4cb0bd4b909979920d489027c79017c7a7c7b027c7c03979908d4a90997bb1097cc18d4cb0bd4b9097c7a057c7b047c7c067c780797aa08d4ba0a97cc10978818d4c808d4a808978820d498037c78197c7a187c7b1a7c7c1b978808d4a80897bb1097cc18d4cb0bd4b8087c7a1d7c7b1c7c7c1e7c791f97aa08d4ba0a97cc10979918d4c909d4a909979920d4890a7c78097c79087c7b0a7c7c0b978808d4980897bb1097cc18d4cb0bd4b8087c790d7c7b0c7c7c0e7c770f979908d4b90997cc10977718d4c707d49707977720d487076f777b67b8016fa77b67a0016f377b67b0016f277b67a8010a0801826aa0018268b0018269a801d49808826bb801d4ba09d48909989920d4b808978820d49808510806289bef64799877205107062890ef83a783987b68b8017b67a8017b69b00150107ec3c98268b0017a68e00583778368e00533090a078167e00528a0f5330740330820502080009fc97c78117c79107c7a127c7b13978808d4980897aa1097bb18d4ba0ad4a8087c79157c7a147c7b167c7c17979908d4a90997bb1097cc18d4cb0bd4b909979920d489027c79017c7a7c7b027c7c03979908d4a90997bb1097cc18d4cb0bd4b9097c7a057c7b047c7c067c780797aa08d4ba0a97cc10978818d4c808d4a808978820d498037c78197c7a187c7b1a7c7c1b978808d4a80897bb1097cc18d4cb0bd4b8087c7a1d7c7b1c7c7c1e7c791f97aa08d4ba0a97cc10979918d4c909d4a909979920d4890a7c78097c79087c7b0a7c7c0b978808d4980897bb1097cc18d4cb0bd4b8087c790d7c7b0c7c7c0e7c770f979908d4b90997cc10977718d4c707d49707977720d487076f777b67b8016fa77b67a0016f377b67b0016f277b67a8010a0801826aa0018268b0018269a801d49808826bb801d4ba09d48909989920d4b808978820d498085108062809ee647998772051070628feed83a783987b68b8017b67a8017b69b0015020820031c88268b0017a68400583778368400533090a0781674005280df44926580249265002492648024926400220826788017b676002826780017b676802826790017b6770029567600295684002826998017b697802502084003b0e3308208267b80150208600ccc77c78187b68e0007c78197b68c0007c781a7b68d0007c781b7b68c8007c781c7b68f8007c781d7b68d8007c781e7b68f0007c781f7b68e8007c78107b6820017c78117b6800017c78127b6810017c78137b6808017c78147b6838017c78157b6818017c78167b6830017c78177b6828017c78087b6860017c78097b6840017c780a7b6850017c780b7b6848017c780c7b6878017c780d7b6858017c780e7b6870017c780f7b6868017c787b68a0017c78017b6880017c78027b6890017c78037b6888017c78047b68b8017c78057b6898017c78067b68b0017c77077b67a80133074033082050208800e1c67c78117c79107c7a127c7b13978808d4980897aa1097bb18d4ba0ad4a8087c79157c7a147c7b167c7c17979908d4a90997bb1097cc18d4cb0bd4b909979920d489027c79017c7a7c7b027c7c03979908d4a90997bb1097cc18d4cb0bd4b9097c7a057c7b047c7c067c780797aa08d4ba0a97cc10978818d4c808d4a808978820d498037c78197c7a187c7b1a7c7c1b978808d4a80897bb1097cc18d4cb0bd4b8087c7a1d7c7b1c7c7c1e7c791f97aa08d4ba0a97cc10979918d4c909d4a909979920d4890a7c78097c79087c7b0a7c7c0b978808d4980897bb1097cc18d4cb0bd4b8087c790d7c7b0c7c7c0e7c770f979908d4b90997cc10977718d4c707d49707977720d487076f786fa76f396f2ad4a909d4870ad49a0a98aa20d49808978820d4a808510806286eeb8268c0009788088269e000d498088269d000979910826ac80097aa18d4a909d498088269d800979908826af800d4a909826af00097aa10826be80097bb18d4ba0ad4a909979920d498087b68f8008268000197880882692001d4980882691001979910826a080197aa18d4a909d4980882691801979908826a3801d4a909826a300197aa10826b280197bb18d4ba0ad4a909979920d498087b6838018268400197880882696001d4980882695001979910826a480197aa18d4a909d4980882695801979908826a7801d4a909826a700197aa10826b680197bb18d4ba0ad4a909979920d498087b687801826880019788088269a001d4980882699001979910826a880197aa18d4a909d4980882699801979908826ab801d4a909826ab00197aa10826ba80197bb18d4ba0ad4a909979920d498087b68b00183777b67b80133082050208a0070c4826a3801787a108269780198983878780f98983078780e98982878780d98982078780c98981878780b98981078780a9898087878097879088269b00198983878780798983078780698982878780598982078780498981878780398981078780298980878780178798269f80078791898a83878781798a83078781698a82878781598a82078781498a81878781398a81078781298a80878781198983878781f98983078781e98982878781d98982078781c98981878781b98981078781a9898087878193308208267b80133009c00289cc333074033082050208c0093c37c78117c79107c7a127c7b13978808d4980897aa1097bb18d4ba0ad4a8087c79157c7a147c7b167c7c17979908d4a90997bb1097cc18d4cb0bd4b909979920d489027c79017c7a7c7b027c7c03979908d4a90997bb1097cc18d4cb0bd4b9097c7a057c7b047c7c067c780797aa08d4ba0a97cc10978818d4c808d4a808978820d498037c78197c7a187c7b1a7c7c1b978808d4a80897bb1097cc18d4cb0bd4b8087c7a1d7c7b1c7c7c1e7c791f97aa08d4ba0a97cc10979918d4c909d4a909979920d4890a7c78097c79087c7b0a7c7c0b978808d4980897bb1097cc18d4cb0bd4b8087c790d7c7b0c7c7c0e7c770f979908d4b90997cc10977718d4c707d49707977720d487076f777b67b8016fa77b67a0016f377b67b0016f277b67a8010a0801826aa0018268b0018269a801d49808826bb801d4ba09d48909989920d4b808978820d4980851080628fde7647998772051070628f2e783a783987b68b8017b67a8017b69b00150208e0025c28268b0017a68e00683778368e00633090a078167e0062801ee49269803492690034926880349268003208267b8017b67a0038267b0017b67a803826760017b67b0039567a00395688003826968017b69b803502090002f083308208267a8013300860028bcc16f076fbb6482826898016f886f4c7b6c980133030164c9da830964a0e43c0adb890a8eb464bc7b6b70017b6778018e7bda740b82699801dab309d47c0cdaca097b699801648793b7dac8077b67680114040000000001000000826bb00164b88267a801da7408e44b09db78097b60b8018e088e2ada280adaa40bd4200cdac90b647893a8dac708826a50c9ab099597df7b679001d89709d8ab0a826c20c9c80bc9ab0bc89b039533ff7b636001d3b302d8b307da29077b678801d3c809d8c807da9a077b6780011407e0ffffff00000000826430d84703826c408ec8dac308826a389aa9c98902d889088ea9826a48c8a9099a9ac98a008e288e0bda080b9accc93c0cc947097b678000d897088ec7dac807d40208db8b07826bb80164b8826aa00193a8daab08826a58c9a80b7b6b4001826a8001c9ab0b7b6b480195bbff7b6b5801826a8801c8ba0a7b6a500197a43b82636001983b05d44b0a7b6a880197333b826a900198aa05d43a0a7b6a9001947995941fd89409947cc89c0bd8cb0cda990c9472c82c0c97c93b98ba05d49a0a7b6a600197bb3b984905d4b90382698801d3a904d8a90b82699001d83909db4b09826a8001826b4001d8ab04826a58d8a808826a18826ba001c9ab0bc98b0bc94b0b82684801888801c98b0b826a500182685801d88a08c88b0b98a80597ba3bd4a8049470d82c07c8700098cc0597073bd47c0c98b205980005d8c408d30207d8020ada780ad3c408d48707da790a82699001daa3097b699001826b880182676001daa70b7b6b8801daac04daa00282689801888701826a6801c97a039587ff7b678001d3b300d8b308d8970cdb080c826970016497826b780193b7dab90782689801d4a808888801c98709d88707c97b08d3280bd8280ad84907dbba07d3490ad4ba0adba70cdbc802dbc904826a8801dbc30a8268900182678001dbc7088260a80198873b648997a80564acd48707979905826b20c8b707826850c89803d88308c8870ad3ba07d8ba09da780998c73b974805d4870798483b972205d48208826440826b18c8b808826b58c8b707d8b70cc8c802826c30c89708d87807c872029537607b6778d83707826bb001c87a097b6970d8a909da7709c889097b6968d88908c828087b6860826738017b60a8017b6bb0017b6738826848d4870782688000d88c087b6440944894785208062813e495c7207b67980183773308207b6c305020920047be826ab001826bb801d4ba088269a001826ca801d4c909d498089888207b6bb801d4b909979920d4980851080628cfe382689801826930d89809826840c8980b7b6b9001d88b08da99087c797b6988017c79017b6980017c79027b6978017c79037b6970017c79047b6968017c79057b6960017c79067b6958017c79077b6948017c79087b6940017c79097b6938017c790a7b6930017c790b7b6928017c790c7b6920017c790d7b6918017c790e7b6910017c790f7b6908017c79107b6900017c79117b69f8007c79127b69f0007c79137b69e8007c79147b69e0007c79157b69d8007c79167b69d0007c79177b69c8007c79187b69c0007c79197b69b8007c791a7b69b0007c791b7b69a8007c791c7b69a0007c791d7b6998007c791e7b6990007c771f7b678800826738c878087b685001d87807826848c878087b684883a733082050209400febc8268880078781f8268900078781e8268980078781d8268a00078781c8268a80078781b8268b00078781a8268b8007878198268c0007878188268c8007878178268d0007878168268d8007878158268e0007878148268e8007878138268f0007878128268f800787811826800017878108268080178780f8268100178780e8268180178780d8268200178780c8268280178780b8268300178780a8268380178780982684001787808826848017878078268580178780682686001787805826868017878048268700178780382687801787802826880017878018268b001958320d8830a8268a801c8a809d8890bdaaa0b8268b801c8b80ad88a0b8268a001c8b808826b68d3ab0b826c78d3c30cd4bc027b68a001826b60d3b80c826b70d39b0bd4cb0bd4b202826888017878826c98018264900182675001643b64907b6ab80152023dfd826450d84300826b20d3b902d8b90cda200c826258c92a08d82a077b67b801826a188267a001c9a702d8c80a8267b801c87a0ac9a20ac9c80cc9b909c90909c94307d4a909d4c708d49808d4c909988820979920d498085108062814e183787b68b801826710502096004ebb837833078269b8010a0901330733085020980039bb837833070133090a09018268a8019788209888207b68a00183777b67a80133082050209a0012bb8268a0016f888269b0016f99826ab8016faa98ab38787b1f98ab30787b1e98ab28787b1d98ab20787b1c98ab18787b1b98ab10787b1a98ab08787b19787a1878791046170b46170a4617094617074617064617054617044617034617024617014607989a38787a17989a30787a16989a28787a15989a20787a14989a18787a13989a10787a1298990878791178780898893878790f98893078790e98892878790d98882078780c3308208267a80150209c005eba837833092033070a093307330098002849ba3307330098002840ba4926f0014926e8014926e001140700000000717b484e9568e0017b67f801330750209e005dba4926d8014926d0014926c001413307049568c0014926c8015020a0003fba33082433075020a200f4b983783307013309240a09014926b0024926a8024926a002140700000000717b484e9568a0027b67b80233075020a40003ba4926980249269002492680024133070495688002492688023300a00028e1b99511807b10787b15707b1668951580008411f0828b827308828c08827095b61fd8b604c84c098466e07b1018c86000d8600bc8390ac8ba02d3920ad89206daab06827b18d8c909828a10827710828818da4409c8a909d8a90ac8790cc86c04d89c09d8c406c8b808c8a808c89808c886068e688e49db6809d464088e2adb890a520a1701821818d88008d33209d8320ada980ad87408d3b609d8b60bda980bd37407d49707da7a0b520bef003307403308207b10187b12107b14085020a600e3b86f688219086f99821a106faa821b186fbb787b1898bc38787c1f98bc30787c1e98bc28787c1d98bc20787c1c98bc18787c1b98bc10787c1a98bb08787b19787a1098ab38787b1798ab30787b1698ab28787b1598ab20787b1498ab18787b1398ab10787b1298aa08787a11787908989a38787a0f989a30787a0e989a28787a0d989a20787a0c989a18787a0b989a10787a0a9899087879097878988938787907988930787906988928787905988920787904988918787903988910787902988808787801955180821078821570821668951180003200491150491148491140140700000000717b484e9518407b175833075020a8002cb8491138491130491120413307049518204911285020aa0013b833082433075020ac00c8b783783307013309240a0933073300ae0028e5b833075020ae00e0b83307015020b000d7b80049489220248414d249525252a22a2529499224499224499224499224499224499224499224494a4a432244444492244d922411922491a424945292244992244992a4244992244992440a55432424499224499224499292244992244992a4024892a422499224499224499224499224499224494a11111111119154449224222222111149a524a5242949222244444444529148448488442222a924244992244992244992922449922449922449922449922449922449922449922449aa9224495628b50a554342ad50a511119192109224499224499224491292222489448d808040922849359294248922914604904412954444444488880811918a888888464429494922914492444444448488484544442421499224499224499294244992244992244992244992244992244992244992244952952449921211112149922449922449922449849088041040242a492411218aa228499224499224499224499224499224495292244992249146225194444444444412a2288a92244992244992244992244992244992244992244992549428899224222222122112218410422401249248220920492449278d141111111111111121420209248992542349499228121191244a528d242549a248a41101249144251111111111112122521111114948922449922449922425499224499224499224499224499224499224499224499254254992a4444444888888480091a82449922449922449922449220951144549922449922449922449922449922449929224499224294a9444491211111189105188888848024824914412409248924e5a92222244143522898888888888888810914448922449922449922425499224499224499224499224499224552425499224499224499214492449224924224992482289249224492449224992249224491211514292244992244992242949922449922449922449922449922489a228294992244992244992244a12492249249290922449922449922449922449922449922449922449922449922449922449922429a5944822492491888888888890244992244a42249148249224912492249144229148924492489224922449922489244992244922499224499248922449922429499244440049494c92241111252222444424a9488a4452241289442291482412894422914824128944229148241289442291249228219248922449249124499224914824128944229148241289442291482412894422914824128944454424214992244992244992244992244992244992244992244992244949922449922449529524492291449248a224494224499224499224499224495212221291244924499224499224491249922449922449924492244992244992249192244992244992244a884824499224499222499224499292244992244992244992244924892449922492882451926a2429491245222222224244a42222222221499224499224499224492222912222222222218aa22849922449922449922449922449922449922449922449458992444922222222122212424444240124924822092049244947134d494a8a04924449aa91a4244914898830222244442a222222094992244992244992a4244992244992244992244992244992244992244992244992aa2449920c2489925423494992281211111111222215111191842449922449922449529224499224499224499224499224499224499224499224495592248912111121499224499224499224494208116944028844454444444424218aa228499224499224499224499224499224499224499224494589922849222222221122114244442401249248220920492449474311111111111111112224094992244992244992a4244992244992244992244992244992244992244992244992a2288a464422499228511111228a8a114d14114a34094992244992244992a4244992244992244992244992244992244992244992244992aa2449122522224292244992244992244992102111092080485422928810119124499224499224499224492455441222499224499224499224499200225154441292244992244992888888888888482294b4c2884822892209511445499224499224499224499224499224499292244992245124a9244922214992244992244992942449922449922451144092549248241289442291482412894422918424499224499224495292244992244992244992244992244992244992244992244955922489482412492291482449221289449248241249922812229124499224492249922449922249922449922449922449928824214992244992244992942449922449922449922449922449922449922449922449521445d1884824499294a422224414154982244992244992244952922449922449922449922449922449922449922449922449511445232291244952928a8820a2a84844848888888888201124128944229148241289442291482412894422914814894422914824922049922449922449929424499224499224499224499224499224499224499224495295244992482412492291482449221289449248241249928844229124128944922422914824894422912489224124922449922449244992244952244992244992244992244912912448922449922449922425499224499224499224499224499224499224499224499214455134221249922425a98808228a8a444488888888880812912a2a524a2aa24492a844005124894a924a924892249124924400494a4a4a4aa5245292284a1291484422914422899292942491249248229224924412912429499224499248442492482491245194489224499224129148294992244992244992244992449224493222492495244a82884424892449244924452291482412894422914824128944229148241289442291482412892492a404914824128944229148241289442291482412894422914824128944228924914492249124491411159124499248249124499224498a0415ada0d448a2481045519224499224499224495292244992244992244904a58a14898800220a2242228214943422028828880889882449a4a424499224499224499224a9a4449224499244922428a59424499224499224499224499224499224294992244992248992049014249124484149450a120400"
						},
						"deployedBytecode": {
							"object": ""
						},
						"methodIdentifiers": {
							"cardNFT()": "38d5d7d1",
							"gameMaster()": "bdf84ae7",
							"getCardOwner(uint256)": "010abbd0",
							"getCardType(uint256)": "48dccd56",
							"getUserCards(address)": "88d9f40d",
							"giveCard(address,uint256)": "99326333"
						}
					},
					"irOptimized": "/// @use-src 1:\"contracts/CardInventory.sol\"\nobject \"CardInventory_374\" {\n    code {\n        {\n            /// @src 1:85:934  \"contract CardInventory {...\"\n            let _1 := memoryguard(0x80)\n            if callvalue() { revert(0, 0) }\n            let programSize := datasize(\"CardInventory_374\")\n            let argSize := sub(codesize(), programSize)\n            let newFreePtr := add(_1, and(add(argSize, 31), not(31)))\n            if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, _1))\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 1:85:934  \"contract CardInventory {...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 1:85:934  \"contract CardInventory {...\" */ 0x24)\n            }\n            mstore(64, newFreePtr)\n            codecopy(_1, programSize, argSize)\n            if slt(sub(add(_1, argSize), _1), 32)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 1:85:934  \"contract CardInventory {...\"\n            let value := mload(_1)\n            let _2 := and(value, sub(shl(160, 1), 1))\n            if iszero(eq(value, _2))\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 1:85:934  \"contract CardInventory {...\"\n            sstore(/** @src -1:-1:-1 */ 0, /** @src 1:85:934  \"contract CardInventory {...\" */ or(and(sload(/** @src -1:-1:-1 */ 0), /** @src 1:85:934  \"contract CardInventory {...\" */ not(sub(shl(160, 1), 1))), _2))\n            sstore(/** @src 1:251:274  \"gameMaster = msg.sender\" */ 0x01, /** @src 1:85:934  \"contract CardInventory {...\" */ or(and(sload(/** @src 1:251:274  \"gameMaster = msg.sender\" */ 0x01), /** @src 1:85:934  \"contract CardInventory {...\" */ not(sub(shl(160, 1), 1))), /** @src 1:264:274  \"msg.sender\" */ caller()))\n            /// @src 1:85:934  \"contract CardInventory {...\"\n            let _3 := mload(64)\n            let _4 := datasize(\"CardInventory_374_deployed\")\n            codecopy(_3, dataoffset(\"CardInventory_374_deployed\"), _4)\n            return(_3, _4)\n        }\n    }\n    /// @use-src 1:\"contracts/CardInventory.sol\"\n    object \"CardInventory_374_deployed\" {\n        code {\n            {\n                /// @src 1:85:934  \"contract CardInventory {...\"\n                let _1 := memoryguard(0x80)\n                mstore(64, _1)\n                if iszero(lt(calldatasize(), 4))\n                {\n                    switch shr(224, calldataload(0))\n                    case 0x010abbd0 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        let cleaned := and(sload(0), sub(shl(160, 1), 1))\n                        /// @src 1:899:923  \"cardNFT.ownerOf(tokenId)\"\n                        mstore(_1, /** @src 1:85:934  \"contract CardInventory {...\" */ shl(225, 0x31a9108f))\n                        mstore(/** @src 1:899:923  \"cardNFT.ownerOf(tokenId)\" */ add(_1, /** @src 1:85:934  \"contract CardInventory {...\" */ 4), calldataload(4))\n                        /// @src 1:899:923  \"cardNFT.ownerOf(tokenId)\"\n                        let _2 := staticcall(gas(), cleaned, _1, 36, _1, /** @src 1:85:934  \"contract CardInventory {...\" */ 32)\n                        /// @src 1:899:923  \"cardNFT.ownerOf(tokenId)\"\n                        if iszero(_2)\n                        {\n                            /// @src 1:85:934  \"contract CardInventory {...\"\n                            let pos := mload(64)\n                            returndatacopy(pos, 0, returndatasize())\n                            revert(pos, returndatasize())\n                        }\n                        /// @src 1:899:923  \"cardNFT.ownerOf(tokenId)\"\n                        let expr := /** @src 1:85:934  \"contract CardInventory {...\" */ 0\n                        /// @src 1:899:923  \"cardNFT.ownerOf(tokenId)\"\n                        if _2\n                        {\n                            let _3 := /** @src 1:85:934  \"contract CardInventory {...\" */ 32\n                            /// @src 1:899:923  \"cardNFT.ownerOf(tokenId)\"\n                            if gt(/** @src 1:85:934  \"contract CardInventory {...\" */ 32, /** @src 1:899:923  \"cardNFT.ownerOf(tokenId)\" */ returndatasize()) { _3 := returndatasize() }\n                            finalize_allocation(_1, _3)\n                            /// @src 1:85:934  \"contract CardInventory {...\"\n                            if slt(sub(/** @src 1:899:923  \"cardNFT.ownerOf(tokenId)\" */ add(_1, _3), /** @src 1:85:934  \"contract CardInventory {...\" */ _1), 32) { revert(0, 0) }\n                            let value := mload(_1)\n                            if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n                            /// @src 1:899:923  \"cardNFT.ownerOf(tokenId)\"\n                            expr := value\n                        }\n                        /// @src 1:85:934  \"contract CardInventory {...\"\n                        let memPos := mload(64)\n                        mstore(memPos, and(expr, sub(shl(160, 1), 1)))\n                        return(memPos, 32)\n                    }\n                    case 0x38d5d7d1 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let value_1 := and(sload(0), sub(shl(160, 1), 1))\n                        let memPos_1 := mload(64)\n                        mstore(memPos_1, value_1)\n                        return(memPos_1, 32)\n                    }\n                    case 0x48dccd56 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        let cleaned_1 := and(sload(0), sub(shl(160, 1), 1))\n                        /// @src 1:771:797  \"cardNFT.cardTypes(tokenId)\"\n                        let _4 := /** @src 1:85:934  \"contract CardInventory {...\" */ mload(64)\n                        /// @src 1:771:797  \"cardNFT.cardTypes(tokenId)\"\n                        mstore(_4, /** @src 1:85:934  \"contract CardInventory {...\" */ shl(225, 0x7553606d))\n                        mstore(/** @src 1:771:797  \"cardNFT.cardTypes(tokenId)\" */ add(_4, /** @src 1:85:934  \"contract CardInventory {...\" */ 4), calldataload(4))\n                        /// @src 1:771:797  \"cardNFT.cardTypes(tokenId)\"\n                        let _5 := staticcall(gas(), cleaned_1, _4, 36, _4, /** @src 1:85:934  \"contract CardInventory {...\" */ 32)\n                        /// @src 1:771:797  \"cardNFT.cardTypes(tokenId)\"\n                        if iszero(_5)\n                        {\n                            /// @src 1:85:934  \"contract CardInventory {...\"\n                            let pos_1 := mload(64)\n                            returndatacopy(pos_1, 0, returndatasize())\n                            revert(pos_1, returndatasize())\n                        }\n                        /// @src 1:771:797  \"cardNFT.cardTypes(tokenId)\"\n                        let expr_1 := /** @src 1:85:934  \"contract CardInventory {...\" */ 0\n                        /// @src 1:771:797  \"cardNFT.cardTypes(tokenId)\"\n                        if _5\n                        {\n                            let _6 := /** @src 1:85:934  \"contract CardInventory {...\" */ 32\n                            /// @src 1:771:797  \"cardNFT.cardTypes(tokenId)\"\n                            if gt(/** @src 1:85:934  \"contract CardInventory {...\" */ 32, /** @src 1:771:797  \"cardNFT.cardTypes(tokenId)\" */ returndatasize()) { _6 := returndatasize() }\n                            finalize_allocation(_4, _6)\n                            let value0 := /** @src 1:85:934  \"contract CardInventory {...\" */ 0\n                            if slt(sub(/** @src 1:771:797  \"cardNFT.cardTypes(tokenId)\" */ add(_4, _6), _4), /** @src 1:85:934  \"contract CardInventory {...\" */ 32) { revert(0, 0) }\n                            value0 := mload(/** @src 1:771:797  \"cardNFT.cardTypes(tokenId)\" */ _4)\n                            expr_1 := value0\n                        }\n                        /// @src 1:85:934  \"contract CardInventory {...\"\n                        let memPos_2 := mload(64)\n                        mstore(memPos_2, expr_1)\n                        return(memPos_2, 32)\n                    }\n                    case 0x88d9f40d {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        let value0_1 := abi_decode_address()\n                        let cleaned_2 := and(sload(0), sub(shl(160, 1), 1))\n                        /// @src 1:646:673  \"cardNFT.tokensOfOwner(user)\"\n                        let _7 := /** @src 1:85:934  \"contract CardInventory {...\" */ mload(64)\n                        /// @src 1:646:673  \"cardNFT.tokensOfOwner(user)\"\n                        mstore(_7, /** @src 1:85:934  \"contract CardInventory {...\" */ shl(226, 0x21188547))\n                        mstore(/** @src 1:646:673  \"cardNFT.tokensOfOwner(user)\" */ add(_7, /** @src 1:85:934  \"contract CardInventory {...\" */ 4), and(value0_1, sub(shl(160, 1), 1)))\n                        /// @src 1:646:673  \"cardNFT.tokensOfOwner(user)\"\n                        let _8 := staticcall(gas(), cleaned_2, _7, 36, _7, /** @src 1:85:934  \"contract CardInventory {...\" */ 0)\n                        /// @src 1:646:673  \"cardNFT.tokensOfOwner(user)\"\n                        if iszero(_8)\n                        {\n                            /// @src 1:85:934  \"contract CardInventory {...\"\n                            let pos_2 := mload(64)\n                            returndatacopy(pos_2, 0, returndatasize())\n                            revert(pos_2, returndatasize())\n                        }\n                        /// @src 1:646:673  \"cardNFT.tokensOfOwner(user)\"\n                        let expr_mpos := /** @src 1:85:934  \"contract CardInventory {...\" */ 0\n                        /// @src 1:646:673  \"cardNFT.tokensOfOwner(user)\"\n                        if _8\n                        {\n                            let _9 := returndatasize()\n                            returndatacopy(_7, /** @src 1:85:934  \"contract CardInventory {...\" */ 0, /** @src 1:646:673  \"cardNFT.tokensOfOwner(user)\" */ _9)\n                            finalize_allocation(_7, _9)\n                            let _10 := add(_7, _9)\n                            /// @src 1:85:934  \"contract CardInventory {...\"\n                            if slt(sub(_10, _7), 32) { revert(0, 0) }\n                            let offset := mload(_7)\n                            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n                            let _11 := add(_7, offset)\n                            if iszero(slt(add(_11, 0x1f), _10)) { revert(0, 0) }\n                            let length := mload(_11)\n                            if gt(length, 0xffffffffffffffff)\n                            {\n                                mstore(0, shl(224, 0x4e487b71))\n                                mstore(4, 0x41)\n                                revert(0, /** @src 1:646:673  \"cardNFT.tokensOfOwner(user)\" */ 36)\n                            }\n                            /// @src 1:85:934  \"contract CardInventory {...\"\n                            let _12 := shl(5, length)\n                            let memPtr := mload(64)\n                            finalize_allocation(memPtr, add(_12, 32))\n                            let dst := memPtr\n                            mstore(memPtr, length)\n                            dst := add(memPtr, 32)\n                            let srcEnd := add(add(_11, _12), 32)\n                            if gt(srcEnd, _10) { revert(0, 0) }\n                            let src := add(_11, 32)\n                            for { } lt(src, srcEnd) { src := add(src, 32) }\n                            {\n                                mstore(dst, mload(src))\n                                dst := add(dst, 32)\n                            }\n                            /// @src 1:646:673  \"cardNFT.tokensOfOwner(user)\"\n                            expr_mpos := memPtr\n                        }\n                        /// @src 1:85:934  \"contract CardInventory {...\"\n                        let memPos_3 := mload(64)\n                        let tail := add(memPos_3, 32)\n                        mstore(memPos_3, 32)\n                        let pos_3 := tail\n                        let length_1 := mload(expr_mpos)\n                        mstore(tail, length_1)\n                        pos_3 := add(memPos_3, 64)\n                        let srcPtr := add(expr_mpos, 32)\n                        let i := 0\n                        for { } lt(i, length_1) { i := add(i, 1) }\n                        {\n                            mstore(pos_3, mload(srcPtr))\n                            pos_3 := add(pos_3, 32)\n                            srcPtr := add(srcPtr, 32)\n                        }\n                        return(memPos_3, sub(pos_3, memPos_3))\n                    }\n                    case 0x99326333 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                        let value0_2 := abi_decode_address()\n                        if iszero(/** @src 1:335:359  \"msg.sender == gameMaster\" */ eq(/** @src 1:335:345  \"msg.sender\" */ caller(), /** @src 1:85:934  \"contract CardInventory {...\" */ and(sload(1), sub(shl(160, 1), 1))))\n                        {\n                            let memPtr_1 := mload(64)\n                            mstore(memPtr_1, shl(229, 4594637))\n                            mstore(add(memPtr_1, 4), 32)\n                            mstore(add(memPtr_1, 36), 14)\n                            mstore(add(memPtr_1, 68), \"Not authorized\")\n                            revert(memPtr_1, 100)\n                        }\n                        let cleaned_3 := and(sload(0), sub(shl(160, 1), 1))\n                        /// @src 1:508:538  \"cardNFT.mintCard(to, cardType)\"\n                        let _13 := /** @src 1:85:934  \"contract CardInventory {...\" */ mload(64)\n                        /// @src 1:508:538  \"cardNFT.mintCard(to, cardType)\"\n                        mstore(_13, /** @src 1:85:934  \"contract CardInventory {...\" */ shl(224, 0x64e2c857))\n                        mstore(/** @src 1:508:538  \"cardNFT.mintCard(to, cardType)\" */ add(_13, /** @src 1:85:934  \"contract CardInventory {...\" */ 4), and(value0_2, sub(shl(160, 1), 1)))\n                        mstore(add(/** @src 1:508:538  \"cardNFT.mintCard(to, cardType)\" */ _13, /** @src 1:85:934  \"contract CardInventory {...\" */ 36), calldataload(36))\n                        /// @src 1:508:538  \"cardNFT.mintCard(to, cardType)\"\n                        let _14 := call(gas(), cleaned_3, /** @src 1:85:934  \"contract CardInventory {...\" */ 0, /** @src 1:508:538  \"cardNFT.mintCard(to, cardType)\" */ _13, 68, _13, /** @src 1:85:934  \"contract CardInventory {...\" */ 32)\n                        /// @src 1:508:538  \"cardNFT.mintCard(to, cardType)\"\n                        if iszero(_14)\n                        {\n                            /// @src 1:85:934  \"contract CardInventory {...\"\n                            let pos_4 := mload(64)\n                            returndatacopy(pos_4, 0, returndatasize())\n                            revert(pos_4, returndatasize())\n                        }\n                        /// @src 1:508:538  \"cardNFT.mintCard(to, cardType)\"\n                        let expr_2 := /** @src 1:85:934  \"contract CardInventory {...\" */ 0\n                        /// @src 1:508:538  \"cardNFT.mintCard(to, cardType)\"\n                        if _14\n                        {\n                            let _15 := /** @src 1:85:934  \"contract CardInventory {...\" */ 32\n                            /// @src 1:508:538  \"cardNFT.mintCard(to, cardType)\"\n                            if gt(/** @src 1:85:934  \"contract CardInventory {...\" */ 32, /** @src 1:508:538  \"cardNFT.mintCard(to, cardType)\" */ returndatasize()) { _15 := returndatasize() }\n                            finalize_allocation(_13, _15)\n                            let value0_3 := /** @src 1:85:934  \"contract CardInventory {...\" */ 0\n                            if slt(sub(/** @src 1:508:538  \"cardNFT.mintCard(to, cardType)\" */ add(_13, _15), _13), /** @src 1:85:934  \"contract CardInventory {...\" */ 32) { revert(0, 0) }\n                            value0_3 := mload(/** @src 1:508:538  \"cardNFT.mintCard(to, cardType)\" */ _13)\n                            expr_2 := value0_3\n                        }\n                        /// @src 1:85:934  \"contract CardInventory {...\"\n                        let memPos_4 := mload(64)\n                        mstore(memPos_4, expr_2)\n                        return(memPos_4, 32)\n                    }\n                    case 0xbdf84ae7 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let value_2 := and(sload(/** @src 1:141:166  \"address public gameMaster\" */ 1), /** @src 1:85:934  \"contract CardInventory {...\" */ sub(shl(160, 1), 1))\n                        let memPos_5 := mload(64)\n                        mstore(memPos_5, value_2)\n                        return(memPos_5, 32)\n                    }\n                }\n                revert(0, 0)\n            }\n            function abi_decode_address() -> value\n            {\n                value := calldataload(4)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n            }\n            function finalize_allocation(memPtr, size)\n            {\n                let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                {\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 1:85:934  \"contract CardInventory {...\" */ shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(/** @src -1:-1:-1 */ 0, /** @src 1:85:934  \"contract CardInventory {...\" */ 0x24)\n                }\n                mstore(64, newFreePtr)\n            }\n        }\n        data \".metadata\" hex\"a2646970667358221220f71a64ab4cf76b58cd25c477ed458d60cab25c4c9bf8b0be43e1b85d38e93cb364736f6c634300081c0033\"\n    }\n}\n",
					"hash": "ff6186414b7b9efad5834bcec5f7db41b8b23f9d2f1fe21ae90e2481666239da",
					"factoryDependencies": {}
				}
			}
		},
		"sources": {
			"contracts/Card.sol": {
				"id": 0,
				"ast": {
					"absolutePath": "contracts/Card.sol",
					"exportedSymbols": {
						"Card": [
							278
						]
					},
					"id": 279,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Card",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 278,
							"linearizedBaseContracts": [
								278
							],
							"name": "Card",
							"nameLocation": "70:4:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "06fdde03",
									"id": 4,
									"mutability": "mutable",
									"name": "name",
									"nameLocation": "96:4:0",
									"nodeType": "VariableDeclaration",
									"scope": 278,
									"src": "82:35:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 2,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "82:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "4361726447616d6543617264",
										"id": 3,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "103:14:0",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_16a904d8b20ff6ebda253c194ec4689c2968a859bbb742277a7da131c5087dd2",
											"typeString": "literal_string \"CardGameCard\""
										},
										"value": "CardGameCard"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "95d89b41",
									"id": 7,
									"mutability": "mutable",
									"name": "symbol",
									"nameLocation": "138:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 278,
									"src": "124:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 5,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "124:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "434743",
										"id": 6,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "147:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_bf3c2a73b082250aafee9854c78b81a187ff810cfe545af40189047f119b9e2b",
											"typeString": "literal_string \"CGC\""
										},
										"value": "CGC"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "75794a3c",
									"id": 9,
									"mutability": "mutable",
									"name": "nextTokenId",
									"nameLocation": "173:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 278,
									"src": "161:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 8,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "161:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "6352211e",
									"id": 13,
									"mutability": "mutable",
									"name": "ownerOf",
									"nameLocation": "223:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 278,
									"src": "191:39:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 12,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 10,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "199:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "191:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 11,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "207:7:0",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "70a08231",
									"id": 17,
									"mutability": "mutable",
									"name": "balanceOf",
									"nameLocation": "269:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 278,
									"src": "237:41:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 16,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 14,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "245:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "237:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 15,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "256:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "eaa6c0da",
									"id": 21,
									"mutability": "mutable",
									"name": "cardTypes",
									"nameLocation": "314:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 278,
									"src": "285:38:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
										"typeString": "mapping(uint256 => uint256)"
									},
									"typeName": {
										"id": 20,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 18,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "293:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "285:21:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
											"typeString": "mapping(uint256 => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 19,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "301:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "acdeb5b9",
									"id": 25,
									"mutability": "mutable",
									"name": "tokenApprovals",
									"nameLocation": "362:14:0",
									"nodeType": "VariableDeclaration",
									"scope": 278,
									"src": "330:46:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 24,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 22,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "338:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "330:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 23,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "346:7:0",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 33,
									"name": "Transfer",
									"nameLocation": "391:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "416:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 33,
												"src": "400:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "400:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 29,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "438:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 33,
												"src": "422:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "422:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 31,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "455:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 33,
												"src": "442:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 30,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "442:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "399:64:0"
									},
									"src": "385:79:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 41,
									"name": "Approval",
									"nameLocation": "476:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "501:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "485:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 34,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "485:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 37,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "524:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "508:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "508:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "547:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "534:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "534:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "484:71:0"
									},
									"src": "470:86:0"
								},
								{
									"constant": false,
									"functionSelector": "bdf84ae7",
									"id": 43,
									"mutability": "mutable",
									"name": "gameMaster",
									"nameLocation": "579:10:0",
									"nodeType": "VariableDeclaration",
									"scope": 278,
									"src": "564:25:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 42,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "564:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 52,
										"nodeType": "Block",
										"src": "631:43:0",
										"statements": [
											{
												"expression": {
													"id": 50,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 48,
														"name": "gameMaster",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 43,
														"src": "642:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 49,
														"name": "_gameMaster",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 45,
														"src": "655:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "642:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 51,
												"nodeType": "ExpressionStatement",
												"src": "642:24:0"
											}
										]
									},
									"id": 53,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"mutability": "mutable",
												"name": "_gameMaster",
												"nameLocation": "618:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 53,
												"src": "610:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 44,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "610:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "609:21:0"
									},
									"returnParameters": {
										"id": 47,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "631:0:0"
									},
									"scope": 278,
									"src": "598:76:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 64,
										"nodeType": "Block",
										"src": "702:82:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 59,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 56,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "721:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 57,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "725:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "721:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 58,
																"name": "gameMaster",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 43,
																"src": "735:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "721:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420617574686f72697a6564",
															"id": 60,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "747:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36",
																"typeString": "literal_string \"Not authorized\""
															},
															"value": "Not authorized"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36",
																"typeString": "literal_string \"Not authorized\""
															}
														],
														"id": 55,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "713:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 61,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "713:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 62,
												"nodeType": "ExpressionStatement",
												"src": "713:51:0"
											},
											{
												"id": 63,
												"nodeType": "PlaceholderStatement",
												"src": "775:1:0"
											}
										]
									},
									"id": 65,
									"name": "onlyGame",
									"nameLocation": "691:8:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 54,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "699:2:0"
									},
									"src": "682:102:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 109,
										"nodeType": "Block",
										"src": "870:219:0",
										"statements": [
											{
												"assignments": [
													77
												],
												"declarations": [
													{
														"constant": false,
														"id": 77,
														"mutability": "mutable",
														"name": "tokenId",
														"nameLocation": "886:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 109,
														"src": "881:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 76,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "881:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 80,
												"initialValue": {
													"id": 79,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "896:13:0",
													"subExpression": {
														"id": 78,
														"name": "nextTokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 9,
														"src": "896:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "881:28:0"
											},
											{
												"expression": {
													"id": 85,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 81,
															"name": "ownerOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 13,
															"src": "920:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 83,
														"indexExpression": {
															"id": 82,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 77,
															"src": "928:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "920:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 84,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 67,
														"src": "939:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "920:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 86,
												"nodeType": "ExpressionStatement",
												"src": "920:21:0"
											},
											{
												"expression": {
													"id": 90,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "952:15:0",
													"subExpression": {
														"baseExpression": {
															"id": 87,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 17,
															"src": "952:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 89,
														"indexExpression": {
															"id": 88,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "962:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "952:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 91,
												"nodeType": "ExpressionStatement",
												"src": "952:15:0"
											},
											{
												"expression": {
													"id": 96,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 92,
															"name": "cardTypes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 21,
															"src": "978:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 94,
														"indexExpression": {
															"id": 93,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 77,
															"src": "988:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "978:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 95,
														"name": "cardType",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 69,
														"src": "999:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "978:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 97,
												"nodeType": "ExpressionStatement",
												"src": "978:29:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 101,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1040:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 100,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1032:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 99,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1032:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 102,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1032:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 103,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1044:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 104,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 77,
															"src": "1048:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 98,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 33,
														"src": "1023:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1023:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 106,
												"nodeType": "EmitStatement",
												"src": "1018:38:0"
											},
											{
												"expression": {
													"id": 107,
													"name": "tokenId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 77,
													"src": "1074:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 75,
												"id": 108,
												"nodeType": "Return",
												"src": "1067:14:0"
											}
										]
									},
									"functionSelector": "64e2c857",
									"id": 110,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 72,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 71,
												"name": "onlyGame",
												"nameLocations": [
													"846:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 65,
												"src": "846:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "846:8:0"
										}
									],
									"name": "mintCard",
									"nameLocation": "801:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "818:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 110,
												"src": "810:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "810:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "cardType",
												"nameLocation": "827:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 110,
												"src": "822:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 68,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "822:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "809:27:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 110,
												"src": "864:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 73,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "864:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "863:6:0"
									},
									"scope": 278,
									"src": "792:297:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 140,
										"nodeType": "Block",
										"src": "1149:159:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 123,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 118,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1168:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 119,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1172:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1168:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"baseExpression": {
																	"id": 120,
																	"name": "ownerOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1182:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																		"typeString": "mapping(uint256 => address)"
																	}
																},
																"id": 122,
																"indexExpression": {
																	"id": 121,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 114,
																	"src": "1190:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1182:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1168:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f74206f776e6572",
															"id": 124,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1200:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c266efca4f4ed37612271196433531dcbb4fca89a694d568d1e290e32feb1682",
																"typeString": "literal_string \"Not owner\""
															},
															"value": "Not owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c266efca4f4ed37612271196433531dcbb4fca89a694d568d1e290e32feb1682",
																"typeString": "literal_string \"Not owner\""
															}
														],
														"id": 117,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1160:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 125,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1160:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 126,
												"nodeType": "ExpressionStatement",
												"src": "1160:52:0"
											},
											{
												"expression": {
													"id": 131,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 127,
															"name": "tokenApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 25,
															"src": "1223:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 129,
														"indexExpression": {
															"id": 128,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 114,
															"src": "1238:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1223:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 130,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 112,
														"src": "1249:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1223:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 132,
												"nodeType": "ExpressionStatement",
												"src": "1223:28:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 134,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1276:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 135,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1280:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1276:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 136,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 112,
															"src": "1288:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 137,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 114,
															"src": "1292:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 133,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 41,
														"src": "1267:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1267:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 139,
												"nodeType": "EmitStatement",
												"src": "1262:38:0"
											}
										]
									},
									"functionSelector": "095ea7b3",
									"id": 141,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "1106:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 112,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1122:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "1114:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 111,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1114:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1131:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "1126:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 113,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1126:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1113:26:0"
									},
									"returnParameters": {
										"id": 116,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1149:0:0"
									},
									"scope": 278,
									"src": "1097:211:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 152,
										"nodeType": "Block",
										"src": "1381:49:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 148,
														"name": "tokenApprovals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 25,
														"src": "1399:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 150,
													"indexExpression": {
														"id": 149,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 143,
														"src": "1414:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1399:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 147,
												"id": 151,
												"nodeType": "Return",
												"src": "1392:30:0"
											}
										]
									},
									"functionSelector": "081812fc",
									"id": 153,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "1325:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 144,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 143,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1342:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 153,
												"src": "1337:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 142,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1337:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1336:14:0"
									},
									"returnParameters": {
										"id": 147,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 146,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 153,
												"src": "1372:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 145,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1372:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1371:9:0"
									},
									"scope": 278,
									"src": "1316:114:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 213,
										"nodeType": "Block",
										"src": "1507:334:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 173,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 166,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 163,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1526:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 164,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1530:6:0",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1526:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 165,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 155,
																	"src": "1540:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "1526:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 172,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 167,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1548:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 168,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1552:6:0",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1548:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [
																		{
																			"id": 170,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 159,
																			"src": "1574:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 169,
																		"name": "getApproved",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 153,
																		"src": "1562:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																			"typeString": "function (uint256) view returns (address)"
																		}
																	},
																	"id": 171,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1562:20:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "1548:34:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1526:56:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420616c6c6f776564",
															"id": 174,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1584:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_98bb0d434888d1b812a0a4194c9568f0648e9ed0f8cbde68f7f17a68afe7b6cd",
																"typeString": "literal_string \"Not allowed\""
															},
															"value": "Not allowed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_98bb0d434888d1b812a0a4194c9568f0648e9ed0f8cbde68f7f17a68afe7b6cd",
																"typeString": "literal_string \"Not allowed\""
															}
														],
														"id": 162,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1518:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 175,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1518:80:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 176,
												"nodeType": "ExpressionStatement",
												"src": "1518:80:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 182,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 178,
																	"name": "ownerOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1617:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																		"typeString": "mapping(uint256 => address)"
																	}
																},
																"id": 180,
																"indexExpression": {
																	"id": 179,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 159,
																	"src": "1625:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1617:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 181,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 155,
																"src": "1637:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1617:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c6964206f776e6572",
															"id": 183,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1643:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_110461b12e459dc76e692e7a47f9621cf45c7d48020c3c7b2066107cdf1f52ae",
																"typeString": "literal_string \"Invalid owner\""
															},
															"value": "Invalid owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_110461b12e459dc76e692e7a47f9621cf45c7d48020c3c7b2066107cdf1f52ae",
																"typeString": "literal_string \"Invalid owner\""
															}
														],
														"id": 177,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1609:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 184,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1609:50:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 185,
												"nodeType": "ExpressionStatement",
												"src": "1609:50:0"
											},
											{
												"expression": {
													"id": 190,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 186,
															"name": "ownerOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 13,
															"src": "1672:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 188,
														"indexExpression": {
															"id": 187,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 159,
															"src": "1680:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1672:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 189,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 157,
														"src": "1691:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1672:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 191,
												"nodeType": "ExpressionStatement",
												"src": "1672:21:0"
											},
											{
												"expression": {
													"id": 195,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "--",
													"prefix": false,
													"src": "1704:17:0",
													"subExpression": {
														"baseExpression": {
															"id": 192,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 17,
															"src": "1704:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 194,
														"indexExpression": {
															"id": 193,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 155,
															"src": "1714:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1704:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 196,
												"nodeType": "ExpressionStatement",
												"src": "1704:17:0"
											},
											{
												"expression": {
													"id": 200,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "1732:15:0",
													"subExpression": {
														"baseExpression": {
															"id": 197,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 17,
															"src": "1732:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 199,
														"indexExpression": {
															"id": 198,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 157,
															"src": "1742:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1732:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 201,
												"nodeType": "ExpressionStatement",
												"src": "1732:15:0"
											},
											{
												"expression": {
													"id": 205,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "1758:30:0",
													"subExpression": {
														"baseExpression": {
															"id": 202,
															"name": "tokenApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 25,
															"src": "1765:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 204,
														"indexExpression": {
															"id": 203,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 159,
															"src": "1780:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1765:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 206,
												"nodeType": "ExpressionStatement",
												"src": "1758:30:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 208,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 155,
															"src": "1815:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 209,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 157,
															"src": "1821:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 210,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 159,
															"src": "1825:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 207,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 33,
														"src": "1806:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 211,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1806:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 212,
												"nodeType": "EmitStatement",
												"src": "1801:32:0"
											}
										]
									},
									"functionSelector": "23b872dd",
									"id": 214,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "1447:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1468:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "1460:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 154,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1460:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1482:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "1474:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 156,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1474:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 159,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1491:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "1486:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 158,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1486:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1459:40:0"
									},
									"returnParameters": {
										"id": 161,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1507:0:0"
									},
									"scope": 278,
									"src": "1438:403:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 276,
										"nodeType": "Block",
										"src": "1924:354:0",
										"statements": [
											{
												"assignments": [
													223
												],
												"declarations": [
													{
														"constant": false,
														"id": 223,
														"mutability": "mutable",
														"name": "balance",
														"nameLocation": "1940:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 276,
														"src": "1935:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 222,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "1935:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 227,
												"initialValue": {
													"baseExpression": {
														"id": 224,
														"name": "balanceOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 17,
														"src": "1950:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 226,
													"indexExpression": {
														"id": 225,
														"name": "user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 216,
														"src": "1960:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1950:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1935:30:0"
											},
											{
												"assignments": [
													232
												],
												"declarations": [
													{
														"constant": false,
														"id": 232,
														"mutability": "mutable",
														"name": "tokens",
														"nameLocation": "1990:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 276,
														"src": "1976:20:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 230,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "1976:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 231,
															"nodeType": "ArrayTypeName",
															"src": "1976:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 238,
												"initialValue": {
													"arguments": [
														{
															"id": 236,
															"name": "balance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 223,
															"src": "2010:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 235,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "1999:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 233,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "2003:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 234,
															"nodeType": "ArrayTypeName",
															"src": "2003:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														}
													},
													"id": 237,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1999:19:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1976:42:0"
											},
											{
												"assignments": [
													240
												],
												"declarations": [
													{
														"constant": false,
														"id": 240,
														"mutability": "mutable",
														"name": "count",
														"nameLocation": "2034:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 276,
														"src": "2029:10:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 239,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "2029:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 242,
												"initialValue": {
													"hexValue": "30",
													"id": 241,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2042:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2029:14:0"
											},
											{
												"body": {
													"id": 272,
													"nodeType": "Block",
													"src": "2095:150:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 257,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 253,
																		"name": "ownerOf",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 13,
																		"src": "2114:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																			"typeString": "mapping(uint256 => address)"
																		}
																	},
																	"id": 255,
																	"indexExpression": {
																		"id": 254,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 244,
																		"src": "2122:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2114:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 256,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 216,
																	"src": "2128:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "2114:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 271,
															"nodeType": "IfStatement",
															"src": "2110:124:0",
															"trueBody": {
																"id": 270,
																"nodeType": "Block",
																"src": "2134:100:0",
																"statements": [
																	{
																		"expression": {
																			"id": 263,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"id": 258,
																					"name": "tokens",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 232,
																					"src": "2153:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																						"typeString": "uint256[] memory"
																					}
																				},
																				"id": 261,
																				"indexExpression": {
																					"id": 260,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "UnaryOperation",
																					"operator": "++",
																					"prefix": false,
																					"src": "2160:7:0",
																					"subExpression": {
																						"id": 259,
																						"name": "count",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 240,
																						"src": "2160:5:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "2153:15:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 262,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 244,
																				"src": "2171:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "2153:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 264,
																		"nodeType": "ExpressionStatement",
																		"src": "2153:19:0"
																	},
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 267,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 265,
																				"name": "count",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 240,
																				"src": "2195:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"id": 266,
																				"name": "balance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 223,
																				"src": "2204:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "2195:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 269,
																		"nodeType": "IfStatement",
																		"src": "2191:27:0",
																		"trueBody": {
																			"id": 268,
																			"nodeType": "Break",
																			"src": "2213:5:0"
																		}
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 249,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 247,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 244,
														"src": "2073:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 248,
														"name": "nextTokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 9,
														"src": "2077:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2073:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 273,
												"initializationExpression": {
													"assignments": [
														244
													],
													"declarations": [
														{
															"constant": false,
															"id": 244,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2066:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 273,
															"src": "2061:6:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 243,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "2061:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 246,
													"initialValue": {
														"hexValue": "30",
														"id": 245,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2070:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2061:10:0"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 251,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "2090:3:0",
														"subExpression": {
															"id": 250,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 244,
															"src": "2090:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 252,
													"nodeType": "ExpressionStatement",
													"src": "2090:3:0"
												},
												"nodeType": "ForStatement",
												"src": "2056:189:0"
											},
											{
												"expression": {
													"id": 274,
													"name": "tokens",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 232,
													"src": "2264:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"functionReturnParameters": 221,
												"id": 275,
												"nodeType": "Return",
												"src": "2257:13:0"
											}
										]
									},
									"functionSelector": "8462151c",
									"id": 277,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokensOfOwner",
									"nameLocation": "1858:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 217,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 216,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1880:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 277,
												"src": "1872:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 215,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1872:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1871:14:0"
									},
									"returnParameters": {
										"id": 221,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 277,
												"src": "1909:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 218,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "1909:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 219,
													"nodeType": "ArrayTypeName",
													"src": "1909:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1908:15:0"
									},
									"scope": 278,
									"src": "1849:429:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 279,
							"src": "61:2220:0",
							"usedErrors": [],
							"usedEvents": [
								33,
								41
							]
						}
					],
					"src": "33:2250:0"
				}
			},
			"contracts/CardInventory.sol": {
				"id": 1,
				"ast": {
					"absolutePath": "contracts/CardInventory.sol",
					"exportedSymbols": {
						"Card": [
							278
						],
						"CardInventory": [
							374
						]
					},
					"id": 375,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 280,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:1"
						},
						{
							"absolutePath": "contracts/Card.sol",
							"file": "./Card.sol",
							"id": 281,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 375,
							"sourceUnit": 279,
							"src": "61:20:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "CardInventory",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 374,
							"linearizedBaseContracts": [
								374
							],
							"name": "CardInventory",
							"nameLocation": "94:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "38d5d7d1",
									"id": 284,
									"mutability": "mutable",
									"name": "cardNFT",
									"nameLocation": "127:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 374,
									"src": "115:19:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_Card_$278",
										"typeString": "contract Card"
									},
									"typeName": {
										"id": 283,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 282,
											"name": "Card",
											"nameLocations": [
												"115:4:1"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 278,
											"src": "115:4:1"
										},
										"referencedDeclaration": 278,
										"src": "115:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Card_$278",
											"typeString": "contract Card"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "bdf84ae7",
									"id": 286,
									"mutability": "mutable",
									"name": "gameMaster",
									"nameLocation": "156:10:1",
									"nodeType": "VariableDeclaration",
									"scope": 374,
									"src": "141:25:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 285,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "141:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 302,
										"nodeType": "Block",
										"src": "205:77:1",
										"statements": [
											{
												"expression": {
													"id": 295,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 291,
														"name": "cardNFT",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 284,
														"src": "216:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_Card_$278",
															"typeString": "contract Card"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 293,
																"name": "_cardNFT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 288,
																"src": "231:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 292,
															"name": "Card",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 278,
															"src": "226:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_Card_$278_$",
																"typeString": "type(contract Card)"
															}
														},
														"id": 294,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "226:14:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_Card_$278",
															"typeString": "contract Card"
														}
													},
													"src": "216:24:1",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Card_$278",
														"typeString": "contract Card"
													}
												},
												"id": 296,
												"nodeType": "ExpressionStatement",
												"src": "216:24:1"
											},
											{
												"expression": {
													"id": 300,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 297,
														"name": "gameMaster",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 286,
														"src": "251:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 298,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "264:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 299,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "268:6:1",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "264:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "251:23:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 301,
												"nodeType": "ExpressionStatement",
												"src": "251:23:1"
											}
										]
									},
									"id": 303,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 289,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 288,
												"mutability": "mutable",
												"name": "_cardNFT",
												"nameLocation": "195:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 303,
												"src": "187:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 287,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "187:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "186:18:1"
									},
									"returnParameters": {
										"id": 290,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "205:0:1"
									},
									"scope": 374,
									"src": "175:107:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 314,
										"nodeType": "Block",
										"src": "316:82:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 309,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 306,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "335:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 307,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "339:6:1",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "335:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 308,
																"name": "gameMaster",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 286,
																"src": "349:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "335:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420617574686f72697a6564",
															"id": 310,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "361:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36",
																"typeString": "literal_string \"Not authorized\""
															},
															"value": "Not authorized"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36",
																"typeString": "literal_string \"Not authorized\""
															}
														],
														"id": 305,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "327:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 311,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "327:51:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 312,
												"nodeType": "ExpressionStatement",
												"src": "327:51:1"
											},
											{
												"id": 313,
												"nodeType": "PlaceholderStatement",
												"src": "389:1:1"
											}
										]
									},
									"id": 315,
									"name": "onlyGameMaster",
									"nameLocation": "299:14:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 304,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "313:2:1"
									},
									"src": "290:108:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 332,
										"nodeType": "Block",
										"src": "490:56:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 328,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 317,
															"src": "525:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 329,
															"name": "cardType",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 319,
															"src": "529:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 326,
															"name": "cardNFT",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 284,
															"src": "508:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_Card_$278",
																"typeString": "contract Card"
															}
														},
														"id": 327,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "516:8:1",
														"memberName": "mintCard",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 110,
														"src": "508:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (address,uint256) external returns (uint256)"
														}
													},
													"id": 330,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "508:30:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 325,
												"id": 331,
												"nodeType": "Return",
												"src": "501:37:1"
											}
										]
									},
									"functionSelector": "99326333",
									"id": 333,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 322,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 321,
												"name": "onlyGameMaster",
												"nameLocations": [
													"460:14:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 315,
												"src": "460:14:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "460:14:1"
										}
									],
									"name": "giveCard",
									"nameLocation": "415:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 320,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 317,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "432:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 333,
												"src": "424:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 316,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "424:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 319,
												"mutability": "mutable",
												"name": "cardType",
												"nameLocation": "441:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 333,
												"src": "436:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 318,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "436:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "423:27:1"
									},
									"returnParameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 324,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 333,
												"src": "484:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 323,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "484:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "483:6:1"
									},
									"scope": 374,
									"src": "406:140:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 346,
										"nodeType": "Block",
										"src": "628:53:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 343,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 335,
															"src": "668:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 341,
															"name": "cardNFT",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 284,
															"src": "646:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_Card_$278",
																"typeString": "contract Card"
															}
														},
														"id": 342,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "654:13:1",
														"memberName": "tokensOfOwner",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 277,
														"src": "646:21:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (address) view external returns (uint256[] memory)"
														}
													},
													"id": 344,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "646:27:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"functionReturnParameters": 340,
												"id": 345,
												"nodeType": "Return",
												"src": "639:34:1"
											}
										]
									},
									"functionSelector": "88d9f40d",
									"id": 347,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUserCards",
									"nameLocation": "563:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 336,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 335,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "584:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 347,
												"src": "576:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 334,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "576:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "575:14:1"
									},
									"returnParameters": {
										"id": 340,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 347,
												"src": "613:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 337,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "613:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 338,
													"nodeType": "ArrayTypeName",
													"src": "613:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "612:15:1"
									},
									"scope": 374,
									"src": "554:127:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 359,
										"nodeType": "Block",
										"src": "753:52:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 356,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 349,
															"src": "789:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 354,
															"name": "cardNFT",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 284,
															"src": "771:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_Card_$278",
																"typeString": "contract Card"
															}
														},
														"id": 355,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "779:9:1",
														"memberName": "cardTypes",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 21,
														"src": "771:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view external returns (uint256)"
														}
													},
													"id": 357,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "771:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 353,
												"id": 358,
												"nodeType": "Return",
												"src": "764:33:1"
											}
										]
									},
									"functionSelector": "48dccd56",
									"id": 360,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getCardType",
									"nameLocation": "698:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "715:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 360,
												"src": "710:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 348,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "710:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "709:14:1"
									},
									"returnParameters": {
										"id": 353,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 352,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 360,
												"src": "747:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 351,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "747:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "746:6:1"
									},
									"scope": 374,
									"src": "689:116:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 372,
										"nodeType": "Block",
										"src": "881:50:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 369,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 362,
															"src": "915:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 367,
															"name": "cardNFT",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 284,
															"src": "899:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_Card_$278",
																"typeString": "contract Card"
															}
														},
														"id": 368,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "907:7:1",
														"memberName": "ownerOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 13,
														"src": "899:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view external returns (address)"
														}
													},
													"id": 370,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "899:24:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 366,
												"id": 371,
												"nodeType": "Return",
												"src": "892:31:1"
											}
										]
									},
									"functionSelector": "010abbd0",
									"id": 373,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getCardOwner",
									"nameLocation": "822:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 362,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "840:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 373,
												"src": "835:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 361,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "835:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "834:14:1"
									},
									"returnParameters": {
										"id": 366,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 365,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 373,
												"src": "872:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 364,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "872:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "871:9:1"
									},
									"scope": 374,
									"src": "813:118:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 375,
							"src": "85:849:1",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "33:903:1"
				}
			}
		},
		"errors": [],
		"version": "0.8.28",
		"long_version": "0.8.28+commit.7893614a.Emscripten.clang",
		"revive_version": "0.1.0-dev.12+commit.66f9a4d.llvm-18.1.8"
	}
}