{
	"compiler": {
		"version": "0.8.28+commit.7893614a"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_cardNFT",
						"type": "address"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"inputs": [],
				"name": "cardNFT",
				"outputs": [
					{
						"internalType": "contract Card",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "gameMaster",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "tokenId",
						"type": "uint256"
					}
				],
				"name": "getCardOwner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "tokenId",
						"type": "uint256"
					}
				],
				"name": "getCardType",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "user",
						"type": "address"
					}
				],
				"name": "getUserCards",
				"outputs": [
					{
						"internalType": "uint256[]",
						"name": "",
						"type": "uint256[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "cardType",
						"type": "uint256"
					}
				],
				"name": "giveCard",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/CardInventory.sol": "CardInventory"
		},
		"evmVersion": "cancun",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"details": {
				"constantOptimizer": false,
				"cse": false,
				"deduplicate": false,
				"inliner": false,
				"jumpdestRemover": false,
				"orderLiterals": false,
				"peephole": false,
				"simpleCounterForLoopUncheckedIncrement": true,
				"yul": true,
				"yulDetails": {
					"optimizerSteps": "dhfoDgvulfnTUtnIfxa[r]EscLMVcul [j]Trpeulxa[r]cLgvifMCTUca[r]LSsTFOtfDnca[r]IulcscCTUtgvifMx[scCTUt] TOntnfDIulgvifMjmul[jul] VcTOcul jmul:fDnTOcmuO",
					"stackAllocation": true
				}
			},
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"contracts/Card.sol": {
			"keccak256": "0x818b1d9c58ea846c38ccd812e4a54cbbb9a8732ed7a684e1c817ef5dc12ee5a6",
			"license": "MIT",
			"urls": [
				"bzz-raw://ccfc03703e8707e3009aa619cacc1df4ec33dbfb4d6dfe5bf9043f585cee664c",
				"dweb:/ipfs/QmWoNvzz9mWbC2LGwSadR5faw1eGnfuSUDNUfeFCUZfxQ8"
			]
		},
		"contracts/CardInventory.sol": {
			"keccak256": "0x3bd5f6f718bd4d12f3a9237026f7f342d3f9156849266e06c4b0cd61d284533d",
			"license": "MIT",
			"urls": [
				"bzz-raw://8cfec2bb96dd260ac778a8dbffaa3a84504080471b1a278814865aaa747aa6e2",
				"dweb:/ipfs/QmVM6mghtp7u11P1tWL82VDSxodc2a5Rk9pLjk8xuvQKT1"
			]
		}
	},
	"version": 1
}